###### GLOBAL STRING ######
STR_7 : the left val is 
STR_6 : ,con3 is 
STR_9 : var5 equal to con1\n
STR_8 : var1 greater than 1\n
STR_1 : (20373335)\n
STR_3 : con1 is 
STR_2 : C level,test a code has decl,no func\n
STR_5 : con2 is 
STR_4 : \n

###### GLOBAL ARRAY ######

###### GLOBAL VAR ######
[0x8]global_var3: 10
[0xc]con1: 44
[0x14]con4: 888
[0x0]global_var1: 9
[0x10]con2: 678
[0x4]global_var2: 0

###### TEXT ######
JUMP FUNC_main
# func main : stack size 0x14
# param: 
FUNC_main:
	DEF, INT(con3[sp-0x4]), 61
	PRINT_STR STR_1
	PRINT_STR STR_2
	PRINT_STR STR_3
	PRINT_INT INT(con1[data+0xc])
	PRINT_STR STR_4
	PRINT_STR STR_5
	PRINT_INT INT(con2[data+0x10])
	PRINT_STR STR_6
	PRINT_INT INT(con3[sp-0x4])
	PRINT_STR STR_4
	DEF, INT(var1[sp-0x8]), 0
	DEF, INT(var2[sp-0xc]), INT(con3[sp-0x4])
	DEF, INT(var3[sp-0x10]), 0
	GETINT INT(var3[sp-0x10])
	JUMP B_0
B_0:
	JUMP B_1
B_1:
	JUMP B_2
B_2:
	JUMP B_3
	JUMP B_5
B_3:
	JUMP B_4
B_4:
	JUMP B_5
B_5:
	MUL, INT(tmp_int_1[temp]), INT(var3[sp-0x10]), INT(var2[sp-0xc])
	SUB, INT(tmp_int_0[temp]), INT(var2[sp-0xc]), INT(tmp_int_1[temp])
	MUL, INT(tmp_int_3[temp]), INT(con2[data+0x10]), INT(var3[sp-0x10])
	ADD, INT(tmp_int_5[temp]), INT(con1[data+0xc]), INT(con3[sp-0x4])
	MOD, INT(tmp_int_4[temp]), INT(tmp_int_3[temp]), INT(tmp_int_5[temp])
	ADD, INT(tmp_int_2[temp]), INT(tmp_int_0[temp]), INT(tmp_int_4[temp])
	ASS, INT(var1[sp-0x8]), INT(tmp_int_2[temp])
	PRINT_STR STR_7
	PRINT_INT INT(var1[sp-0x8])
	PRINT_STR STR_4
	MUL, INT(tmp_int_7[temp]), INT(var3[sp-0x10]), INT(var2[sp-0xc])
	SUB, INT(tmp_int_6[temp]), INT(var2[sp-0xc]), INT(tmp_int_7[temp])
	MUL, INT(tmp_int_9[temp]), INT(con2[data+0x10]), INT(var3[sp-0x10])
	ADD, INT(tmp_int_11[temp]), INT(con1[data+0xc]), INT(con3[sp-0x4])
	MOD, INT(tmp_int_10[temp]), INT(tmp_int_9[temp]), INT(tmp_int_11[temp])
	ADD, INT(tmp_int_8[temp]), INT(tmp_int_6[temp]), INT(tmp_int_10[temp])
	NEG, INT(tmp_int_12[temp]), INT(con1[data+0xc])
	NEG, INT(tmp_int_13[temp]), INT(tmp_int_12[temp])
	NEG, INT(tmp_int_14[temp]), INT(tmp_int_13[temp])
	DEF, INT(var5[sp-0x14]), INT(tmp_int_14[temp])
	JUMP L_OR_EXP_6
L_OR_EXP_6:
	JUMP L_AND_EXP_8
L_AND_EXP_8:
	GT, INT(tmp_int_15[temp]), INT(var1[sp-0x8]), 1
	ASS, INT(tmp_int_16[temp]), INT(tmp_int_15[temp])
	Branch INT(tmp_int_15[temp]) ? AND_10 : AND_END_9
AND_10:
	JUMP AND_END_9
AND_END_9:
	ASS, INT(tmp_int_17[temp]), INT(tmp_int_16[temp])
	Branch INT(tmp_int_17[temp]) ? OR_END_7 : OR_11
OR_11:
	JUMP OR_END_7
OR_END_7:
	Branch INT(tmp_int_17[temp]) ? IF_BODY_12 : IF_END_13
IF_BODY_12:
	JUMP B_14
B_14:
	PRINT_STR STR_8
	JUMP B_15
B_15:
	JUMP IF_END_13
IF_END_13:
	JUMP L_OR_EXP_16
L_OR_EXP_16:
	JUMP L_AND_EXP_18
L_AND_EXP_18:
	GE, INT(tmp_int_18[temp]), INT(con3[sp-0x4]), 0
	ASS, INT(tmp_int_19[temp]), INT(tmp_int_18[temp])
	Branch INT(tmp_int_18[temp]) ? AND_20 : AND_END_19
AND_20:
	JUMP AND_END_19
AND_END_19:
	ASS, INT(tmp_int_20[temp]), INT(tmp_int_19[temp])
	Branch INT(tmp_int_20[temp]) ? OR_END_17 : OR_21
OR_21:
	JUMP OR_END_17
OR_END_17:
	Branch INT(tmp_int_20[temp]) ? IF_BODY_22 : IF_ELSE_24
IF_BODY_22:
	JUMP B_25
B_25:
	DIV, INT(tmp_int_21[temp]), INT(var1[sp-0x8]), INT(con1[data+0xc])
	MUL, INT(tmp_int_23[temp]), INT(var2[sp-0xc]), 1225
	ADD, INT(tmp_int_22[temp]), INT(tmp_int_21[temp]), INT(tmp_int_23[temp])
	ASS, INT(var3[sp-0x10]), INT(tmp_int_22[temp])
	JUMP B_26
B_26:
	JUMP IF_END_23
IF_ELSE_24:
	JUMP B_27
B_27:
	JUMP L_OR_EXP_28
	JUMP B_38
L_OR_EXP_28:
	JUMP L_AND_EXP_30
L_AND_EXP_30:
	LT, INT(tmp_int_24[temp]), INT(var2[sp-0xc]), INT(con4[data+0x14])
	ASS, INT(tmp_int_25[temp]), INT(tmp_int_24[temp])
	Branch INT(tmp_int_24[temp]) ? AND_32 : AND_END_31
AND_32:
	JUMP AND_END_31
AND_END_31:
	ASS, INT(tmp_int_26[temp]), INT(tmp_int_25[temp])
	Branch INT(tmp_int_26[temp]) ? OR_END_29 : OR_33
OR_33:
	JUMP OR_END_29
OR_END_29:
	Branch INT(tmp_int_26[temp]) ? IF_BODY_34 : IF_END_35
IF_BODY_34:
	JUMP B_36
B_36:
	GETINT INT(var2[sp-0xc])
	JUMP B_37
B_37:
	JUMP IF_END_35
IF_END_35:
	JUMP B_38
B_38:
	JUMP IF_END_23
IF_END_23:
	JUMP L_OR_EXP_39
L_OR_EXP_39:
	JUMP L_AND_EXP_41
L_AND_EXP_41:
	LE, INT(tmp_int_27[temp]), INT(var5[sp-0x14]), INT(con4[data+0x14])
	ASS, INT(tmp_int_28[temp]), INT(tmp_int_27[temp])
	Branch INT(tmp_int_27[temp]) ? AND_43 : AND_END_42
AND_43:
	JUMP AND_END_42
AND_END_42:
	ASS, INT(tmp_int_29[temp]), INT(tmp_int_28[temp])
	Branch INT(tmp_int_29[temp]) ? OR_END_40 : OR_44
OR_44:
	JUMP OR_END_40
OR_END_40:
	Branch INT(tmp_int_29[temp]) ? IF_BODY_45 : IF_END_46
IF_BODY_45:
	JUMP B_47
B_47:
	JUMP L_OR_EXP_48
	JUMP B_68
L_OR_EXP_48:
	JUMP L_AND_EXP_50
L_AND_EXP_50:
	EQ, INT(tmp_int_30[temp]), INT(var5[sp-0x14]), INT(con1[data+0xc])
	ASS, INT(tmp_int_31[temp]), INT(tmp_int_30[temp])
	Branch INT(tmp_int_30[temp]) ? AND_52 : AND_END_51
AND_52:
	JUMP AND_END_51
AND_END_51:
	ASS, INT(tmp_int_32[temp]), INT(tmp_int_31[temp])
	Branch INT(tmp_int_32[temp]) ? OR_END_49 : OR_53
OR_53:
	JUMP OR_END_49
OR_END_49:
	Branch INT(tmp_int_32[temp]) ? IF_BODY_54 : IF_END_55
IF_BODY_54:
	JUMP B_56
B_56:
	PRINT_STR STR_9
	JUMP B_57
B_57:
	JUMP IF_END_55
IF_END_55:
	JUMP L_OR_EXP_58
L_OR_EXP_58:
	JUMP L_AND_EXP_60
L_AND_EXP_60:
	ADD, INT(tmp_int_34[temp]), 22, 1
	MUL, INT(tmp_int_36[temp]), 7, 55
	MOD, INT(tmp_int_37[temp]), INT(tmp_int_36[temp]), 9
	SUB, INT(tmp_int_35[temp]), INT(tmp_int_34[temp]), INT(tmp_int_37[temp])
	DIV, INT(tmp_int_39[temp]), 7, 2
	ADD, INT(tmp_int_38[temp]), INT(tmp_int_35[temp]), INT(tmp_int_39[temp])
	LE, INT(tmp_int_40[temp]), INT(tmp_int_38[temp]), 24
	NEQ, INT(tmp_int_33[temp]), 23, INT(tmp_int_40[temp])
	ASS, INT(tmp_int_41[temp]), INT(tmp_int_33[temp])
	Branch INT(tmp_int_33[temp]) ? AND_62 : AND_END_61
AND_62:
	JUMP AND_END_61
AND_END_61:
	ASS, INT(tmp_int_42[temp]), INT(tmp_int_41[temp])
	Branch INT(tmp_int_42[temp]) ? OR_END_59 : OR_63
OR_63:
	JUMP OR_END_59
OR_END_59:
	Branch INT(tmp_int_42[temp]) ? IF_BODY_64 : IF_END_65
IF_BODY_64:
	JUMP B_66
B_66:
	JUMP B_67
B_67:
	JUMP IF_END_65
IF_END_65:
	JUMP B_68
B_68:
	JUMP IF_END_46
IF_END_46:
	JUMP WHILE_69
WHILE_69:
	JUMP L_OR_EXP_72
L_OR_EXP_72:
	JUMP L_AND_EXP_74
L_AND_EXP_74:
	ASS, INT(tmp_int_43[temp]), 1
	Branch 1 ? AND_76 : AND_END_75
AND_76:
	JUMP AND_END_75
AND_END_75:
	ASS, INT(tmp_int_44[temp]), INT(tmp_int_43[temp])
	Branch INT(tmp_int_44[temp]) ? OR_END_73 : OR_77
OR_77:
	JUMP OR_END_73
OR_END_73:
	Branch INT(tmp_int_44[temp]) ? WHILE_BODY_70 : WHILE_END_71
WHILE_BODY_70:
	JUMP B_78
B_78:
	DEF, INT(i[sp-0x18]), 56
	DEF, INT(j[sp-0x1c]), 0
	JUMP L_OR_EXP_79
	JUMP B_92
L_OR_EXP_79:
	JUMP L_AND_EXP_81
L_AND_EXP_81:
	LE, INT(tmp_int_45[temp]), INT(j[sp-0x1c]), INT(i[sp-0x18])
	ASS, INT(tmp_int_46[temp]), INT(tmp_int_45[temp])
	Branch INT(tmp_int_45[temp]) ? AND_83 : AND_END_82
AND_83:
	JUMP AND_END_82
AND_END_82:
	ASS, INT(tmp_int_47[temp]), INT(tmp_int_46[temp])
	Branch INT(tmp_int_47[temp]) ? OR_END_80 : OR_84
OR_84:
	JUMP OR_END_80
OR_END_80:
	Branch INT(tmp_int_47[temp]) ? IF_BODY_85 : IF_ELSE_87
IF_BODY_85:
	JUMP B_88
B_88:
	JUMP WHILE_END_71
	JUMP B_89
B_89:
	JUMP IF_END_86
IF_ELSE_87:
	JUMP B_90
B_90:
	DEF, INT(k[sp-0x20]), 0
	JUMP WHILE_69
	JUMP B_91
B_91:
	JUMP IF_END_86
IF_END_86:
	JUMP B_92
B_92:
	JUMP WHILE_69
WHILE_END_71:
	RETURN 0
