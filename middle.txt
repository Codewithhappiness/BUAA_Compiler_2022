###### GLOBAL STRING ######
STR_6 : 6
STR_1 : 20373276\n
STR_3 : 2
STR_2 : 1
STR_5 : 4
STR_4 : 3

###### GLOBAL ARRAY ######

###### GLOBAL VAR ######

###### TEXT ######
JUMP FUNC_main
# func main : stack size 0x10
# param: 
FUNC_main:
	DEF, INT(a[sp-0x4]), 0
	DEF, INT(b[sp-0x8]), 0
	GETINT INT(a[sp-0x4])
	GETINT INT(b[sp-0x8])
	PRINT_STR STR_1
	DEF, INT(c[sp-0xc]), 0
	DEF, INT(flag[sp-0x10]), 0
	JUMP L_OR_EXP_0
L_OR_EXP_0:
	JUMP L_AND_EXP_2
L_AND_EXP_2:
	EQ, INT(tmp_int_0[temp]), INT(a[sp-0x4]), 1
	ASS, INT(tmp_int_1[temp]), INT(tmp_int_0[temp])
	Branch INT(tmp_int_0[temp]) ? AND_4 : AND_END_3
AND_4:
	JUMP AND_END_3
AND_END_3:
	ASS, INT(tmp_int_2[temp]), INT(tmp_int_1[temp])
	Branch INT(tmp_int_2[temp]) ? OR_END_1 : OR_5
OR_5:
	JUMP OR_END_1
OR_END_1:
	Branch INT(tmp_int_2[temp]) ? IF_BODY_6 : IF_ELSE_8
IF_BODY_6:
	ASS, INT(c[sp-0xc]), 1
	JUMP IF_END_7
IF_ELSE_8:
	JUMP B_9
B_9:
	ASS, INT(c[sp-0xc]), 3
	JUMP B_10
B_10:
	JUMP IF_END_7
IF_END_7:
	PRINT_INT INT(c[sp-0xc])
	JUMP L_OR_EXP_11
L_OR_EXP_11:
	JUMP L_AND_EXP_13
L_AND_EXP_13:
	EQ, INT(tmp_int_3[temp]), INT(a[sp-0x4]), 2
	ASS, INT(tmp_int_4[temp]), INT(tmp_int_3[temp])
	Branch INT(tmp_int_3[temp]) ? AND_15 : AND_END_14
AND_15:
	JUMP AND_END_14
AND_END_14:
	ASS, INT(tmp_int_5[temp]), INT(tmp_int_4[temp])
	Branch INT(tmp_int_5[temp]) ? OR_END_12 : OR_16
OR_16:
	JUMP OR_END_12
OR_END_12:
	Branch INT(tmp_int_5[temp]) ? IF_BODY_17 : IF_END_18
IF_BODY_17:
	ASS, INT(c[sp-0xc]), 2
	JUMP IF_END_18
IF_END_18:
	JUMP WHILE_19
WHILE_19:
	JUMP L_OR_EXP_22
L_OR_EXP_22:
	JUMP L_AND_EXP_24
L_AND_EXP_24:
	LT, INT(tmp_int_6[temp]), INT(c[sp-0xc]), 1000
	ASS, INT(tmp_int_7[temp]), INT(tmp_int_6[temp])
	Branch INT(tmp_int_6[temp]) ? AND_26 : AND_END_25
AND_26:
	JUMP AND_END_25
AND_END_25:
	ASS, INT(tmp_int_8[temp]), INT(tmp_int_7[temp])
	Branch INT(tmp_int_8[temp]) ? OR_END_23 : OR_27
OR_27:
	JUMP OR_END_23
OR_END_23:
	Branch INT(tmp_int_8[temp]) ? WHILE_BODY_20 : WHILE_END_21
WHILE_BODY_20:
	JUMP B_28
B_28:
	JUMP L_OR_EXP_29
	JUMP B_50
L_OR_EXP_29:
	JUMP L_AND_EXP_31
L_AND_EXP_31:
	EQ, INT(tmp_int_9[temp]), INT(a[sp-0x4]), 1
	ASS, INT(tmp_int_10[temp]), INT(tmp_int_9[temp])
	Branch INT(tmp_int_9[temp]) ? AND_33 : AND_END_32
AND_33:
	JUMP AND_END_32
AND_END_32:
	ASS, INT(tmp_int_11[temp]), INT(tmp_int_10[temp])
	Branch INT(tmp_int_11[temp]) ? OR_END_30 : OR_34
OR_34:
	JUMP OR_END_30
OR_END_30:
	Branch INT(tmp_int_11[temp]) ? IF_BODY_35 : IF_END_36
IF_BODY_35:
	JUMP B_37
B_37:
	JUMP WHILE_END_21
	JUMP B_38
B_38:
	JUMP IF_END_36
IF_END_36:
	JUMP L_OR_EXP_39
L_OR_EXP_39:
	JUMP L_AND_EXP_41
L_AND_EXP_41:
	NEQ, INT(tmp_int_12[temp]), INT(a[sp-0x4]), 1
	ASS, INT(tmp_int_13[temp]), INT(tmp_int_12[temp])
	Branch INT(tmp_int_12[temp]) ? AND_43 : AND_END_42
AND_43:
	EQ, INT(tmp_int_14[temp]), INT(flag[sp-0x10]), 0
	AND, INT(tmp_int_13[temp]), INT(tmp_int_14[temp]), INT(tmp_int_13[temp])
	Branch INT(tmp_int_13[temp]) ? AND_44 : AND_END_42
AND_44:
	JUMP AND_END_42
AND_END_42:
	ASS, INT(tmp_int_15[temp]), INT(tmp_int_13[temp])
	Branch INT(tmp_int_15[temp]) ? OR_END_40 : OR_45
OR_45:
	JUMP OR_END_40
OR_END_40:
	Branch INT(tmp_int_15[temp]) ? IF_BODY_46 : IF_END_47
IF_BODY_46:
	JUMP B_48
B_48:
	SUB, INT(tmp_int_16[temp]), INT(a[sp-0x4]), 1
	ASS, INT(a[sp-0x4]), INT(tmp_int_16[temp])
	ASS, INT(flag[sp-0x10]), 1
	JUMP WHILE_19
	JUMP B_49
B_49:
	JUMP IF_END_47
IF_END_47:
	SUB, INT(tmp_int_17[temp]), INT(a[sp-0x4]), 1
	ASS, INT(a[sp-0x4]), INT(tmp_int_17[temp])
	ADD, INT(tmp_int_18[temp]), INT(b[sp-0x8]), 1
	ASS, INT(b[sp-0x8]), INT(tmp_int_18[temp])
	ADD, INT(tmp_int_19[temp]), INT(c[sp-0xc]), 1
	ASS, INT(c[sp-0xc]), INT(tmp_int_19[temp])
	JUMP B_50
B_50:
	JUMP WHILE_19
WHILE_END_21:
	PRINT_INT INT(a[sp-0x4])
	PRINT_INT INT(b[sp-0x8])
	PRINT_INT INT(c[sp-0xc])
	JUMP L_OR_EXP_51
L_OR_EXP_51:
	JUMP L_AND_EXP_53
L_AND_EXP_53:
	GT, INT(tmp_int_20[temp]), INT(a[sp-0x4]), 5
	ASS, INT(tmp_int_21[temp]), INT(tmp_int_20[temp])
	Branch INT(tmp_int_20[temp]) ? AND_55 : AND_END_54
AND_55:
	JUMP AND_END_54
AND_END_54:
	ASS, INT(tmp_int_22[temp]), INT(tmp_int_21[temp])
	Branch INT(tmp_int_22[temp]) ? OR_END_52 : OR_56
OR_56:
	JUMP OR_END_52
OR_END_52:
	Branch INT(tmp_int_22[temp]) ? IF_BODY_57 : IF_END_58
IF_BODY_57:
	PRINT_STR STR_2
	JUMP IF_END_58
IF_END_58:
	JUMP L_OR_EXP_59
L_OR_EXP_59:
	JUMP L_AND_EXP_61
L_AND_EXP_61:
	LT, INT(tmp_int_23[temp]), INT(a[sp-0x4]), 5
	ASS, INT(tmp_int_24[temp]), INT(tmp_int_23[temp])
	Branch INT(tmp_int_23[temp]) ? AND_63 : AND_END_62
AND_63:
	JUMP AND_END_62
AND_END_62:
	ASS, INT(tmp_int_25[temp]), INT(tmp_int_24[temp])
	Branch INT(tmp_int_25[temp]) ? OR_END_60 : OR_64
OR_64:
	JUMP OR_END_60
OR_END_60:
	Branch INT(tmp_int_25[temp]) ? IF_BODY_65 : IF_END_66
IF_BODY_65:
	PRINT_STR STR_3
	JUMP IF_END_66
IF_END_66:
	JUMP L_OR_EXP_67
L_OR_EXP_67:
	JUMP L_AND_EXP_69
L_AND_EXP_69:
	GE, INT(tmp_int_26[temp]), INT(a[sp-0x4]), 5
	ASS, INT(tmp_int_27[temp]), INT(tmp_int_26[temp])
	Branch INT(tmp_int_26[temp]) ? AND_71 : AND_END_70
AND_71:
	JUMP AND_END_70
AND_END_70:
	ASS, INT(tmp_int_28[temp]), INT(tmp_int_27[temp])
	Branch INT(tmp_int_28[temp]) ? OR_END_68 : OR_72
OR_72:
	JUMP OR_END_68
OR_END_68:
	Branch INT(tmp_int_28[temp]) ? IF_BODY_73 : IF_END_74
IF_BODY_73:
	PRINT_STR STR_4
	JUMP IF_END_74
IF_END_74:
	JUMP L_OR_EXP_75
L_OR_EXP_75:
	JUMP L_AND_EXP_77
L_AND_EXP_77:
	LE, INT(tmp_int_29[temp]), INT(a[sp-0x4]), 5
	ASS, INT(tmp_int_30[temp]), INT(tmp_int_29[temp])
	Branch INT(tmp_int_29[temp]) ? AND_79 : AND_END_78
AND_79:
	JUMP AND_END_78
AND_END_78:
	ASS, INT(tmp_int_31[temp]), INT(tmp_int_30[temp])
	Branch INT(tmp_int_31[temp]) ? OR_END_76 : OR_80
OR_80:
	JUMP OR_END_76
OR_END_76:
	Branch INT(tmp_int_31[temp]) ? IF_BODY_81 : IF_END_82
IF_BODY_81:
	PRINT_STR STR_5
	JUMP IF_END_82
IF_END_82:
	JUMP L_OR_EXP_83
L_OR_EXP_83:
	JUMP L_AND_EXP_85
L_AND_EXP_85:
	EQ, INT(tmp_int_32[temp]), INT(a[sp-0x4]), 1
	ASS, INT(tmp_int_33[temp]), INT(tmp_int_32[temp])
	Branch INT(tmp_int_32[temp]) ? AND_87 : AND_END_86
AND_87:
	EQ, INT(tmp_int_34[temp]), INT(b[sp-0x8]), 4
	AND, INT(tmp_int_33[temp]), INT(tmp_int_34[temp]), INT(tmp_int_33[temp])
	Branch INT(tmp_int_33[temp]) ? AND_88 : AND_END_86
AND_88:
	JUMP AND_END_86
AND_END_86:
	ASS, INT(tmp_int_35[temp]), INT(tmp_int_33[temp])
	Branch INT(tmp_int_35[temp]) ? OR_END_84 : OR_89
OR_89:
	JUMP OR_END_84
OR_END_84:
	Branch INT(tmp_int_35[temp]) ? IF_BODY_90 : IF_END_91
IF_BODY_90:
	JUMP B_92
B_92:
	PRINT_STR STR_6
	JUMP B_93
B_93:
	JUMP IF_END_91
IF_END_91:
	RETURN 0
