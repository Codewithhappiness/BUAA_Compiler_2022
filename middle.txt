###### GLOBAL STRING ######
STR_1 : 19373749\n
STR_2 : \n
STR_3 : yes\n
STR_4 : no\n

###### GLOBAL ARRAY ######
[0xc]array carray1: 1 2
[0x14]array carray2: 3 4
[0x1c]array carray3: 5 6
[0x24]array carrays1: 1 2 3 4
[0x34]array carrays2: 1 2 5 6
[0x44]array carrays3: 1 2 7 8

###### GLOBAL VAR ######
[0x0]cnum1: 1
[0x4]cnum2: 2
[0x8]cnum3: 3

###### TEXT ######
JUMP FUNC_main
# func vfun1 : stack size 0x0
# param: 
FUNC_vfun1:
	RETURN VOID
# func vfun2 : stack size 0x4
# param: INT(a[sp-0x4])
FUNC_vfun2:
	RETURN VOID
# func vfun3 : stack size 0x8
# param: INT(a[sp-0x4]), INT(b[sp-0x8])
FUNC_vfun3:
	RETURN VOID
# func vfun4 : stack size 0x4
# param: ARRAY(a[sp-0x4])
FUNC_vfun4:
	RETURN VOID
# func vfun5 : stack size 0x8
# param: ARRAY(a[sp-0x4]), ARRAY(b[sp-0x8])
FUNC_vfun5:
	RETURN VOID
# func vfun6 : stack size 0x4
# param: ARRAY(a[sp-0x4])
FUNC_vfun6:
	RETURN VOID
# func vfun7 : stack size 0x8
# param: ARRAY(a[sp-0x4]), ARRAY(b[sp-0x8])
FUNC_vfun7:
	RETURN VOID
# func ifun1 : stack size 0x0
# param: 
FUNC_ifun1:
	RETURN 0
# func ifun2 : stack size 0x4
# param: INT(a[sp-0x4])
FUNC_ifun2:
	ADD, INT(tmp_int_0[temp]), INT(a[sp-0x4]), INT(a[sp-0x4])
	RETURN INT(tmp_int_0[temp])
# func ifun3 : stack size 0x8
# param: INT(a[sp-0x4]), INT(b[sp-0x8])
FUNC_ifun3:
	ADD, INT(tmp_int_1[temp]), INT(a[sp-0x4]), INT(b[sp-0x8])
	RETURN INT(tmp_int_1[temp])
# func ifun4 : stack size 0x4
# param: ARRAY(a[sp-0x4])
FUNC_ifun4:
	MUL, INT(tmp_int_2[temp]), 0, 4
	ADD, INT(tmp_int_2[temp]), INT(tmp_int_2[temp]), 0
	OFFSET (ARRAY(a[sp-0x4])+INT(tmp_int_2[temp]))->POINTER(tmp_pointer_0[temp])
	LOAD POINTER(tmp_pointer_0[temp]), INT(tmp_int_3[temp])
	RETURN INT(tmp_int_3[temp])
# func ifun5 : stack size 0x8
# param: ARRAY(a[sp-0x4]), ARRAY(b[sp-0x8])
FUNC_ifun5:
	MUL, INT(tmp_int_4[temp]), 0, 4
	ADD, INT(tmp_int_4[temp]), INT(tmp_int_4[temp]), 0
	OFFSET (ARRAY(a[sp-0x4])+INT(tmp_int_4[temp]))->POINTER(tmp_pointer_1[temp])
	LOAD POINTER(tmp_pointer_1[temp]), INT(tmp_int_5[temp])
	MUL, INT(tmp_int_7[temp]), 0, 4
	ADD, INT(tmp_int_7[temp]), INT(tmp_int_7[temp]), 0
	OFFSET (ARRAY(b[sp-0x8])+INT(tmp_int_7[temp]))->POINTER(tmp_pointer_2[temp])
	LOAD POINTER(tmp_pointer_2[temp]), INT(tmp_int_8[temp])
	ADD, INT(tmp_int_6[temp]), INT(tmp_int_5[temp]), INT(tmp_int_8[temp])
	RETURN INT(tmp_int_6[temp])
# func ifun6 : stack size 0x4
# param: ARRAY(a[sp-0x4])
FUNC_ifun6:
	MUL, INT(tmp_int_9[temp]), 0, 4
	ADD, INT(tmp_int_9[temp]), INT(tmp_int_9[temp]), 0
	MUL, INT(tmp_int_10[temp]), 0, 8
	ADD, INT(tmp_int_10[temp]), INT(tmp_int_10[temp]), INT(tmp_int_9[temp])
	OFFSET (ARRAY(a[sp-0x4])+INT(tmp_int_10[temp]))->POINTER(tmp_pointer_3[temp])
	LOAD POINTER(tmp_pointer_3[temp]), INT(tmp_int_11[temp])
	RETURN INT(tmp_int_11[temp])
# func ifun7 : stack size 0x8
# param: ARRAY(a[sp-0x4]), ARRAY(b[sp-0x8])
FUNC_ifun7:
	MUL, INT(tmp_int_12[temp]), 0, 4
	ADD, INT(tmp_int_12[temp]), INT(tmp_int_12[temp]), 0
	MUL, INT(tmp_int_13[temp]), 0, 8
	ADD, INT(tmp_int_13[temp]), INT(tmp_int_13[temp]), INT(tmp_int_12[temp])
	OFFSET (ARRAY(a[sp-0x4])+INT(tmp_int_13[temp]))->POINTER(tmp_pointer_4[temp])
	LOAD POINTER(tmp_pointer_4[temp]), INT(tmp_int_14[temp])
	MUL, INT(tmp_int_16[temp]), 0, 4
	ADD, INT(tmp_int_16[temp]), INT(tmp_int_16[temp]), 0
	MUL, INT(tmp_int_17[temp]), 0, 8
	ADD, INT(tmp_int_17[temp]), INT(tmp_int_17[temp]), INT(tmp_int_16[temp])
	OFFSET (ARRAY(b[sp-0x8])+INT(tmp_int_17[temp]))->POINTER(tmp_pointer_5[temp])
	LOAD POINTER(tmp_pointer_5[temp]), INT(tmp_int_18[temp])
	ADD, INT(tmp_int_15[temp]), INT(tmp_int_14[temp]), INT(tmp_int_18[temp])
	RETURN INT(tmp_int_15[temp])
# func main : stack size 0x58
# param: 
FUNC_main:
	PRINT_STR STR_1
	DEF, INT(a[sp-0x4]), 0
	DEF, INT(b[sp-0x8]), 0
	DEF, INT(c[sp-0xc]), 0
	OFFSET (ARRAY(array1[sp-0x14])+0)->POINTER(tmp_pointer_6[temp])
	STORE POINTER(tmp_pointer_6[temp]), 1
	OFFSET (ARRAY(array1[sp-0x14])+4)->POINTER(tmp_pointer_7[temp])
	STORE POINTER(tmp_pointer_7[temp]), 2
	OFFSET (ARRAY(array2[sp-0x1c])+0)->POINTER(tmp_pointer_8[temp])
	STORE POINTER(tmp_pointer_8[temp]), 3
	OFFSET (ARRAY(array2[sp-0x1c])+4)->POINTER(tmp_pointer_9[temp])
	STORE POINTER(tmp_pointer_9[temp]), 4
	OFFSET (ARRAY(array3[sp-0x24])+0)->POINTER(tmp_pointer_10[temp])
	STORE POINTER(tmp_pointer_10[temp]), 5
	OFFSET (ARRAY(array3[sp-0x24])+4)->POINTER(tmp_pointer_11[temp])
	STORE POINTER(tmp_pointer_11[temp]), 6
	OFFSET (ARRAY(arrays1[sp-0x34])+0)->POINTER(tmp_pointer_12[temp])
	STORE POINTER(tmp_pointer_12[temp]), 1
	OFFSET (ARRAY(arrays1[sp-0x34])+4)->POINTER(tmp_pointer_13[temp])
	STORE POINTER(tmp_pointer_13[temp]), 2
	OFFSET (ARRAY(arrays1[sp-0x34])+8)->POINTER(tmp_pointer_14[temp])
	STORE POINTER(tmp_pointer_14[temp]), 3
	OFFSET (ARRAY(arrays1[sp-0x34])+12)->POINTER(tmp_pointer_15[temp])
	STORE POINTER(tmp_pointer_15[temp]), 4
	OFFSET (ARRAY(arrays2[sp-0x44])+0)->POINTER(tmp_pointer_16[temp])
	STORE POINTER(tmp_pointer_16[temp]), 1
	OFFSET (ARRAY(arrays2[sp-0x44])+4)->POINTER(tmp_pointer_17[temp])
	STORE POINTER(tmp_pointer_17[temp]), 2
	OFFSET (ARRAY(arrays2[sp-0x44])+8)->POINTER(tmp_pointer_18[temp])
	STORE POINTER(tmp_pointer_18[temp]), 5
	OFFSET (ARRAY(arrays2[sp-0x44])+12)->POINTER(tmp_pointer_19[temp])
	STORE POINTER(tmp_pointer_19[temp]), 6
	OFFSET (ARRAY(arrays3[sp-0x54])+0)->POINTER(tmp_pointer_20[temp])
	STORE POINTER(tmp_pointer_20[temp]), 1
	OFFSET (ARRAY(arrays3[sp-0x54])+4)->POINTER(tmp_pointer_21[temp])
	STORE POINTER(tmp_pointer_21[temp]), 2
	OFFSET (ARRAY(arrays3[sp-0x54])+8)->POINTER(tmp_pointer_22[temp])
	STORE POINTER(tmp_pointer_22[temp]), 7
	OFFSET (ARRAY(arrays3[sp-0x54])+12)->POINTER(tmp_pointer_23[temp])
	STORE POINTER(tmp_pointer_23[temp]), 8
	ASS, INT(a[sp-0x4]), 1
	MUL, INT(tmp_int_20[temp]), INT(a[sp-0x4]), INT(a[sp-0x4])
	MUL, INT(tmp_int_19[temp]), INT(tmp_int_20[temp]), 4
	ADD, INT(tmp_int_19[temp]), INT(tmp_int_19[temp]), 0
	OFFSET (ARRAY(array1[sp-0x14])+INT(tmp_int_19[temp]))->POINTER(tmp_pointer_24[temp])
	STORE POINTER(tmp_pointer_24[temp]), 3
	MUL, INT(tmp_int_21[temp]), 1, 4
	ADD, INT(tmp_int_21[temp]), INT(tmp_int_21[temp]), 0
	OFFSET (ARRAY(array1[sp-0x14])+INT(tmp_int_21[temp]))->POINTER(tmp_pointer_25[temp])
	LOAD POINTER(tmp_pointer_25[temp]), INT(tmp_int_22[temp])
	MUL, INT(tmp_int_24[temp]), 0, 4
	ADD, INT(tmp_int_24[temp]), INT(tmp_int_24[temp]), 0
	OFFSET (ARRAY(array1[sp-0x14])+INT(tmp_int_24[temp]))->POINTER(tmp_pointer_26[temp])
	LOAD POINTER(tmp_pointer_26[temp]), INT(tmp_int_25[temp])
	ADD, INT(tmp_int_23[temp]), INT(tmp_int_22[temp]), INT(tmp_int_25[temp])
	PRINT_INT INT(tmp_int_23[temp])
	PRINT_STR STR_2
	JUMP B_14
B_14:
	JUMP B_15
B_15:
	ADD, INT(tmp_int_26[temp]), INT(a[sp-0x4]), INT(b[sp-0x8])
	JUMP L_OR_EXP_16
L_OR_EXP_16:
	JUMP L_AND_EXP_18
L_AND_EXP_18:
	ASS, INT(tmp_int_27[temp]), 1
	Branch 1 ? AND_20 : AND_END_19
AND_20:
	JUMP AND_END_19
AND_END_19:
	ASS, INT(tmp_int_28[temp]), INT(tmp_int_27[temp])
	Branch INT(tmp_int_28[temp]) ? OR_END_17 : OR_21
OR_21:
	JUMP OR_END_17
OR_END_17:
	Branch INT(tmp_int_28[temp]) ? IF_BODY_22 : IF_END_23
IF_BODY_22:
	JUMP B_24
B_24:
	ASS, INT(a[sp-0x4]), INT(a[sp-0x4])
	JUMP B_25
B_25:
	JUMP IF_END_23
IF_END_23:
	JUMP L_OR_EXP_26
L_OR_EXP_26:
	JUMP L_AND_EXP_28
L_AND_EXP_28:
	LT, INT(tmp_int_29[temp]), 1, 0
	ASS, INT(tmp_int_30[temp]), INT(tmp_int_29[temp])
	Branch INT(tmp_int_29[temp]) ? AND_30 : AND_END_29
AND_30:
	JUMP AND_END_29
AND_END_29:
	ASS, INT(tmp_int_31[temp]), INT(tmp_int_30[temp])
	Branch INT(tmp_int_31[temp]) ? OR_END_27 : OR_31
OR_31:
	JUMP OR_END_27
OR_END_27:
	Branch INT(tmp_int_31[temp]) ? IF_BODY_32 : IF_END_33
IF_BODY_32:
	JUMP B_34
B_34:
	ASS, INT(a[sp-0x4]), 1
	JUMP B_35
B_35:
	JUMP IF_END_33
IF_END_33:
	JUMP L_OR_EXP_36
L_OR_EXP_36:
	JUMP L_AND_EXP_38
L_AND_EXP_38:
	GT, INT(tmp_int_32[temp]), 0, 1
	ASS, INT(tmp_int_33[temp]), INT(tmp_int_32[temp])
	Branch INT(tmp_int_32[temp]) ? AND_40 : AND_END_39
AND_40:
	JUMP AND_END_39
AND_END_39:
	ASS, INT(tmp_int_34[temp]), INT(tmp_int_33[temp])
	Branch INT(tmp_int_34[temp]) ? OR_END_37 : OR_41
OR_41:
	JUMP OR_END_37
OR_END_37:
	Branch INT(tmp_int_34[temp]) ? IF_BODY_42 : IF_END_43
IF_BODY_42:
	JUMP B_44
B_44:
	ASS, INT(a[sp-0x4]), 1
	JUMP B_45
B_45:
	JUMP IF_END_43
IF_END_43:
	JUMP L_OR_EXP_46
L_OR_EXP_46:
	JUMP L_AND_EXP_48
L_AND_EXP_48:
	LE, INT(tmp_int_35[temp]), 1, 0
	ASS, INT(tmp_int_36[temp]), INT(tmp_int_35[temp])
	Branch INT(tmp_int_35[temp]) ? AND_50 : AND_END_49
AND_50:
	JUMP AND_END_49
AND_END_49:
	ASS, INT(tmp_int_37[temp]), INT(tmp_int_36[temp])
	Branch INT(tmp_int_37[temp]) ? OR_END_47 : OR_51
OR_51:
	JUMP OR_END_47
OR_END_47:
	Branch INT(tmp_int_37[temp]) ? IF_BODY_52 : IF_END_53
IF_BODY_52:
	JUMP B_54
B_54:
	ASS, INT(a[sp-0x4]), 1
	JUMP B_55
B_55:
	JUMP IF_END_53
IF_END_53:
	JUMP L_OR_EXP_56
L_OR_EXP_56:
	JUMP L_AND_EXP_58
L_AND_EXP_58:
	GE, INT(tmp_int_38[temp]), INT(a[sp-0x4]), INT(b[sp-0x8])
	ASS, INT(tmp_int_39[temp]), INT(tmp_int_38[temp])
	Branch INT(tmp_int_38[temp]) ? AND_60 : AND_END_59
AND_60:
	JUMP AND_END_59
AND_END_59:
	ASS, INT(tmp_int_40[temp]), INT(tmp_int_39[temp])
	Branch INT(tmp_int_40[temp]) ? OR_END_57 : OR_61
OR_61:
	JUMP OR_END_57
OR_END_57:
	Branch INT(tmp_int_40[temp]) ? IF_BODY_62 : IF_ELSE_64
IF_BODY_62:
	JUMP B_65
B_65:
	ADD, INT(tmp_int_41[temp]), INT(a[sp-0x4]), INT(a[sp-0x4])
	ASS, INT(a[sp-0x4]), INT(tmp_int_41[temp])
	JUMP B_66
B_66:
	JUMP IF_END_63
IF_ELSE_64:
	JUMP B_67
B_67:
	ADD, INT(tmp_int_42[temp]), INT(a[sp-0x4]), INT(b[sp-0x8])
	ASS, INT(a[sp-0x4]), INT(tmp_int_42[temp])
	JUMP B_68
B_68:
	JUMP IF_END_63
IF_END_63:
	PRINT_INT INT(a[sp-0x4])
	PRINT_STR STR_2
	JUMP L_OR_EXP_69
L_OR_EXP_69:
	JUMP L_AND_EXP_71
L_AND_EXP_71:
	EQ, INT(tmp_int_43[temp]), INT(a[sp-0x4]), INT(b[sp-0x8])
	ASS, INT(tmp_int_44[temp]), INT(tmp_int_43[temp])
	Branch INT(tmp_int_43[temp]) ? AND_73 : AND_END_72
AND_73:
	JUMP AND_END_72
AND_END_72:
	ASS, INT(tmp_int_45[temp]), INT(tmp_int_44[temp])
	Branch INT(tmp_int_45[temp]) ? OR_END_70 : OR_74
OR_74:
	JUMP OR_END_70
OR_END_70:
	Branch INT(tmp_int_45[temp]) ? IF_BODY_75 : IF_END_76
IF_BODY_75:
	JUMP B_77
B_77:
	PRINT_STR STR_3
	JUMP B_78
B_78:
	JUMP IF_END_76
IF_END_76:
	JUMP L_OR_EXP_79
L_OR_EXP_79:
	JUMP L_AND_EXP_81
L_AND_EXP_81:
	NEQ, INT(tmp_int_46[temp]), INT(a[sp-0x4]), INT(b[sp-0x8])
	ASS, INT(tmp_int_47[temp]), INT(tmp_int_46[temp])
	Branch INT(tmp_int_46[temp]) ? AND_83 : AND_END_82
AND_83:
	JUMP AND_END_82
AND_END_82:
	ASS, INT(tmp_int_48[temp]), INT(tmp_int_47[temp])
	Branch INT(tmp_int_48[temp]) ? OR_END_80 : OR_84
OR_84:
	JUMP OR_END_80
OR_END_80:
	Branch INT(tmp_int_48[temp]) ? IF_BODY_85 : IF_END_86
IF_BODY_85:
	JUMP B_87
B_87:
	PRINT_STR STR_4
	JUMP B_88
B_88:
	JUMP IF_END_86
IF_END_86:
	DEF, INT(i[sp-0x58]), 2
	JUMP WHILE_89
WHILE_89:
	JUMP L_OR_EXP_92
L_OR_EXP_92:
	JUMP L_AND_EXP_94
L_AND_EXP_94:
	ASS, INT(tmp_int_49[temp]), 1
	Branch 1 ? AND_96 : AND_END_95
AND_96:
	JUMP AND_END_95
AND_END_95:
	ASS, INT(tmp_int_50[temp]), INT(tmp_int_49[temp])
	Branch INT(tmp_int_50[temp]) ? OR_END_93 : OR_97
OR_97:
	JUMP OR_END_93
OR_END_93:
	Branch INT(tmp_int_50[temp]) ? WHILE_BODY_90 : WHILE_END_91
WHILE_BODY_90:
	JUMP B_98
B_98:
	JUMP L_OR_EXP_99
	JUMP B_109
L_OR_EXP_99:
	JUMP L_AND_EXP_101
L_AND_EXP_101:
	NEQ, INT(tmp_int_51[temp]), INT(i[sp-0x58]), 0
	ASS, INT(tmp_int_52[temp]), INT(tmp_int_51[temp])
	Branch INT(tmp_int_51[temp]) ? AND_103 : AND_END_102
AND_103:
	JUMP AND_END_102
AND_END_102:
	ASS, INT(tmp_int_53[temp]), INT(tmp_int_52[temp])
	Branch INT(tmp_int_53[temp]) ? OR_END_100 : OR_104
OR_104:
	JUMP OR_END_100
OR_END_100:
	Branch INT(tmp_int_53[temp]) ? IF_BODY_105 : IF_END_106
IF_BODY_105:
	JUMP B_107
B_107:
	SUB, INT(tmp_int_54[temp]), INT(i[sp-0x58]), 1
	ASS, INT(i[sp-0x58]), INT(tmp_int_54[temp])
	JUMP WHILE_89
	JUMP B_108
B_108:
	JUMP IF_END_106
IF_END_106:
	JUMP WHILE_END_91
B_109:
	JUMP WHILE_89
WHILE_END_91:
	ASS, INT(a[sp-0x4]), INT(b[sp-0x8])
	ASS, INT(a[sp-0x4]), 2
	ADD, INT(tmp_int_55[temp]), INT(a[sp-0x4]), INT(b[sp-0x8])
	ASS, INT(a[sp-0x4]), INT(tmp_int_55[temp])
	NEG, INT(tmp_int_56[temp]), INT(a[sp-0x4])
	ASS, INT(a[sp-0x4]), INT(tmp_int_56[temp])
	Call FUNC_ifun1; Params: ; RET INT(tmp_int_57[temp])
	ASS, INT(a[sp-0x4]), INT(tmp_int_57[temp])
	MUL, INT(tmp_int_58[temp]), 1, 4
	ADD, INT(tmp_int_58[temp]), INT(tmp_int_58[temp]), 0
	OFFSET (ARRAY(array1[sp-0x14])+INT(tmp_int_58[temp]))->POINTER(tmp_pointer_27[temp])
	Call FUNC_ifun2; Params: INT(b[sp-0x8]); RET INT(tmp_int_59[temp])
	STORE POINTER(tmp_pointer_27[temp]), INT(tmp_int_59[temp])
	MUL, INT(tmp_int_60[temp]), 1, 4
	ADD, INT(tmp_int_60[temp]), INT(tmp_int_60[temp]), 0
	OFFSET (ARRAY(array1[sp-0x14])+INT(tmp_int_60[temp]))->POINTER(tmp_pointer_28[temp])
	LOAD POINTER(tmp_pointer_28[temp]), INT(tmp_int_61[temp])
	PRINT_INT INT(tmp_int_61[temp])
	PRINT_STR STR_2
	MUL, INT(tmp_int_62[temp]), 0, 4
	ADD, INT(tmp_int_62[temp]), INT(tmp_int_62[temp]), 0
	MUL, INT(tmp_int_63[temp]), 0, 8
	ADD, INT(tmp_int_63[temp]), INT(tmp_int_63[temp]), INT(tmp_int_62[temp])
	OFFSET (ARRAY(arrays1[sp-0x34])+INT(tmp_int_63[temp]))->POINTER(tmp_pointer_29[temp])
	Call FUNC_ifun3; Params: INT(a[sp-0x4]), INT(b[sp-0x8]); RET INT(tmp_int_64[temp])
	STORE POINTER(tmp_pointer_29[temp]), INT(tmp_int_64[temp])
	MUL, INT(tmp_int_65[temp]), 0, 4
	ADD, INT(tmp_int_65[temp]), INT(tmp_int_65[temp]), 0
	MUL, INT(tmp_int_66[temp]), 0, 8
	ADD, INT(tmp_int_66[temp]), INT(tmp_int_66[temp]), INT(tmp_int_65[temp])
	OFFSET (ARRAY(arrays1[sp-0x34])+INT(tmp_int_66[temp]))->POINTER(tmp_pointer_30[temp])
	LOAD POINTER(tmp_pointer_30[temp]), INT(tmp_int_67[temp])
	PRINT_INT INT(tmp_int_67[temp])
	PRINT_STR STR_2
	MUL, INT(tmp_int_69[temp]), 1, 4
	ADD, INT(tmp_int_69[temp]), INT(tmp_int_69[temp]), 0
	MUL, INT(tmp_int_70[temp]), 1, 8
	ADD, INT(tmp_int_70[temp]), INT(tmp_int_70[temp]), INT(tmp_int_69[temp])
	OFFSET (ARRAY(arrays1[sp-0x34])+INT(tmp_int_70[temp]))->POINTER(tmp_pointer_31[temp])
	LOAD POINTER(tmp_pointer_31[temp]), INT(tmp_int_71[temp])
	MUL, INT(tmp_int_68[temp]), INT(a[sp-0x4]), INT(tmp_int_71[temp])
	ASS, INT(a[sp-0x4]), INT(tmp_int_68[temp])
	MUL, INT(tmp_int_73[temp]), 0, 4
	ADD, INT(tmp_int_73[temp]), INT(tmp_int_73[temp]), 0
	MUL, INT(tmp_int_74[temp]), 1, 8
	ADD, INT(tmp_int_74[temp]), INT(tmp_int_74[temp]), INT(tmp_int_73[temp])
	OFFSET (ARRAY(arrays2[sp-0x44])+INT(tmp_int_74[temp]))->POINTER(tmp_pointer_32[temp])
	LOAD POINTER(tmp_pointer_32[temp]), INT(tmp_int_75[temp])
	DIV, INT(tmp_int_72[temp]), INT(a[sp-0x4]), INT(tmp_int_75[temp])
	ASS, INT(a[sp-0x4]), INT(tmp_int_72[temp])
	MUL, INT(tmp_int_77[temp]), 1, 4
	ADD, INT(tmp_int_77[temp]), INT(tmp_int_77[temp]), 0
	MUL, INT(tmp_int_78[temp]), 0, 8
	ADD, INT(tmp_int_78[temp]), INT(tmp_int_78[temp]), INT(tmp_int_77[temp])
	OFFSET (ARRAY(arrays3[sp-0x54])+INT(tmp_int_78[temp]))->POINTER(tmp_pointer_33[temp])
	LOAD POINTER(tmp_pointer_33[temp]), INT(tmp_int_79[temp])
	MOD, INT(tmp_int_76[temp]), INT(a[sp-0x4]), INT(tmp_int_79[temp])
	ASS, INT(a[sp-0x4]), INT(tmp_int_76[temp])
	PRINT_INT INT(a[sp-0x4])
	PRINT_STR STR_2
	MUL, INT(tmp_int_80[temp]), 0, 8
	ADD, INT(tmp_int_80[temp]), INT(tmp_int_80[temp]), 0
	OFFSET (ARRAY(arrays3[sp-0x54])+INT(tmp_int_80[temp]))->POINTER(tmp_pointer_34[temp])
	Call FUNC_ifun4; Params: POINTER(tmp_pointer_34[temp]); RET INT(tmp_int_81[temp])
	ASS, INT(a[sp-0x4]), INT(tmp_int_81[temp])
	PRINT_INT INT(a[sp-0x4])
	PRINT_STR STR_2
	OFFSET (ARRAY(arrays1[sp-0x34])+0)->POINTER(tmp_pointer_35[temp])
	OFFSET (ARRAY(arrays2[sp-0x44])+0)->POINTER(tmp_pointer_36[temp])
	Call FUNC_ifun7; Params: POINTER(tmp_pointer_35[temp]), POINTER(tmp_pointer_36[temp]); RET INT(tmp_int_82[temp])
	ASS, INT(a[sp-0x4]), INT(tmp_int_82[temp])
	PRINT_INT INT(a[sp-0x4])
	PRINT_STR STR_2
	MUL, INT(tmp_int_84[temp]), 0, 4
	ADD, INT(tmp_int_84[temp]), INT(tmp_int_84[temp]), 0
	OFFSET (ARRAY(array1[sp-0x14])+INT(tmp_int_84[temp]))->POINTER(tmp_pointer_37[temp])
	LOAD POINTER(tmp_pointer_37[temp]), INT(tmp_int_85[temp])
	ADD, INT(tmp_int_83[temp]), INT(a[sp-0x4]), INT(tmp_int_85[temp])
	MUL, INT(tmp_int_87[temp]), 0, 4
	ADD, INT(tmp_int_87[temp]), INT(tmp_int_87[temp]), 0
	OFFSET (ARRAY(array2[sp-0x1c])+INT(tmp_int_87[temp]))->POINTER(tmp_pointer_38[temp])
	LOAD POINTER(tmp_pointer_38[temp]), INT(tmp_int_88[temp])
	SUB, INT(tmp_int_86[temp]), INT(tmp_int_83[temp]), INT(tmp_int_88[temp])
	ASS, INT(a[sp-0x4]), INT(tmp_int_86[temp])
	PRINT_INT INT(a[sp-0x4])
	PRINT_STR STR_2
	RETURN 0
