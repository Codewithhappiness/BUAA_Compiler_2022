###### GLOBAL STRING ######
STR_1 : , 
STR_2 : \n

###### GLOBAL ARRAY ######
[0x4]array a: 0 1 2 3 4 5 6 7 8 9

###### GLOBAL VAR ######
[0x0]N: 10

###### TEXT ######
JUMP FUNC_main
# func fib : stack size 0x4
# param: INT(i[sp-0x4])
FUNC_fib:
	JUMP L_OR_EXP_0
L_OR_EXP_0:
	JUMP L_AND_EXP_2
L_AND_EXP_2:
	EQ, INT(tmp_int_0[temp]), INT(i[sp-0x4]), 1
	ASS, INT(tmp_int_1[temp]), INT(tmp_int_0[temp])
	Branch INT(tmp_int_0[temp]) ? AND_4 : AND_END_3
AND_4:
	JUMP AND_END_3
AND_END_3:
	ASS, INT(tmp_int_2[temp]), INT(tmp_int_1[temp])
	Branch INT(tmp_int_2[temp]) ? OR_END_1 : OR_5
OR_5:
	JUMP OR_END_1
OR_END_1:
	Branch INT(tmp_int_2[temp]) ? IF_BODY_6 : IF_END_7
IF_BODY_6:
	JUMP B_8
B_8:
	RETURN 1
	JUMP B_9
B_9:
	JUMP IF_END_7
IF_END_7:
	JUMP L_OR_EXP_10
L_OR_EXP_10:
	JUMP L_AND_EXP_12
L_AND_EXP_12:
	EQ, INT(tmp_int_3[temp]), INT(i[sp-0x4]), 2
	ASS, INT(tmp_int_4[temp]), INT(tmp_int_3[temp])
	Branch INT(tmp_int_3[temp]) ? AND_14 : AND_END_13
AND_14:
	JUMP AND_END_13
AND_END_13:
	ASS, INT(tmp_int_5[temp]), INT(tmp_int_4[temp])
	Branch INT(tmp_int_5[temp]) ? OR_END_11 : OR_15
OR_15:
	JUMP OR_END_11
OR_END_11:
	Branch INT(tmp_int_5[temp]) ? IF_BODY_16 : IF_END_17
IF_BODY_16:
	JUMP B_18
B_18:
	RETURN 2
	JUMP B_19
B_19:
	JUMP IF_END_17
IF_END_17:
	SUB, INT(tmp_int_6[temp]), INT(i[sp-0x4]), 1
	Call FUNC_fib; Params: INT(tmp_int_6[temp]); RET INT(tmp_int_7[temp])
	SUB, INT(tmp_int_9[temp]), INT(i[sp-0x4]), 2
	Call FUNC_fib; Params: INT(tmp_int_9[temp]); RET INT(tmp_int_10[temp])
	ADD, INT(tmp_int_8[temp]), INT(tmp_int_7[temp]), INT(tmp_int_10[temp])
	RETURN INT(tmp_int_8[temp])
# func main : stack size 0x14
# param: 
FUNC_main:
	DEF, INT(i[sp-0x4]), 2
	DEF, INT(j[sp-0x8]), 5
	DEF, INT(a1[sp-0xc]), 1
	DEF, INT(a2[sp-0x10]), 2
	GETINT INT(i[sp-0x4])
	GETINT INT(j[sp-0x8])
	MUL, INT(tmp_int_11[temp]), INT(i[sp-0x4]), INT(j[sp-0x8])
	NEG, INT(tmp_int_12[temp]), INT(tmp_int_11[temp])
	Call FUNC_fib; Params: 4; RET INT(tmp_int_14[temp])
	MUL, INT(tmp_int_13[temp]), INT(tmp_int_12[temp]), INT(tmp_int_14[temp])
	ADD, INT(tmp_int_15[temp]), INT(tmp_int_13[temp]), 0
	MUL, INT(tmp_int_17[temp]), 1, 4
	ADD, INT(tmp_int_17[temp]), INT(tmp_int_17[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_17[temp]))->POINTER(tmp_pointer_0[temp])
	LOAD POINTER(tmp_pointer_0[temp]), INT(tmp_int_18[temp])
	MUL, INT(tmp_int_19[temp]), INT(tmp_int_18[temp]), 1
	ADD, INT(tmp_int_16[temp]), INT(tmp_int_15[temp]), INT(tmp_int_19[temp])
	DIV, INT(tmp_int_21[temp]), 1, 2
	SUB, INT(tmp_int_20[temp]), INT(tmp_int_16[temp]), INT(tmp_int_21[temp])
	MUL, INT(tmp_int_22[temp]), INT(tmp_int_20[temp]), 5
	ASS, INT(i[sp-0x4]), INT(tmp_int_22[temp])
	MUL, INT(tmp_int_23[temp]), 7, 5923
	MOD, INT(tmp_int_24[temp]), INT(tmp_int_23[temp]), 56
	MUL, INT(tmp_int_25[temp]), INT(tmp_int_24[temp]), 57
	Call FUNC_fib; Params: 5; RET INT(tmp_int_27[temp])
	ADD, INT(tmp_int_28[temp]), INT(tmp_int_27[temp]), 2
	Call FUNC_fib; Params: INT(tmp_int_28[temp]); RET INT(tmp_int_29[temp])
	SUB, INT(tmp_int_26[temp]), INT(tmp_int_25[temp]), INT(tmp_int_29[temp])
	ADD, INT(tmp_int_31[temp]), INT(a1[sp-0xc]), INT(a2[sp-0x10])
	DIV, INT(tmp_int_33[temp]), 89, 2
	MUL, INT(tmp_int_34[temp]), INT(tmp_int_33[temp]), 36
	SUB, INT(tmp_int_35[temp]), INT(tmp_int_34[temp]), 53
	DIV, INT(tmp_int_36[temp]), INT(tmp_int_35[temp]), 1
	MUL, INT(tmp_int_37[temp]), INT(tmp_int_36[temp]), 6
	SUB, INT(tmp_int_32[temp]), INT(tmp_int_31[temp]), INT(tmp_int_37[temp])
	MUL, INT(tmp_int_40[temp]), 45, 56
	DIV, INT(tmp_int_41[temp]), INT(tmp_int_40[temp]), 85
	SUB, INT(tmp_int_42[temp]), INT(tmp_int_41[temp]), 56
	MUL, INT(tmp_int_44[temp]), 35, 56
	DIV, INT(tmp_int_45[temp]), INT(tmp_int_44[temp]), 4
	ADD, INT(tmp_int_43[temp]), INT(tmp_int_42[temp]), INT(tmp_int_45[temp])
	SUB, INT(tmp_int_46[temp]), INT(tmp_int_43[temp]), 9
	MUL, INT(tmp_int_39[temp]), 2, INT(tmp_int_46[temp])
	SUB, INT(tmp_int_38[temp]), INT(tmp_int_32[temp]), INT(tmp_int_39[temp])
	ADD, INT(tmp_int_30[temp]), INT(tmp_int_26[temp]), INT(tmp_int_38[temp])
	ASS, INT(j[sp-0x8]), INT(tmp_int_30[temp])
	DEF, INT(k[sp-0x14]), -6
	JUMP WHILE_21
WHILE_21:
	JUMP L_OR_EXP_24
L_OR_EXP_24:
	JUMP L_AND_EXP_26
L_AND_EXP_26:
	LE, INT(tmp_int_47[temp]), INT(i[sp-0x4]), 100
	ASS, INT(tmp_int_48[temp]), INT(tmp_int_47[temp])
	Branch INT(tmp_int_47[temp]) ? AND_28 : AND_END_27
AND_28:
	JUMP AND_END_27
AND_END_27:
	ASS, INT(tmp_int_49[temp]), INT(tmp_int_48[temp])
	Branch INT(tmp_int_49[temp]) ? OR_END_25 : OR_29
OR_29:
	JUMP OR_END_25
OR_END_25:
	Branch INT(tmp_int_49[temp]) ? WHILE_BODY_22 : WHILE_END_23
WHILE_BODY_22:
	JUMP B_30
B_30:
	MUL, INT(tmp_int_50[temp]), 0, 4
	ADD, INT(tmp_int_50[temp]), INT(tmp_int_50[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_50[temp]))->POINTER(tmp_pointer_1[temp])
	MUL, INT(tmp_int_51[temp]), 0, 4
	ADD, INT(tmp_int_51[temp]), INT(tmp_int_51[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_51[temp]))->POINTER(tmp_pointer_2[temp])
	LOAD POINTER(tmp_pointer_2[temp]), INT(tmp_int_52[temp])
	MUL, INT(tmp_int_54[temp]), INT(k[sp-0x14]), INT(k[sp-0x14])
	ADD, INT(tmp_int_53[temp]), INT(tmp_int_52[temp]), INT(tmp_int_54[temp])
	STORE POINTER(tmp_pointer_1[temp]), INT(tmp_int_53[temp])
	MUL, INT(tmp_int_55[temp]), 1, 4
	ADD, INT(tmp_int_55[temp]), INT(tmp_int_55[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_55[temp]))->POINTER(tmp_pointer_3[temp])
	MUL, INT(tmp_int_56[temp]), 1, 4
	ADD, INT(tmp_int_56[temp]), INT(tmp_int_56[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_56[temp]))->POINTER(tmp_pointer_4[temp])
	LOAD POINTER(tmp_pointer_4[temp]), INT(tmp_int_57[temp])
	MUL, INT(tmp_int_59[temp]), INT(k[sp-0x14]), INT(k[sp-0x14])
	ADD, INT(tmp_int_58[temp]), INT(tmp_int_57[temp]), INT(tmp_int_59[temp])
	STORE POINTER(tmp_pointer_3[temp]), INT(tmp_int_58[temp])
	MUL, INT(tmp_int_60[temp]), 2, 4
	ADD, INT(tmp_int_60[temp]), INT(tmp_int_60[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_60[temp]))->POINTER(tmp_pointer_5[temp])
	MUL, INT(tmp_int_61[temp]), 2, 4
	ADD, INT(tmp_int_61[temp]), INT(tmp_int_61[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_61[temp]))->POINTER(tmp_pointer_6[temp])
	LOAD POINTER(tmp_pointer_6[temp]), INT(tmp_int_62[temp])
	MUL, INT(tmp_int_64[temp]), INT(k[sp-0x14]), INT(k[sp-0x14])
	ADD, INT(tmp_int_63[temp]), INT(tmp_int_62[temp]), INT(tmp_int_64[temp])
	STORE POINTER(tmp_pointer_5[temp]), INT(tmp_int_63[temp])
	MUL, INT(tmp_int_65[temp]), 3, 4
	ADD, INT(tmp_int_65[temp]), INT(tmp_int_65[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_65[temp]))->POINTER(tmp_pointer_7[temp])
	MUL, INT(tmp_int_66[temp]), 3, 4
	ADD, INT(tmp_int_66[temp]), INT(tmp_int_66[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_66[temp]))->POINTER(tmp_pointer_8[temp])
	LOAD POINTER(tmp_pointer_8[temp]), INT(tmp_int_67[temp])
	MUL, INT(tmp_int_69[temp]), INT(k[sp-0x14]), INT(k[sp-0x14])
	ADD, INT(tmp_int_68[temp]), INT(tmp_int_67[temp]), INT(tmp_int_69[temp])
	STORE POINTER(tmp_pointer_7[temp]), INT(tmp_int_68[temp])
	MUL, INT(tmp_int_70[temp]), 4, 4
	ADD, INT(tmp_int_70[temp]), INT(tmp_int_70[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_70[temp]))->POINTER(tmp_pointer_9[temp])
	MUL, INT(tmp_int_71[temp]), 4, 4
	ADD, INT(tmp_int_71[temp]), INT(tmp_int_71[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_71[temp]))->POINTER(tmp_pointer_10[temp])
	LOAD POINTER(tmp_pointer_10[temp]), INT(tmp_int_72[temp])
	MUL, INT(tmp_int_74[temp]), INT(k[sp-0x14]), INT(k[sp-0x14])
	ADD, INT(tmp_int_73[temp]), INT(tmp_int_72[temp]), INT(tmp_int_74[temp])
	STORE POINTER(tmp_pointer_9[temp]), INT(tmp_int_73[temp])
	MUL, INT(tmp_int_75[temp]), 5, 4
	ADD, INT(tmp_int_75[temp]), INT(tmp_int_75[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_75[temp]))->POINTER(tmp_pointer_11[temp])
	MUL, INT(tmp_int_76[temp]), 5, 4
	ADD, INT(tmp_int_76[temp]), INT(tmp_int_76[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_76[temp]))->POINTER(tmp_pointer_12[temp])
	LOAD POINTER(tmp_pointer_12[temp]), INT(tmp_int_77[temp])
	MUL, INT(tmp_int_79[temp]), INT(k[sp-0x14]), INT(k[sp-0x14])
	ADD, INT(tmp_int_78[temp]), INT(tmp_int_77[temp]), INT(tmp_int_79[temp])
	STORE POINTER(tmp_pointer_11[temp]), INT(tmp_int_78[temp])
	MUL, INT(tmp_int_80[temp]), 6, 4
	ADD, INT(tmp_int_80[temp]), INT(tmp_int_80[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_80[temp]))->POINTER(tmp_pointer_13[temp])
	MUL, INT(tmp_int_81[temp]), 6, 4
	ADD, INT(tmp_int_81[temp]), INT(tmp_int_81[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_81[temp]))->POINTER(tmp_pointer_14[temp])
	LOAD POINTER(tmp_pointer_14[temp]), INT(tmp_int_82[temp])
	MUL, INT(tmp_int_84[temp]), INT(k[sp-0x14]), INT(k[sp-0x14])
	ADD, INT(tmp_int_83[temp]), INT(tmp_int_82[temp]), INT(tmp_int_84[temp])
	STORE POINTER(tmp_pointer_13[temp]), INT(tmp_int_83[temp])
	MUL, INT(tmp_int_85[temp]), 7, 4
	ADD, INT(tmp_int_85[temp]), INT(tmp_int_85[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_85[temp]))->POINTER(tmp_pointer_15[temp])
	MUL, INT(tmp_int_86[temp]), 7, 4
	ADD, INT(tmp_int_86[temp]), INT(tmp_int_86[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_86[temp]))->POINTER(tmp_pointer_16[temp])
	LOAD POINTER(tmp_pointer_16[temp]), INT(tmp_int_87[temp])
	MUL, INT(tmp_int_89[temp]), INT(k[sp-0x14]), INT(k[sp-0x14])
	ADD, INT(tmp_int_88[temp]), INT(tmp_int_87[temp]), INT(tmp_int_89[temp])
	STORE POINTER(tmp_pointer_15[temp]), INT(tmp_int_88[temp])
	MUL, INT(tmp_int_90[temp]), 8, 4
	ADD, INT(tmp_int_90[temp]), INT(tmp_int_90[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_90[temp]))->POINTER(tmp_pointer_17[temp])
	MUL, INT(tmp_int_91[temp]), 8, 4
	ADD, INT(tmp_int_91[temp]), INT(tmp_int_91[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_91[temp]))->POINTER(tmp_pointer_18[temp])
	LOAD POINTER(tmp_pointer_18[temp]), INT(tmp_int_92[temp])
	MUL, INT(tmp_int_94[temp]), INT(k[sp-0x14]), INT(k[sp-0x14])
	ADD, INT(tmp_int_93[temp]), INT(tmp_int_92[temp]), INT(tmp_int_94[temp])
	STORE POINTER(tmp_pointer_17[temp]), INT(tmp_int_93[temp])
	MUL, INT(tmp_int_95[temp]), 9, 4
	ADD, INT(tmp_int_95[temp]), INT(tmp_int_95[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_95[temp]))->POINTER(tmp_pointer_19[temp])
	MUL, INT(tmp_int_96[temp]), 9, 4
	ADD, INT(tmp_int_96[temp]), INT(tmp_int_96[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_96[temp]))->POINTER(tmp_pointer_20[temp])
	LOAD POINTER(tmp_pointer_20[temp]), INT(tmp_int_97[temp])
	MUL, INT(tmp_int_99[temp]), INT(k[sp-0x14]), INT(k[sp-0x14])
	ADD, INT(tmp_int_98[temp]), INT(tmp_int_97[temp]), INT(tmp_int_99[temp])
	STORE POINTER(tmp_pointer_19[temp]), INT(tmp_int_98[temp])
	ADD, INT(tmp_int_100[temp]), INT(i[sp-0x4]), 1
	ASS, INT(i[sp-0x4]), INT(tmp_int_100[temp])
	JUMP B_31
B_31:
	JUMP WHILE_21
WHILE_END_23:
	ASS, INT(i[sp-0x4]), 0
	JUMP WHILE_32
WHILE_32:
	JUMP L_OR_EXP_35
L_OR_EXP_35:
	JUMP L_AND_EXP_37
L_AND_EXP_37:
	LT, INT(tmp_int_101[temp]), INT(i[sp-0x4]), 10
	ASS, INT(tmp_int_102[temp]), INT(tmp_int_101[temp])
	Branch INT(tmp_int_101[temp]) ? AND_39 : AND_END_38
AND_39:
	JUMP AND_END_38
AND_END_38:
	ASS, INT(tmp_int_103[temp]), INT(tmp_int_102[temp])
	Branch INT(tmp_int_103[temp]) ? OR_END_36 : OR_40
OR_40:
	JUMP OR_END_36
OR_END_36:
	Branch INT(tmp_int_103[temp]) ? WHILE_BODY_33 : WHILE_END_34
WHILE_BODY_33:
	JUMP B_41
B_41:
	MUL, INT(tmp_int_104[temp]), INT(i[sp-0x4]), 4
	ADD, INT(tmp_int_104[temp]), INT(tmp_int_104[temp]), 0
	OFFSET (ARRAY(a[data+0x4])+INT(tmp_int_104[temp]))->POINTER(tmp_pointer_21[temp])
	LOAD POINTER(tmp_pointer_21[temp]), INT(tmp_int_105[temp])
	PRINT_INT INT(tmp_int_105[temp])
	PRINT_STR STR_1
	ADD, INT(tmp_int_106[temp]), INT(i[sp-0x4]), 1
	ASS, INT(i[sp-0x4]), INT(tmp_int_106[temp])
	JUMP B_42
B_42:
	JUMP WHILE_32
WHILE_END_34:
	PRINT_STR STR_2
	PRINT_INT INT(i[sp-0x4])
	PRINT_STR STR_1
	PRINT_INT INT(j[sp-0x8])
	PRINT_STR STR_1
	PRINT_INT INT(k[sp-0x14])
	PRINT_STR STR_2
	RETURN 0
