###### GLOBAL STRING ######
STR_1 : run:
STR_2 : \n
STR_3 : not run:
STR_4 : 2022!!!\n
STR_5 : printsth\n
STR_6 : 20373614\n
STR_7 : LOW:
STR_8 : HIGH:
STR_9 : add:
STR_10 : input:
STR_11 : year1:
STR_12 : ,year2:
STR_13 : ,year3:
STR_14 : ,year4:
STR_15 : ,year5:
STR_16 : ,year6:

###### GLOBAL ARRAY ######
[0x0]array s1_1: 100 200 300 400 500 111 222 333 444 555 99 102 0 123 145
[0x3c]array s2_1: 100 200 300 400 500 111 222 333 444 555 99 102 0 123 145
[0x78]array add: 123 666 456
[0x84]array s_2: 0 0 0
[0x90]array s_3: 0 0 0
[0xa8]array month: 1 2 3 4 5 6 7 8 9

###### GLOBAL VAR ######
[0x9c]a1: 1
[0xa0]a2: 2
[0xa4]a3: 3
[0xcc]year_1: 4
[0xd0]year_2: 100

###### TEXT ######
JUMP FUNC_main
# func get_average : stack size 0xc
# param: ARRAY(a[sp-0x4])
FUNC_get_average:
	DEF, INT(s[sp-0x8]), 0
	DEF, INT(i[sp-0xc]), 2
WHILE_0:
L_OR_EXP_3:
L_AND_EXP_5:
	GE, INT(tmp_int_0[temp]), INT(i[sp-0xc]), 0
	ASS, INT(tmp_int_1[temp]), INT(tmp_int_0[temp])
	Branch INT(tmp_int_0[temp]) ? AND_7 : AND_END_6
AND_7:
AND_END_6:
	ASS, INT(tmp_int_2[temp]), INT(tmp_int_1[temp])
	Branch INT(tmp_int_2[temp]) ? OR_END_4 : OR_8
OR_8:
OR_END_4:
	Branch INT(tmp_int_2[temp]) ? WHILE_BODY_1 : WHILE_END_2
WHILE_BODY_1:
B_9:
	MUL, INT(tmp_int_3[temp]), 0, 4
	ADD, INT(tmp_int_3[temp]), INT(tmp_int_3[temp]), 0
	MUL, INT(tmp_int_4[temp]), INT(i[sp-0xc]), 20
	ADD, INT(tmp_int_4[temp]), INT(tmp_int_4[temp]), INT(tmp_int_3[temp])
	OFFSET (ARRAY(a[sp-0x4])+INT(tmp_int_4[temp]))->POINTER(tmp_pointer_0[temp])
	LOAD POINTER(tmp_pointer_0[temp]), INT(tmp_int_5[temp])
	MUL, INT(tmp_int_7[temp]), 1, 4
	ADD, INT(tmp_int_7[temp]), INT(tmp_int_7[temp]), 0
	MUL, INT(tmp_int_8[temp]), INT(i[sp-0xc]), 20
	ADD, INT(tmp_int_8[temp]), INT(tmp_int_8[temp]), INT(tmp_int_7[temp])
	OFFSET (ARRAY(a[sp-0x4])+INT(tmp_int_8[temp]))->POINTER(tmp_pointer_1[temp])
	LOAD POINTER(tmp_pointer_1[temp]), INT(tmp_int_9[temp])
	ADD, INT(tmp_int_6[temp]), INT(tmp_int_5[temp]), INT(tmp_int_9[temp])
	MUL, INT(tmp_int_11[temp]), 2, 4
	ADD, INT(tmp_int_11[temp]), INT(tmp_int_11[temp]), 0
	MUL, INT(tmp_int_12[temp]), INT(i[sp-0xc]), 20
	ADD, INT(tmp_int_12[temp]), INT(tmp_int_12[temp]), INT(tmp_int_11[temp])
	OFFSET (ARRAY(a[sp-0x4])+INT(tmp_int_12[temp]))->POINTER(tmp_pointer_2[temp])
	LOAD POINTER(tmp_pointer_2[temp]), INT(tmp_int_13[temp])
	ADD, INT(tmp_int_10[temp]), INT(tmp_int_6[temp]), INT(tmp_int_13[temp])
	MUL, INT(tmp_int_15[temp]), 3, 4
	ADD, INT(tmp_int_15[temp]), INT(tmp_int_15[temp]), 0
	MUL, INT(tmp_int_16[temp]), INT(i[sp-0xc]), 20
	ADD, INT(tmp_int_16[temp]), INT(tmp_int_16[temp]), INT(tmp_int_15[temp])
	OFFSET (ARRAY(a[sp-0x4])+INT(tmp_int_16[temp]))->POINTER(tmp_pointer_3[temp])
	LOAD POINTER(tmp_pointer_3[temp]), INT(tmp_int_17[temp])
	ADD, INT(tmp_int_14[temp]), INT(tmp_int_10[temp]), INT(tmp_int_17[temp])
	MUL, INT(tmp_int_19[temp]), 4, 4
	ADD, INT(tmp_int_19[temp]), INT(tmp_int_19[temp]), 0
	MUL, INT(tmp_int_20[temp]), INT(i[sp-0xc]), 20
	ADD, INT(tmp_int_20[temp]), INT(tmp_int_20[temp]), INT(tmp_int_19[temp])
	OFFSET (ARRAY(a[sp-0x4])+INT(tmp_int_20[temp]))->POINTER(tmp_pointer_4[temp])
	LOAD POINTER(tmp_pointer_4[temp]), INT(tmp_int_21[temp])
	ADD, INT(tmp_int_18[temp]), INT(tmp_int_14[temp]), INT(tmp_int_21[temp])
	ASS, INT(s[sp-0x8]), INT(tmp_int_18[temp])
	DIV, INT(tmp_int_22[temp]), INT(s[sp-0x8]), 5
	ASS, INT(s[sp-0x8]), INT(tmp_int_22[temp])
	MUL, INT(tmp_int_23[temp]), INT(i[sp-0xc]), 4
	ADD, INT(tmp_int_23[temp]), INT(tmp_int_23[temp]), 0
	OFFSET (ARRAY(s_2[data+0x84])+INT(tmp_int_23[temp]))->POINTER(tmp_pointer_5[temp])
	STORE POINTER(tmp_pointer_5[temp]), INT(s[sp-0x8])
	SUB, INT(tmp_int_24[temp]), INT(i[sp-0xc]), 1
	ASS, INT(i[sp-0xc]), INT(tmp_int_24[temp])
B_10:
	JUMP WHILE_0
WHILE_END_2:
	RETURN VOID
# func blank : stack size 0xc
# param: INT(a[sp-0x4]), INT(b[sp-0x8]), INT(c[sp-0xc])
FUNC_blank:
	RETURN VOID
# func blank2 : stack size 0xc
# param: INT(a[sp-0x4]), ARRAY(b[sp-0x8]), ARRAY(C23[sp-0xc])
FUNC_blank2:
	RETURN VOID
# func add_1 : stack size 0x10
# param: INT(a[sp-0x4]), ARRAY(s[sp-0x8])
FUNC_add_1:
	DEF, INT(i_1[sp-0xc]), 2
	DEF, INT(sum[sp-0x10]), 0
WHILE_14:
L_OR_EXP_17:
L_AND_EXP_19:
	GE, INT(tmp_int_25[temp]), INT(i_1[sp-0xc]), 0
	ASS, INT(tmp_int_26[temp]), INT(tmp_int_25[temp])
	Branch INT(tmp_int_25[temp]) ? AND_21 : AND_END_20
AND_21:
AND_END_20:
	ASS, INT(tmp_int_27[temp]), INT(tmp_int_26[temp])
	Branch INT(tmp_int_27[temp]) ? OR_END_18 : OR_22
OR_22:
OR_END_18:
	Branch INT(tmp_int_27[temp]) ? WHILE_BODY_15 : WHILE_END_16
WHILE_BODY_15:
B_23:
	MUL, INT(tmp_int_29[temp]), INT(i_1[sp-0xc]), 4
	ADD, INT(tmp_int_29[temp]), INT(tmp_int_29[temp]), 0
	OFFSET (ARRAY(s[sp-0x8])+INT(tmp_int_29[temp]))->POINTER(tmp_pointer_6[temp])
	LOAD POINTER(tmp_pointer_6[temp]), INT(tmp_int_30[temp])
	ADD, INT(tmp_int_28[temp]), INT(sum[sp-0x10]), INT(tmp_int_30[temp])
	ASS, INT(sum[sp-0x10]), INT(tmp_int_28[temp])
	SUB, INT(tmp_int_31[temp]), INT(i_1[sp-0xc]), 1
	ASS, INT(i_1[sp-0xc]), INT(tmp_int_31[temp])
B_24:
	JUMP WHILE_14
WHILE_END_16:
	SUB, INT(tmp_int_32[temp]), INT(a[sp-0x4]), 3
	ASS, INT(a[sp-0x4]), INT(tmp_int_32[temp])
	DIV, INT(tmp_int_33[temp]), INT(sum[sp-0x10]), INT(a[sp-0x4])
	ASS, INT(sum[sp-0x10]), INT(tmp_int_33[temp])
	ADD, INT(tmp_int_34[temp]), INT(a[sp-0x4]), 4
	ASS, INT(a[sp-0x4]), INT(tmp_int_34[temp])
	MUL, INT(tmp_int_35[temp]), INT(sum[sp-0x10]), INT(a[sp-0x4])
	ASS, INT(sum[sp-0x10]), INT(tmp_int_35[temp])
	SUB, INT(tmp_int_36[temp]), INT(sum[sp-0x10]), INT(a[sp-0x4])
	ASS, INT(sum[sp-0x10]), INT(tmp_int_36[temp])
	ADD, INT(tmp_int_37[temp]), INT(a[sp-0x4]), 6
	ASS, INT(a[sp-0x4]), INT(tmp_int_37[temp])
	MOD, INT(tmp_int_38[temp]), INT(sum[sp-0x10]), INT(a[sp-0x4])
	ASS, INT(sum[sp-0x10]), INT(tmp_int_38[temp])
	RETURN INT(sum[sp-0x10])
# func checkyear : stack size 0x4
# param: INT(year[sp-0x4])
FUNC_checkyear:
L_OR_EXP_26:
L_AND_EXP_28:
	GE, INT(tmp_int_39[temp]), INT(year[sp-0x4]), 0
	ASS, INT(tmp_int_40[temp]), INT(tmp_int_39[temp])
	Branch INT(tmp_int_39[temp]) ? AND_30 : AND_END_29
AND_30:
AND_END_29:
	ASS, INT(tmp_int_41[temp]), INT(tmp_int_40[temp])
	Branch INT(tmp_int_41[temp]) ? OR_END_27 : OR_31
OR_31:
OR_END_27:
	Branch INT(tmp_int_41[temp]) ? IF_BODY_32 : IF_END_33
IF_BODY_32:
B_34:
	JUMP L_OR_EXP_35
	JUMP B_70
L_OR_EXP_35:
L_AND_EXP_37:
	NEQ, INT(tmp_int_42[temp]), INT(year[sp-0x4]), 2022
	ASS, INT(tmp_int_43[temp]), INT(tmp_int_42[temp])
	Branch INT(tmp_int_42[temp]) ? AND_39 : AND_END_38
AND_39:
AND_END_38:
	ASS, INT(tmp_int_44[temp]), INT(tmp_int_43[temp])
	Branch INT(tmp_int_44[temp]) ? OR_END_36 : OR_40
OR_40:
L_AND_EXP_41:
	LE, INT(tmp_int_45[temp]), INT(year[sp-0x4]), 2021
	ASS, INT(tmp_int_46[temp]), INT(tmp_int_45[temp])
	Branch INT(tmp_int_45[temp]) ? AND_43 : AND_END_42
AND_43:
AND_END_42:
	OR, INT(tmp_int_44[temp]), INT(tmp_int_46[temp]), INT(tmp_int_44[temp])
	Branch INT(tmp_int_44[temp]) ? OR_END_36 : OR_44
OR_44:
OR_END_36:
	Branch INT(tmp_int_44[temp]) ? IF_BODY_45 : IF_ELSE_47
IF_BODY_45:
B_48:
	JUMP L_OR_EXP_49
	JUMP B_67
L_OR_EXP_49:
L_AND_EXP_51:
	NEG, INT(tmp_int_48[temp]), INT(year_1[data+0xcc])
	NEG, INT(tmp_int_50[temp]), INT(year_2[data+0xd0])
	MUL, INT(tmp_int_49[temp]), INT(tmp_int_48[temp]), INT(tmp_int_50[temp])
	MOD, INT(tmp_int_47[temp]), INT(year[sp-0x4]), INT(tmp_int_49[temp])
	EQ, INT(tmp_int_51[temp]), INT(tmp_int_47[temp]), 0
	ASS, INT(tmp_int_52[temp]), INT(tmp_int_51[temp])
	Branch INT(tmp_int_51[temp]) ? AND_53 : AND_END_52
AND_53:
AND_END_52:
	ASS, INT(tmp_int_53[temp]), INT(tmp_int_52[temp])
	Branch INT(tmp_int_53[temp]) ? OR_END_50 : OR_54
OR_54:
L_AND_EXP_55:
	MOD, INT(tmp_int_54[temp]), INT(year[sp-0x4]), INT(year_1[data+0xcc])
	EQ, INT(tmp_int_55[temp]), INT(tmp_int_54[temp]), 0
	ASS, INT(tmp_int_56[temp]), INT(tmp_int_55[temp])
	Branch INT(tmp_int_55[temp]) ? AND_57 : AND_END_56
AND_57:
	MOD, INT(tmp_int_57[temp]), INT(year[sp-0x4]), INT(year_2[data+0xd0])
	NEQ, INT(tmp_int_58[temp]), INT(tmp_int_57[temp]), 0
	AND, INT(tmp_int_56[temp]), INT(tmp_int_58[temp]), INT(tmp_int_56[temp])
	Branch INT(tmp_int_56[temp]) ? AND_58 : AND_END_56
AND_58:
AND_END_56:
	OR, INT(tmp_int_53[temp]), INT(tmp_int_56[temp]), INT(tmp_int_53[temp])
	Branch INT(tmp_int_53[temp]) ? OR_END_50 : OR_59
OR_59:
OR_END_50:
	Branch INT(tmp_int_53[temp]) ? IF_BODY_60 : IF_ELSE_62
IF_BODY_60:
B_63:
	PRINT_STR STR_1
	PRINT_INT INT(year[sp-0x4])
	PRINT_STR STR_2
B_64:
	JUMP IF_END_61
IF_ELSE_62:
B_65:
	PRINT_STR STR_3
	PRINT_INT INT(year[sp-0x4])
	PRINT_STR STR_2
B_66:
IF_END_61:
B_67:
	JUMP IF_END_46
IF_ELSE_47:
B_68:
	PRINT_STR STR_4
B_69:
IF_END_46:
B_70:
IF_END_33:
	RETURN INT(year[sp-0x4])
# func printsth : stack size 0x0
# param: 
FUNC_printsth:
	PRINT_STR STR_5
	RETURN VOID
# func main : stack size 0x40
# param: 
FUNC_main:
B_73:
	DEF, INT(j[sp-0x4]), 0
	DEF, INT(k[sp-0x8]), 3
	DEF, INT(i[sp-0xc]), 3
	DEF, INT(in_put[sp-0x10]), 0
	DEF, INT(x[sp-0x14]), 0
	DEF, INT(y[sp-0x18]), 0
	DEF, INT(z[sp-0x1c]), 0
	DEF, INT(x_1[sp-0x20]), 0
	DEF, INT(y_1[sp-0x24]), 0
	DEF, INT(z_1[sp-0x28]), 0
	DEF, INT(aaa[sp-0x2c]), 0
	DEF, INT(bbb[sp-0x30]), 0
	DEF, INT(ccc[sp-0x34]), 0
	DEF, INT(ddd[sp-0x38]), 0
	DEF, INT(eee[sp-0x3c]), 0
	DEF, INT(fff[sp-0x40]), 0
	GETINT INT(in_put[sp-0x10])
	GETINT INT(x[sp-0x14])
	GETINT INT(y[sp-0x18])
	GETINT INT(z[sp-0x1c])
	GETINT INT(x_1[sp-0x20])
	GETINT INT(y_1[sp-0x24])
	GETINT INT(z_1[sp-0x28])
	PRINT_STR STR_6
	OFFSET (ARRAY(s1_1[data+0x0])+0)->POINTER(tmp_pointer_7[temp])
	Call FUNC_get_average; Params: POINTER(tmp_pointer_7[temp])
	JUMP WHILE_74
	JUMP B_135
WHILE_74:
L_OR_EXP_77:
L_AND_EXP_79:
	GT, INT(tmp_int_59[temp]), INT(i[sp-0xc]), 0
	ASS, INT(tmp_int_60[temp]), INT(tmp_int_59[temp])
	Branch INT(tmp_int_59[temp]) ? AND_81 : AND_END_80
AND_81:
AND_END_80:
	ASS, INT(tmp_int_61[temp]), INT(tmp_int_60[temp])
	Branch INT(tmp_int_61[temp]) ? OR_END_78 : OR_82
OR_82:
OR_END_78:
	Branch INT(tmp_int_61[temp]) ? WHILE_BODY_75 : WHILE_END_76
WHILE_BODY_75:
B_83:
	JUMP L_OR_EXP_84
	JUMP B_134
L_OR_EXP_84:
L_AND_EXP_86:
	SUB, INT(tmp_int_63[temp]), INT(i[sp-0xc]), 1
	MUL, INT(tmp_int_62[temp]), INT(tmp_int_63[temp]), 4
	ADD, INT(tmp_int_62[temp]), INT(tmp_int_62[temp]), 0
	OFFSET (ARRAY(s_2[data+0x84])+INT(tmp_int_62[temp]))->POINTER(tmp_pointer_8[temp])
	LOAD POINTER(tmp_pointer_8[temp]), INT(tmp_int_64[temp])
	EQ, INT(tmp_int_65[temp]), INT(tmp_int_64[temp]), 300
	ASS, INT(tmp_int_66[temp]), INT(tmp_int_65[temp])
	Branch INT(tmp_int_65[temp]) ? AND_88 : AND_END_87
AND_88:
AND_END_87:
	ASS, INT(tmp_int_67[temp]), INT(tmp_int_66[temp])
	Branch INT(tmp_int_67[temp]) ? OR_END_85 : OR_89
OR_89:
OR_END_85:
	Branch INT(tmp_int_67[temp]) ? IF_BODY_90 : IF_ELSE_92
IF_BODY_90:
B_93:
	SUB, INT(tmp_int_68[temp]), INT(i[sp-0xc]), 1
	ASS, INT(i[sp-0xc]), INT(tmp_int_68[temp])
	JUMP WHILE_74
B_94:
	JUMP IF_END_91
IF_ELSE_92:
B_95:
	JUMP L_OR_EXP_96
	JUMP B_133
L_OR_EXP_96:
L_AND_EXP_98:
	ASS, INT(tmp_int_69[temp]), 1
	Branch 1 ? AND_100 : AND_END_99
AND_100:
	SUB, INT(tmp_int_71[temp]), INT(i[sp-0xc]), 1
	MUL, INT(tmp_int_70[temp]), INT(tmp_int_71[temp]), 4
	ADD, INT(tmp_int_70[temp]), INT(tmp_int_70[temp]), 0
	OFFSET (ARRAY(s_2[data+0x84])+INT(tmp_int_70[temp]))->POINTER(tmp_pointer_9[temp])
	LOAD POINTER(tmp_pointer_9[temp]), INT(tmp_int_72[temp])
	SUB, INT(tmp_int_73[temp]), INT(tmp_int_72[temp]), 300
	NOT, INT(tmp_int_74[temp]), INT(tmp_int_73[temp])
	AND, INT(tmp_int_69[temp]), INT(tmp_int_74[temp]), INT(tmp_int_69[temp])
	Branch INT(tmp_int_69[temp]) ? AND_101 : AND_END_99
AND_101:
	SUB, INT(tmp_int_76[temp]), INT(i[sp-0xc]), 1
	MUL, INT(tmp_int_75[temp]), INT(tmp_int_76[temp]), 4
	ADD, INT(tmp_int_75[temp]), INT(tmp_int_75[temp]), 0
	OFFSET (ARRAY(s_2[data+0x84])+INT(tmp_int_75[temp]))->POINTER(tmp_pointer_10[temp])
	LOAD POINTER(tmp_pointer_10[temp]), INT(tmp_int_77[temp])
	LT, INT(tmp_int_78[temp]), INT(tmp_int_77[temp]), 100
	AND, INT(tmp_int_69[temp]), INT(tmp_int_78[temp]), INT(tmp_int_69[temp])
	Branch INT(tmp_int_69[temp]) ? AND_102 : AND_END_99
AND_102:
AND_END_99:
	ASS, INT(tmp_int_79[temp]), INT(tmp_int_69[temp])
	Branch INT(tmp_int_79[temp]) ? OR_END_97 : OR_103
OR_103:
OR_END_97:
	Branch INT(tmp_int_79[temp]) ? IF_BODY_104 : IF_END_105
IF_BODY_104:
B_106:
	SUB, INT(tmp_int_81[temp]), INT(i[sp-0xc]), 1
	MUL, INT(tmp_int_80[temp]), INT(tmp_int_81[temp]), 4
	ADD, INT(tmp_int_80[temp]), INT(tmp_int_80[temp]), 0
	OFFSET (ARRAY(s_2[data+0x84])+INT(tmp_int_80[temp]))->POINTER(tmp_pointer_11[temp])
	LOAD POINTER(tmp_pointer_11[temp]), INT(tmp_int_82[temp])
	PRINT_STR STR_7
	PRINT_INT INT(tmp_int_82[temp])
	PRINT_STR STR_2
B_107:
IF_END_105:
L_OR_EXP_108:
L_AND_EXP_110:
	ASS, INT(tmp_int_83[temp]), 1
	Branch 1 ? AND_112 : AND_END_111
AND_112:
	GT, INT(tmp_int_84[temp]), 0, 1
	AND, INT(tmp_int_83[temp]), INT(tmp_int_84[temp]), INT(tmp_int_83[temp])
	Branch INT(tmp_int_83[temp]) ? AND_113 : AND_END_111
AND_113:
AND_END_111:
	ASS, INT(tmp_int_85[temp]), INT(tmp_int_83[temp])
	Branch INT(tmp_int_85[temp]) ? OR_END_109 : OR_114
OR_114:
OR_END_109:
	Branch INT(tmp_int_85[temp]) ? IF_BODY_115 : IF_END_116
IF_BODY_115:
B_117:
	JUMP L_OR_EXP_118
	JUMP B_132
L_OR_EXP_118:
L_AND_EXP_120:
	SUB, INT(tmp_int_87[temp]), INT(i[sp-0xc]), 1
	MUL, INT(tmp_int_86[temp]), INT(tmp_int_87[temp]), 4
	ADD, INT(tmp_int_86[temp]), INT(tmp_int_86[temp]), 0
	OFFSET (ARRAY(s_2[data+0x84])+INT(tmp_int_86[temp]))->POINTER(tmp_pointer_12[temp])
	LOAD POINTER(tmp_pointer_12[temp]), INT(tmp_int_88[temp])
	EQ, INT(tmp_int_89[temp]), INT(tmp_int_88[temp]), 300
	ASS, INT(tmp_int_90[temp]), INT(tmp_int_89[temp])
	Branch INT(tmp_int_89[temp]) ? AND_122 : AND_END_121
AND_122:
AND_END_121:
	ASS, INT(tmp_int_91[temp]), INT(tmp_int_90[temp])
	Branch INT(tmp_int_91[temp]) ? OR_END_119 : OR_123
OR_123:
L_AND_EXP_124:
	SUB, INT(tmp_int_93[temp]), INT(i[sp-0xc]), 1
	MUL, INT(tmp_int_92[temp]), INT(tmp_int_93[temp]), 4
	ADD, INT(tmp_int_92[temp]), INT(tmp_int_92[temp]), 0
	OFFSET (ARRAY(s_2[data+0x84])+INT(tmp_int_92[temp]))->POINTER(tmp_pointer_13[temp])
	LOAD POINTER(tmp_pointer_13[temp]), INT(tmp_int_94[temp])
	GT, INT(tmp_int_95[temp]), INT(tmp_int_94[temp]), 332
	ASS, INT(tmp_int_96[temp]), INT(tmp_int_95[temp])
	Branch INT(tmp_int_95[temp]) ? AND_126 : AND_END_125
AND_126:
AND_END_125:
	OR, INT(tmp_int_91[temp]), INT(tmp_int_96[temp]), INT(tmp_int_91[temp])
	Branch INT(tmp_int_91[temp]) ? OR_END_119 : OR_127
OR_127:
OR_END_119:
	Branch INT(tmp_int_91[temp]) ? IF_BODY_128 : IF_END_129
IF_BODY_128:
B_130:
	SUB, INT(tmp_int_98[temp]), INT(i[sp-0xc]), 1
	MUL, INT(tmp_int_97[temp]), INT(tmp_int_98[temp]), 4
	ADD, INT(tmp_int_97[temp]), INT(tmp_int_97[temp]), 0
	OFFSET (ARRAY(s_2[data+0x84])+INT(tmp_int_97[temp]))->POINTER(tmp_pointer_14[temp])
	LOAD POINTER(tmp_pointer_14[temp]), INT(tmp_int_99[temp])
	PRINT_STR STR_8
	PRINT_INT INT(tmp_int_99[temp])
	PRINT_STR STR_2
	JUMP WHILE_END_76
B_131:
IF_END_129:
B_132:
IF_END_116:
	SUB, INT(tmp_int_100[temp]), INT(i[sp-0xc]), 1
	ASS, INT(i[sp-0xc]), INT(tmp_int_100[temp])
B_133:
IF_END_91:
B_134:
	JUMP WHILE_74
WHILE_END_76:
	OFFSET (ARRAY(add[data+0x78])+0)->POINTER(tmp_pointer_15[temp])
	Call FUNC_add_1; Params: 5, POINTER(tmp_pointer_15[temp]); RET INT(tmp_int_101[temp])
	ASS, INT(j[sp-0x4]), INT(tmp_int_101[temp])
	PRINT_STR STR_9
	PRINT_INT INT(j[sp-0x4])
	PRINT_STR STR_2
	OFFSET (ARRAY(add[data+0x78])+0)->POINTER(tmp_pointer_16[temp])
	Call FUNC_add_1; Params: INT(in_put[sp-0x10]), POINTER(tmp_pointer_16[temp]); RET INT(tmp_int_102[temp])
	ASS, INT(k[sp-0x8]), INT(tmp_int_102[temp])
	PRINT_STR STR_10
	PRINT_INT INT(k[sp-0x8])
	PRINT_STR STR_2
	Call FUNC_checkyear; Params: INT(x[sp-0x14]); RET INT(tmp_int_103[temp])
	ASS, INT(aaa[sp-0x2c]), INT(tmp_int_103[temp])
	Call FUNC_checkyear; Params: INT(y[sp-0x18]); RET INT(tmp_int_104[temp])
	ASS, INT(bbb[sp-0x30]), INT(tmp_int_104[temp])
	Call FUNC_checkyear; Params: INT(z[sp-0x1c]); RET INT(tmp_int_105[temp])
	ASS, INT(ccc[sp-0x34]), INT(tmp_int_105[temp])
	Call FUNC_checkyear; Params: INT(x_1[sp-0x20]); RET INT(tmp_int_106[temp])
	ASS, INT(ddd[sp-0x38]), INT(tmp_int_106[temp])
	Call FUNC_checkyear; Params: INT(y_1[sp-0x24]); RET INT(tmp_int_107[temp])
	ASS, INT(eee[sp-0x3c]), INT(tmp_int_107[temp])
	Call FUNC_checkyear; Params: INT(z_1[sp-0x28]); RET INT(tmp_int_108[temp])
	ASS, INT(fff[sp-0x40]), INT(tmp_int_108[temp])
	OFFSET (ARRAY(add[data+0x78])+0)->POINTER(tmp_pointer_17[temp])
	MUL, INT(tmp_int_109[temp]), 0, 20
	ADD, INT(tmp_int_109[temp]), INT(tmp_int_109[temp]), 0
	OFFSET (ARRAY(s1_1[data+0x0])+INT(tmp_int_109[temp]))->POINTER(tmp_pointer_18[temp])
	Call FUNC_blank2; Params: INT(j[sp-0x4]), POINTER(tmp_pointer_17[temp]), POINTER(tmp_pointer_18[temp])
	PRINT_STR STR_11
	PRINT_INT INT(aaa[sp-0x2c])
	PRINT_STR STR_12
	PRINT_INT INT(bbb[sp-0x30])
	PRINT_STR STR_13
	PRINT_INT INT(ccc[sp-0x34])
	PRINT_STR STR_14
	PRINT_INT INT(ddd[sp-0x38])
	PRINT_STR STR_15
	PRINT_INT INT(eee[sp-0x3c])
	PRINT_STR STR_16
	PRINT_INT INT(fff[sp-0x40])
	PRINT_STR STR_2
B_135:
	Call FUNC_printsth; Params: 
	RETURN 0
