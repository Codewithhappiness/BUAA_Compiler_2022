###### GLOBAL STRING ######
STR_1 : 20373053\n
STR_3 : \n
STR_2 : c is 

###### GLOBAL ARRAY ######

###### GLOBAL VAR ######
[0x4]temp: 100
[0x0]PI: 3

###### TEXT ######
JUMP FUNC_main
# func add : stack size 0x8
# param: INT(a[sp-0x4]), INT(b[sp-0x8])
FUNC_add:
	ADD, INT(a[sp-0x4]), INT(b[sp-0x8]), INT(tmp_int_0[temp])
	RETURN INT(tmp_int_0[temp])
# func main : stack size 0x10
# param: 
FUNC_main:
	DEF, 9, INT(a[sp-0x4])
	DEF, 11, INT(b[sp-0x8])
	DEF, 0, INT(c[sp-0xc])
	DEF, 10, INT(now[sp-0x10])
	JUMP WHILE_1
WHILE_1:
	JUMP L_OR_EXP_4
L_OR_EXP_4:
	JUMP L_AND_EXP_6
L_AND_EXP_6:
	GT, INT(now[sp-0x10]), 0, INT(tmp_int_1[temp])
	ASS, INT(tmp_int_1[temp]), INT(tmp_int_2[temp])
	Branch INT(tmp_int_1[temp]) ? AND_8 : AND_END_7
AND_8:
	JUMP AND_END_7
AND_END_7:
	ASS, INT(tmp_int_2[temp]), INT(tmp_int_3[temp])
	Branch INT(tmp_int_3[temp]) ? OR_END_5 : OR_9
OR_9:
	JUMP OR_END_5
OR_END_5:
	Branch INT(tmp_int_3[temp]) ? WHILE_BODY_2 : WHILE_END_3
WHILE_BODY_2:
	JUMP B_10
B_10:
	SUB, INT(now[sp-0x10]), 1, INT(tmp_int_4[temp])
	ASS, INT(tmp_int_4[temp]), INT(now[sp-0x10])
	PRINT_STR STR_1
	JUMP B_11
B_11:
	JUMP WHILE_1
WHILE_END_3:
	JUMP WHILE_12
WHILE_12:
	JUMP L_OR_EXP_15
L_OR_EXP_15:
	JUMP L_AND_EXP_17
L_AND_EXP_17:
	LT, INT(c[sp-0xc]), 10000, INT(tmp_int_5[temp])
	ASS, INT(tmp_int_5[temp]), INT(tmp_int_6[temp])
	Branch INT(tmp_int_5[temp]) ? AND_19 : AND_END_18
AND_19:
	JUMP AND_END_18
AND_END_18:
	ASS, INT(tmp_int_6[temp]), INT(tmp_int_7[temp])
	Branch INT(tmp_int_7[temp]) ? OR_END_16 : OR_20
OR_20:
	JUMP OR_END_16
OR_END_16:
	Branch INT(tmp_int_7[temp]) ? WHILE_BODY_13 : WHILE_END_14
WHILE_BODY_13:
	JUMP B_21
B_21:
	JUMP L_OR_EXP_22
	JUMP B_35
L_OR_EXP_22:
	JUMP L_AND_EXP_24
L_AND_EXP_24:
	LT, INT(c[sp-0xc]), 50, INT(tmp_int_8[temp])
	ASS, INT(tmp_int_8[temp]), INT(tmp_int_9[temp])
	Branch INT(tmp_int_8[temp]) ? AND_26 : AND_END_25
AND_26:
	JUMP AND_END_25
AND_END_25:
	ASS, INT(tmp_int_9[temp]), INT(tmp_int_10[temp])
	Branch INT(tmp_int_10[temp]) ? OR_END_23 : OR_27
OR_27:
	JUMP OR_END_23
OR_END_23:
	Branch INT(tmp_int_10[temp]) ? IF_BODY_28 : IF_ELSE_30
IF_BODY_28:
	JUMP B_31
B_31:
	Call FUNC_add; Params: INT(c[sp-0xc]), INT(a[sp-0x4]); RET INT(tmp_int_11[temp])
	ASS, INT(tmp_int_11[temp]), INT(c[sp-0xc])
	JUMP B_32
B_32:
	JUMP IF_END_29
IF_ELSE_30:
	JUMP B_33
B_33:
	Call FUNC_add; Params: INT(c[sp-0xc]), INT(b[sp-0x8]); RET INT(tmp_int_12[temp])
	ASS, INT(tmp_int_12[temp]), INT(c[sp-0xc])
	JUMP B_34
B_34:
	JUMP IF_END_29
IF_END_29:
	PRINT_STR STR_2
	PRINT_INT INT(c[sp-0xc])
	PRINT_STR STR_3
	JUMP B_35
B_35:
	JUMP WHILE_12
WHILE_END_14:
	PRINT_INT INT(c[sp-0xc])
	RETURN 0
