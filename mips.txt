# Yuelin's Compiler
	
.data
	global:
	
	.space 4
	STR_1: .asciiz ", "
	STR_2: .asciiz "\n"
.text
	la $gp, global
	j FUNC_main
FUNC_main:
	# DEF, INT(a[sp-0x4]), 1
	li $5, 1
	# DEF, INT(b[sp-0x8]), 44
	li $6, 44
	# DEF, INT(d[sp-0xc]), 132
	li $7, 132
	# DEF, INT(f[sp-0x10]), 9
	li $8, 9
	# DEF, INT(h[sp-0x14]), 8991
	li $9, 8991
	# MUL, INT(tmp_int_0[temp]), INT(a[sp-0x4]), INT(f[sp-0x10])
	mult $5 $8
	mflo $10
	# MUL, INT(tmp_int_1[temp]), INT(tmp_int_0[temp]), 9
	sll $11, $10, 3
	addu $11, $11, $10
	# ADD, INT(tmp_int_2[temp]), INT(tmp_int_1[temp]), 9
	addiu $12, $11, 9
	# ADD, INT(tmp_int_3[temp]), INT(tmp_int_2[temp]), INT(b[sp-0x8])
	addu $13, $12, $6
	# DEF, INT(j[sp-0x18]), INT(tmp_int_3[temp])
	move $14, $13
	# PRINT_INT INT(a[sp-0x4])
	li $2, 1
	move $4, $5
	syscall
	# PRINT_STR STR_1
	li $2, 4
	la $4, STR_1
	syscall
	# PRINT_INT INT(b[sp-0x8])
	li $2, 1
	move $4, $6
	syscall
	# PRINT_STR STR_1
	li $2, 4
	la $4, STR_1
	syscall
	# PRINT_INT INT(d[sp-0xc])
	li $2, 1
	move $4, $7
	syscall
	# PRINT_STR STR_1
	li $2, 4
	la $4, STR_1
	syscall
	# PRINT_INT INT(f[sp-0x10])
	li $2, 1
	move $4, $8
	syscall
	# PRINT_STR STR_1
	li $2, 4
	la $4, STR_1
	syscall
	# PRINT_INT INT(h[sp-0x14])
	li $2, 1
	move $4, $9
	syscall
	# PRINT_STR STR_1
	li $2, 4
	la $4, STR_1
	syscall
	# PRINT_INT INT(j[sp-0x18])
	li $2, 1
	move $4, $14
	syscall
	# PRINT_STR STR_2
	li $2, 4
	la $4, STR_2
	syscall
	# RETURN 0
	li $2, 10
	syscall
	
