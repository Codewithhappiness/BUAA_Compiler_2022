# Yuelin's Compiler
	
.data
	global:
	555
	.space 4
	STR_1: .asciiz "\n"
	STR_2: .asciiz "20373057\n"
.text
	la $gp, global
	j FUNC_main
FUNC_func:
	# DEF, 114500, INT(a[sp-0x4])
	li $5, 114500
	# DEF, 10, INT(b[sp-0x8])
	li $6, 10
	# ADD, INT(a[sp-0x4]), INT(b[sp-0x8]), INT(tmp_int_0[temp])
	addu $7, $5, $6
	# SUB, INT(tmp_int_0[temp]), 4, INT(tmp_int_1[temp])
	addiu $8, $7, -4
	# ADD, INT(tmp_int_1[temp]), 8, INT(tmp_int_2[temp])
	addiu $9, $8, 8
	# RETURN INT(tmp_int_2[temp])
	move $2, $9
	sw $5, -0x4($29)
	sw $6, -0x8($29)
	sw $9, -0xc($29)
	jr $ra
	
FUNC_func2:
	# MUL, INT(a[sp-0x4]), INT(b[sp-0x8]), INT(tmp_int_3[temp])
	lw $11, -0x4($29)
	lw $12, -0x8($29)
	mult $11 $12
	mflo $10
	# ADD, INT(tmp_int_3[temp]), INT(c[sp-0xc]), INT(tmp_int_4[temp])
	lw $14, -0xc($29)
	addu $13, $10, $14
	# RETURN INT(tmp_int_4[temp])
	move $2, $13
	sw $11, -0x4($29)
	sw $12, -0x8($29)
	sw $13, -0x10($29)
	sw $14, -0xc($29)
	jr $ra
	
FUNC_main:
	# DEF, 666, INT(N[sp-0x4])
	li $15, 666
	# PRINT_STR STR_2
	li $2, 4
	la $4, STR_2
	syscall
	# Call FUNC_func; Params: ; RET INT(tmp_int_8[temp])
	sw $15, -0x4($29)
	sw $31, 0x0($29)
	addiu $4, $29, -8
	move $29, $4
	jal FUNC_func
	addiu $29, $29, 8
	lw $31, 0x0($29)
	move $16, $2
	# PRINT_INT INT(tmp_int_8[temp])
	li $2, 1
	move $4, $16
	syscall
	# PRINT_STR STR_1
	li $2, 4
	la $4, STR_1
	syscall
	# Call FUNC_func2; Params: 1, 2, 3; RET INT(tmp_int_9[temp])
	sw $16, -0x8($29)
	sw $31, 0x0($29)
	addiu $4, $29, -12
	li $3, 1
	sw $3, -0x4($4)
	li $3, 2
	sw $3, -0x8($4)
	li $3, 3
	sw $3, -0xc($4)
	move $29, $4
	jal FUNC_func2
	addiu $29, $29, 12
	lw $31, 0x0($29)
	move $17, $2
	# PRINT_INT INT(tmp_int_9[temp])
	li $2, 1
	move $4, $17
	syscall
	# PRINT_STR STR_1
	li $2, 4
	la $4, STR_1
	syscall
	# NEG, 2, INT(tmp_int_10[temp])
	li $18, -2
	# NEG, 1, INT(tmp_int_11[temp])
	li $19, -1
	# Call FUNC_printTotal; Params: 5, INT(tmp_int_10[temp]), INT(tmp_int_11[temp])
	sw $17, -0xc($29)
	sw $18, -0x10($29)
	sw $19, -0x14($29)
	sw $31, 0x0($29)
	addiu $4, $29, -24
	li $3, 5
	sw $3, -0x4($4)
	lw $3, -0x10($29)
	sw $3, -0x8($4)
	lw $3, -0x14($29)
	sw $3, -0xc($4)
	move $29, $4
	jal FUNC_printTotal
	addiu $29, $29, 24
	lw $31, 0x0($29)
	# PRINT_INT INT(N[sp-0x4])
	li $2, 1
	lw $4, -0x4($29)
	syscall
	# RETURN 0
	li $2, 10
	syscall
	
FUNC_printTotal:
	# ADD, INT(a[sp-0x4]), INT(b[sp-0x8]), INT(tmp_int_5[temp])
	lw $21, -0x4($29)
	lw $22, -0x8($29)
	addu $20, $21, $22
	# ADD, INT(tmp_int_5[temp]), INT(c[sp-0xc]), INT(tmp_int_6[temp])
	lw $24, -0xc($29)
	addu $23, $20, $24
	# MUL, INT(tmp_int_6[temp]), INT(a[sp-0x4]), INT(tmp_int_7[temp])
	mult $23 $21
	mflo $25
	# PRINT_INT INT(tmp_int_7[temp])
	li $2, 1
	move $4, $25
	syscall
	# PRINT_STR STR_1
	li $2, 4
	la $4, STR_1
	syscall
	# RETURN VOID
	sw $21, -0x4($29)
	sw $22, -0x8($29)
	sw $24, -0xc($29)
	sw $25, -0x10($29)
	jr $ra
	
