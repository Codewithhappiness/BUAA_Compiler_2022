# Yuelin's Compiler

.data
	global:
	1 13 5 0 12 0 0 0 12 0 1 0 0 0 0 0 0 0 0 0
	.space 4
	STR_1: .asciiz "c = "
	STR_2: .asciiz ", z = "
	STR_3: .asciiz "\n"
	STR_4: .asciiz "in\n"
	STR_5: .asciiz "1: "
	STR_6: .asciiz ", "
	STR_7: .asciiz "2: "
	STR_8: .asciiz "3: "
	STR_9: .asciiz "4: "
	STR_10: .asciiz "19231076\n"
	STR_11: .asciiz ">/!~varg1 is:"
	STR_12: .asciiz ";~\n"
	STR_13: .asciiz ">/!~varg2 is:"
	STR_14: .asciiz ">/!~varg3 is:"
	STR_15: .asciiz ">/!~varg4 is:"
	STR_16: .asciiz ">/!~varg5 is:"
	STR_17: .asciiz ">/!~varg6 is:"
	STR_18: .asciiz ">/!~varg7 is:"
	STR_19: .asciiz ">/!~varg8 is:"
	STR_20: .asciiz ">/!~varg9 is:"
.text
	la $gp, global
	j FUNC_main
FUNC_test_1:
	lw $5, -0x4($29)
	lw $6, -0x8($29)
	lw $7, -0xc($29)
	# MUL, INT(tmp_int_0[temp]), 0, 4
	li $8, 0
	# ADD, INT(tmp_int_0[temp]), INT(tmp_int_0[temp]), 0
	addiu $8, $8, 0
	# OFFSET (ARRAY(var_2[sp-0x8])+INT(tmp_int_0[temp]))->POINTER(tmp_pointer_0[temp])
	addu $9, $6, $8
	# LOAD POINTER(tmp_pointer_0[temp]), INT(tmp_int_1[temp])
	lw $10, 0x0($9)
	# ADD, INT(tmp_int_2[temp]), INT(var_1[sp-0x4]), INT(tmp_int_1[temp])
	addu $11, $5, $10
	# MUL, INT(tmp_int_4[temp]), 0, 4
	li $12, 0
	# ADD, INT(tmp_int_4[temp]), INT(tmp_int_4[temp]), 0
	addiu $12, $12, 0
	# MUL, INT(tmp_int_5[temp]), 0, 4
	li $13, 0
	# ADD, INT(tmp_int_5[temp]), INT(tmp_int_5[temp]), INT(tmp_int_4[temp])
	addu $13, $13, $12
	# OFFSET (ARRAY(var_3[sp-0xc])+INT(tmp_int_5[temp]))->POINTER(tmp_pointer_1[temp])
	addu $14, $7, $13
	# LOAD POINTER(tmp_pointer_1[temp]), INT(tmp_int_6[temp])
	lw $15, 0x0($14)
	# ADD, INT(tmp_int_3[temp]), INT(tmp_int_2[temp]), INT(tmp_int_6[temp])
	addu $16, $11, $15
	# ADD, INT(tmp_int_7[temp]), INT(tmp_int_3[temp]), 3452340
	addiu $17, $16, 3452340
	# ADD, INT(tmp_int_8[temp]), INT(tmp_int_7[temp]), 0
	addiu $18, $17, 0
	# ASS, INT(c[data+0x14]), INT(tmp_int_8[temp])
	move $19, $18
	# RETURN INT(c[data+0x14])
	move $2, $19
	sw $5, -0x4($29)
	sw $6, -0x8($29)
	sw $8, -0x10($29)
	sw $19, 0x14($28)
	sw $13, -0x14($29)
	sw $7, -0xc($29)
	jr $ra
	
FUNC_test_2:
	lw $5, -0x4($29)
	# ASS, INT(z[data+0x24]), INT(var_6[sp-0x4])
	move $17, $5
	# ADD, INT(tmp_int_9[temp]), INT(z[data+0x24]), 1
	addiu $18, $17, 1
	# MUL, INT(tmp_int_10[temp]), INT(tmp_int_9[temp]), 2
	sll $19, $18, 1
	# RETURN INT(tmp_int_10[temp])
	move $2, $19
	sw $17, 0x24($28)
	jr $ra
	
FUNC_test_3:
	# RETURN VOID
	jr $ra
	
FUNC_test_4:
	# RETURN VOID
	jr $ra
	
FUNC_test_5:
	# RETURN 2
	li $2, 2
	jr $ra
	
FUNC_main:
	# OFFSET (ARRAY(_a_b_[sp-0xc])+0)->POINTER(tmp_pointer_2[temp])
	addiu $17, $29, -12
	# STORE POINTER(tmp_pointer_2[temp]), 1
	li $3, 1
	sw $3, 0x0($17)
	# OFFSET (ARRAY(_a_3_b_d[sp-0x14])+0)->POINTER(tmp_pointer_3[temp])
	addiu $18, $29, -20
	# STORE POINTER(tmp_pointer_3[temp]), 0
	li $3, 0
	sw $3, 0x0($18)
	# OFFSET (ARRAY(_a_3_b_d[sp-0x14])+4)->POINTER(tmp_pointer_4[temp])
	addiu $19, $29, -16
	# STORE POINTER(tmp_pointer_4[temp]), 12
	li $3, 12
	sw $3, 0x0($19)
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+0)->POINTER(tmp_pointer_5[temp])
	addiu $20, $29, -36
	# STORE POINTER(tmp_pointer_5[temp]), 0
	li $3, 0
	sw $3, 0x0($20)
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+4)->POINTER(tmp_pointer_6[temp])
	addiu $21, $29, -32
	# STORE POINTER(tmp_pointer_6[temp]), 12
	li $3, 12
	sw $3, 0x0($21)
	# MUL, INT(tmp_int_11[temp]), 0, 4
	li $22, 0
	# ADD, INT(tmp_int_11[temp]), INT(tmp_int_11[temp]), 0
	addiu $22, $22, 0
	# MUL, INT(tmp_int_12[temp]), 0, 4
	li $23, 0
	# ADD, INT(tmp_int_12[temp]), INT(tmp_int_12[temp]), INT(tmp_int_11[temp])
	addu $23, $23, $22
	# OFFSET (ARRAY(_a_3_b_d[sp-0x14])+INT(tmp_int_12[temp]))->POINTER(tmp_pointer_7[temp])
	addiu $3, $29, -20
	addu $24, $3, $23
	# LOAD POINTER(tmp_pointer_7[temp]), INT(tmp_int_13[temp])
	lw $25, 0x0($24)
	# MUL, INT(tmp_int_14[temp]), 0, 4
	li $26, 0
	# ADD, INT(tmp_int_14[temp]), INT(tmp_int_14[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_15[temp]), 0, 4
	li $27, 0
	# ADD, INT(tmp_int_15[temp]), INT(tmp_int_15[temp]), INT(tmp_int_14[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+INT(tmp_int_15[temp]))->POINTER(tmp_pointer_8[temp])
	addiu $3, $29, -36
	addu $17, $3, $27
	# LOAD POINTER(tmp_pointer_8[temp]), INT(tmp_int_16[temp])
	lw $18, 0x0($17)
	# ADD, INT(tmp_int_17[temp]), INT(tmp_int_13[temp]), INT(tmp_int_16[temp])
	addu $19, $25, $18
	# MUL, INT(tmp_int_18[temp]), INT(tmp_int_17[temp]), INT(b[data+0x4])
	lw $20, 0x4($28)
	mult $19, $20
	mflo $21
	# ADD, INT(tmp_int_19[temp]), INT(tmp_int_18[temp]), 1
	addiu $22, $21, 1
	# DEF, INT(_d_e_g[sp-0x28]), INT(tmp_int_19[temp])
	move $5, $22
	# MUL, INT(tmp_int_20[temp]), 0, 4
	li $23, 0
	# ADD, INT(tmp_int_20[temp]), INT(tmp_int_20[temp]), 0
	addiu $23, $23, 0
	# OFFSET (ARRAY(d[sp-0x1c])+INT(tmp_int_20[temp]))->POINTER(tmp_pointer_9[temp])
	addiu $3, $29, -28
	addu $24, $3, $23
	# STORE POINTER(tmp_pointer_9[temp]), 1
	li $3, 1
	sw $3, 0x0($24)
	# MUL, INT(tmp_int_21[temp]), 0, 4
	li $26, 0
	# ADD, INT(tmp_int_21[temp]), INT(tmp_int_21[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_22[temp]), 0, 4
	li $27, 0
	# ADD, INT(tmp_int_22[temp]), INT(tmp_int_22[temp]), INT(tmp_int_21[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+INT(tmp_int_22[temp]))->POINTER(tmp_pointer_10[temp])
	addiu $3, $29, -36
	addu $17, $3, $27
	# STORE POINTER(tmp_pointer_10[temp]), 1
	li $3, 1
	sw $3, 0x0($17)
	# MUL, INT(tmp_int_23[temp]), 0, 4
	li $25, 0
	# ADD, INT(tmp_int_23[temp]), INT(tmp_int_23[temp]), 0
	addiu $25, $25, 0
	# MUL, INT(tmp_int_24[temp]), 0, 4
	li $18, 0
	# ADD, INT(tmp_int_24[temp]), INT(tmp_int_24[temp]), INT(tmp_int_23[temp])
	addu $18, $18, $25
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+INT(tmp_int_24[temp]))->POINTER(tmp_pointer_11[temp])
	addiu $3, $29, -36
	addu $19, $3, $18
	# LOAD POINTER(tmp_pointer_11[temp]), INT(tmp_int_25[temp])
	lw $21, 0x0($19)
	# ADD, INT(tmp_int_26[temp]), INT(_d_e_g[sp-0x28]), INT(tmp_int_25[temp])
	addu $22, $5, $21
	# MUL, INT(tmp_int_27[temp]), 0, 4
	li $23, 0
	# ADD, INT(tmp_int_27[temp]), INT(tmp_int_27[temp]), 0
	addiu $23, $23, 0
	# OFFSET (ARRAY(d[sp-0x1c])+INT(tmp_int_27[temp]))->POINTER(tmp_pointer_12[temp])
	addiu $3, $29, -28
	addu $24, $3, $23
	# LOAD POINTER(tmp_pointer_12[temp]), INT(tmp_int_28[temp])
	lw $26, 0x0($24)
	# NEG, INT(tmp_int_29[temp]), INT(tmp_int_28[temp])
	subu $27, $0, $26
	# ASS, INT(c[sp-0x18]), INT(tmp_int_29[temp])
	move $17, $27
	# GETINT INT(glo_1[data+0x2c])
	li $2, 5
	syscall
	move $25, $2
	# GETINT INT(glo_2[data+0x30])
	li $2, 5
	syscall
	move $18, $2
	# GETINT INT(glo_3[data+0x34])
	li $2, 5
	syscall
	move $19, $2
	# GETINT INT(glo_4[data+0x38])
	li $2, 5
	syscall
	move $21, $2
	# GETINT INT(glo_5[data+0x3c])
	li $2, 5
	syscall
	move $23, $2
	# GETINT INT(glo_6[data+0x40])
	li $2, 5
	syscall
	move $24, $2
	# GETINT INT(glo_7[data+0x44])
	li $2, 5
	syscall
	move $26, $2
	# GETINT INT(glo_8[data+0x48])
	li $2, 5
	syscall
	move $27, $2
	# GETINT INT(glo_9[data+0x4c])
	li $2, 5
	syscall
	sw $17, -0x18($29)
	move $17, $2
	# JUMP INLINE_test_5_BEGIN_1
	sw $22, -0x9c($29)
	sw $21, 0x38($28)
	sw $18, 0x30($28)
	sw $17, 0x4c($28)
	sw $23, 0x3c($28)
	sw $20, 0x4($28)
	sw $26, 0x44($28)
	sw $24, 0x40($28)
	sw $19, 0x34($28)
	sw $27, 0x48($28)
	sw $25, 0x2c($28)
INLINE_test_5_BEGIN_1:
	# ASS, INT(tmp_int_30[temp]), 2
	li $22, 2
	# JUMP INLINE_test_5_END_1
	sw $22, -0xa0($29)
INLINE_test_5_END_1:
	# NEG, INT(tmp_int_31[temp]), INT(tmp_int_30[sp-0xa0])
	lw $21, -0xa0($29)
	subu $18, $0, $21
	# NEG, INT(tmp_int_32[temp]), INT(tmp_int_31[temp])
	subu $17, $0, $18
	# OFFSET (ARRAY(d[sp-0x1c])+0)->POINTER(tmp_pointer_13[temp])
	addiu $23, $29, -28
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+0)->POINTER(tmp_pointer_14[temp])
	addiu $20, $29, -36
	# ASS, INT(INLINE_var_1_2[sp-0x2c]), INT(c[sp-0x18])
	lw $26, -0x18($29)
	move $6, $26
	# ASS, ARRAY(INLINE_var_2_2[sp-0x30]), POINTER(tmp_pointer_13[temp])
	move $7, $23
	# OFFSET (INT(tmp_int_33[temp])+48)->POINTER(tmp_pointer_15[temp])
	addiu $24, $29, -48
	# STORE POINTER(tmp_pointer_15[temp]), POINTER(tmp_pointer_13[temp])
	sw $23, 0x0($24)
	# ASS, ARRAY(INLINE_var_3_2[sp-0x34]), POINTER(tmp_pointer_14[temp])
	move $5, $20
	# OFFSET (INT(tmp_int_34[temp])+52)->POINTER(tmp_pointer_16[temp])
	addiu $19, $29, -52
	# STORE POINTER(tmp_pointer_16[temp]), POINTER(tmp_pointer_14[temp])
	sw $20, 0x0($19)
	# JUMP INLINE_test_1_BEGIN_2
	sw $17, -0xa4($29)
	sw $26, -0x18($29)
INLINE_test_1_BEGIN_2:
	# MUL, INT(tmp_int_36[temp]), 0, 4
	li $27, 0
	# ADD, INT(tmp_int_36[temp]), INT(tmp_int_36[temp]), 0
	addiu $27, $27, 0
	# OFFSET (ARRAY(INLINE_var_2_2[sp-0x30])+INT(tmp_int_36[temp]))->POINTER(tmp_pointer_17[temp])
	addu $25, $7, $27
	# LOAD POINTER(tmp_pointer_17[temp]), INT(tmp_int_37[temp])
	lw $22, 0x0($25)
	# ADD, INT(tmp_int_38[temp]), INT(INLINE_var_1_2[sp-0x2c]), INT(tmp_int_37[temp])
	addu $21, $6, $22
	# MUL, INT(tmp_int_40[temp]), 0, 4
	li $18, 0
	# ADD, INT(tmp_int_40[temp]), INT(tmp_int_40[temp]), 0
	addiu $18, $18, 0
	# MUL, INT(tmp_int_41[temp]), 0, 4
	li $24, 0
	# ADD, INT(tmp_int_41[temp]), INT(tmp_int_41[temp]), INT(tmp_int_40[temp])
	addu $24, $24, $18
	# OFFSET (ARRAY(INLINE_var_3_2[sp-0x34])+INT(tmp_int_41[temp]))->POINTER(tmp_pointer_18[temp])
	addu $23, $5, $24
	# LOAD POINTER(tmp_pointer_18[temp]), INT(tmp_int_42[temp])
	lw $19, 0x0($23)
	# ADD, INT(tmp_int_39[temp]), INT(tmp_int_38[temp]), INT(tmp_int_42[temp])
	addu $20, $21, $19
	# ADD, INT(tmp_int_43[temp]), INT(tmp_int_39[temp]), 3452340
	addiu $17, $20, 3452340
	# ADD, INT(tmp_int_44[temp]), INT(tmp_int_43[temp]), 0
	addiu $26, $17, 0
	# ASS, INT(c[data+0x14]), INT(tmp_int_44[temp])
	move $25, $26
	# ASS, INT(tmp_int_35[temp]), INT(c[data+0x14])
	move $22, $25
	# JUMP INLINE_test_1_END_2
	sw $22, -0xa8($29)
	sw $25, 0x14($28)
	sw $24, -0xac($29)
	sw $27, -0xb0($29)
INLINE_test_1_END_2:
	# ADD, INT(tmp_int_45[temp]), INT(tmp_int_32[sp-0xa4]), INT(tmp_int_35[sp-0xa8])
	lw $18, -0xa4($29)
	lw $23, -0xa8($29)
	addu $21, $18, $23
	# MUL, INT(tmp_int_47[temp]), 0, 4
	li $19, 0
	# ADD, INT(tmp_int_47[temp]), INT(tmp_int_47[temp]), 0
	addiu $19, $19, 0
	# MUL, INT(tmp_int_48[temp]), 0, 4
	li $20, 0
	# ADD, INT(tmp_int_48[temp]), INT(tmp_int_48[temp]), INT(tmp_int_47[temp])
	addu $20, $20, $19
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+INT(tmp_int_48[temp]))->POINTER(tmp_pointer_19[temp])
	addiu $3, $29, -36
	addu $17, $3, $20
	# LOAD POINTER(tmp_pointer_19[temp]), INT(tmp_int_49[temp])
	lw $26, 0x0($17)
	# MUL, INT(tmp_int_50[temp]), 0, 4
	li $22, 0
	# ADD, INT(tmp_int_50[temp]), INT(tmp_int_50[temp]), 0
	addiu $22, $22, 0
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+INT(tmp_int_50[temp]))->POINTER(tmp_pointer_20[temp])
	addiu $3, $29, -36
	addu $25, $3, $22
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+0)->POINTER(tmp_pointer_21[temp])
	addiu $24, $29, -36
	# ASS, INT(INLINE_var_1_3[sp-0x38]), INT(tmp_int_49[temp])
	move $6, $26
	# ASS, ARRAY(INLINE_var_2_3[sp-0x3c]), POINTER(tmp_pointer_20[temp])
	move $7, $25
	# OFFSET (INT(tmp_int_51[temp])+60)->POINTER(tmp_pointer_22[temp])
	addiu $27, $29, -60
	# STORE POINTER(tmp_pointer_22[temp]), POINTER(tmp_pointer_20[temp])
	sw $25, 0x0($27)
	# ASS, ARRAY(INLINE_var_3_3[sp-0x40]), POINTER(tmp_pointer_21[temp])
	move $5, $24
	# OFFSET (INT(tmp_int_52[temp])+64)->POINTER(tmp_pointer_23[temp])
	addiu $18, $29, -64
	# STORE POINTER(tmp_pointer_23[temp]), POINTER(tmp_pointer_21[temp])
	sw $24, 0x0($18)
	# JUMP INLINE_test_1_BEGIN_3
	sw $21, -0xb4($29)
INLINE_test_1_BEGIN_3:
	# MUL, INT(tmp_int_54[temp]), 0, 4
	li $23, 0
	# ADD, INT(tmp_int_54[temp]), INT(tmp_int_54[temp]), 0
	addiu $23, $23, 0
	# OFFSET (ARRAY(INLINE_var_2_3[sp-0x3c])+INT(tmp_int_54[temp]))->POINTER(tmp_pointer_24[temp])
	addu $19, $7, $23
	# LOAD POINTER(tmp_pointer_24[temp]), INT(tmp_int_55[temp])
	lw $20, 0x0($19)
	# ADD, INT(tmp_int_56[temp]), INT(INLINE_var_1_3[sp-0x38]), INT(tmp_int_55[temp])
	addu $17, $6, $20
	# MUL, INT(tmp_int_58[temp]), 0, 4
	li $22, 0
	# ADD, INT(tmp_int_58[temp]), INT(tmp_int_58[temp]), 0
	addiu $22, $22, 0
	# MUL, INT(tmp_int_59[temp]), 0, 4
	li $26, 0
	# ADD, INT(tmp_int_59[temp]), INT(tmp_int_59[temp]), INT(tmp_int_58[temp])
	addu $26, $26, $22
	# OFFSET (ARRAY(INLINE_var_3_3[sp-0x40])+INT(tmp_int_59[temp]))->POINTER(tmp_pointer_25[temp])
	addu $27, $5, $26
	# LOAD POINTER(tmp_pointer_25[temp]), INT(tmp_int_60[temp])
	lw $25, 0x0($27)
	# ADD, INT(tmp_int_57[temp]), INT(tmp_int_56[temp]), INT(tmp_int_60[temp])
	addu $18, $17, $25
	# ADD, INT(tmp_int_61[temp]), INT(tmp_int_57[temp]), 3452340
	addiu $24, $18, 3452340
	# ADD, INT(tmp_int_62[temp]), INT(tmp_int_61[temp]), 0
	addiu $21, $24, 0
	# ASS, INT(c[data+0x14]), INT(tmp_int_62[temp])
	move $19, $21
	# ASS, INT(tmp_int_53[temp]), INT(c[data+0x14])
	move $20, $19
	# JUMP INLINE_test_1_END_3
	sw $20, -0xb8($29)
	sw $19, 0x14($28)
	sw $23, -0xbc($29)
	sw $26, -0xc0($29)
INLINE_test_1_END_3:
	# ADD, INT(tmp_int_46[temp]), INT(tmp_int_45[sp-0xb4]), INT(tmp_int_53[sp-0xb8])
	lw $22, -0xb4($29)
	lw $27, -0xb8($29)
	addu $17, $22, $27
	# MUL, INT(tmp_int_64[temp]), 0, 4
	li $25, 0
	# ADD, INT(tmp_int_64[temp]), INT(tmp_int_64[temp]), 0
	addiu $25, $25, 0
	# MUL, INT(tmp_int_65[temp]), 0, 4
	li $18, 0
	# ADD, INT(tmp_int_65[temp]), INT(tmp_int_65[temp]), INT(tmp_int_64[temp])
	addu $18, $18, $25
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+INT(tmp_int_65[temp]))->POINTER(tmp_pointer_26[temp])
	addiu $3, $29, -36
	addu $24, $3, $18
	# LOAD POINTER(tmp_pointer_26[temp]), INT(tmp_int_66[temp])
	lw $21, 0x0($24)
	# MUL, INT(tmp_int_67[temp]), 0, 4
	li $20, 0
	# ADD, INT(tmp_int_67[temp]), INT(tmp_int_67[temp]), 0
	addiu $20, $20, 0
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+INT(tmp_int_67[temp]))->POINTER(tmp_pointer_27[temp])
	addiu $3, $29, -36
	addu $19, $3, $20
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+0)->POINTER(tmp_pointer_28[temp])
	addiu $23, $29, -36
	# ASS, INT(INLINE_var_1_4[sp-0x44]), INT(tmp_int_66[temp])
	move $7, $21
	# ASS, ARRAY(INLINE_var_2_4[sp-0x48]), POINTER(tmp_pointer_27[temp])
	move $5, $19
	# OFFSET (INT(tmp_int_68[temp])+72)->POINTER(tmp_pointer_29[temp])
	addiu $26, $29, -72
	# STORE POINTER(tmp_pointer_29[temp]), POINTER(tmp_pointer_27[temp])
	sw $19, 0x0($26)
	# ASS, ARRAY(INLINE_var_3_4[sp-0x4c]), POINTER(tmp_pointer_28[temp])
	move $6, $23
	# OFFSET (INT(tmp_int_69[temp])+76)->POINTER(tmp_pointer_30[temp])
	addiu $22, $29, -76
	# STORE POINTER(tmp_pointer_30[temp]), POINTER(tmp_pointer_28[temp])
	sw $23, 0x0($22)
	# JUMP INLINE_test_1_BEGIN_4
	sw $17, -0xc4($29)
INLINE_test_1_BEGIN_4:
	# MUL, INT(tmp_int_71[temp]), 0, 4
	li $27, 0
	# ADD, INT(tmp_int_71[temp]), INT(tmp_int_71[temp]), 0
	addiu $27, $27, 0
	# OFFSET (ARRAY(INLINE_var_2_4[sp-0x48])+INT(tmp_int_71[temp]))->POINTER(tmp_pointer_31[temp])
	addu $25, $5, $27
	# LOAD POINTER(tmp_pointer_31[temp]), INT(tmp_int_72[temp])
	lw $18, 0x0($25)
	# ADD, INT(tmp_int_73[temp]), INT(INLINE_var_1_4[sp-0x44]), INT(tmp_int_72[temp])
	addu $24, $7, $18
	# MUL, INT(tmp_int_75[temp]), 0, 4
	li $20, 0
	# ADD, INT(tmp_int_75[temp]), INT(tmp_int_75[temp]), 0
	addiu $20, $20, 0
	# MUL, INT(tmp_int_76[temp]), 0, 4
	li $21, 0
	# ADD, INT(tmp_int_76[temp]), INT(tmp_int_76[temp]), INT(tmp_int_75[temp])
	addu $21, $21, $20
	# OFFSET (ARRAY(INLINE_var_3_4[sp-0x4c])+INT(tmp_int_76[temp]))->POINTER(tmp_pointer_32[temp])
	addu $26, $6, $21
	# LOAD POINTER(tmp_pointer_32[temp]), INT(tmp_int_77[temp])
	lw $19, 0x0($26)
	# ADD, INT(tmp_int_74[temp]), INT(tmp_int_73[temp]), INT(tmp_int_77[temp])
	addu $22, $24, $19
	# ADD, INT(tmp_int_78[temp]), INT(tmp_int_74[temp]), 3452340
	addiu $23, $22, 3452340
	# ADD, INT(tmp_int_79[temp]), INT(tmp_int_78[temp]), 0
	addiu $17, $23, 0
	# ASS, INT(c[data+0x14]), INT(tmp_int_79[temp])
	move $25, $17
	# ASS, INT(tmp_int_70[temp]), INT(c[data+0x14])
	move $18, $25
	# JUMP INLINE_test_1_END_4
	sw $27, -0xc8($29)
	sw $18, -0xcc($29)
	sw $21, -0xd0($29)
	sw $25, 0x14($28)
INLINE_test_1_END_4:
	# SUB, INT(tmp_int_63[temp]), INT(tmp_int_46[sp-0xc4]), INT(tmp_int_70[sp-0xcc])
	lw $20, -0xc4($29)
	lw $26, -0xcc($29)
	subu $24, $20, $26
	# ASS, INT(c[sp-0x18]), INT(tmp_int_63[temp])
	move $19, $24
	# ASS, INT(INLINE_var_6_5[sp-0x50]), INT(c[sp-0x18])
	move $5, $19
	# JUMP INLINE_test_2_BEGIN_5
	sw $19, -0x18($29)
INLINE_test_2_BEGIN_5:
	# ASS, INT(z[data+0x24]), INT(INLINE_var_6_5[sp-0x50])
	move $22, $5
	# ADD, INT(tmp_int_81[temp]), INT(z[data+0x24]), 1
	addiu $23, $22, 1
	# MUL, INT(tmp_int_82[temp]), INT(tmp_int_81[temp]), 2
	sll $17, $23, 1
	# ASS, INT(tmp_int_80[temp]), INT(tmp_int_82[temp])
	move $27, $17
	# JUMP INLINE_test_2_END_5
	sw $27, -0xd4($29)
	sw $22, 0x24($28)
INLINE_test_2_END_5:
	# ASS, INT(z[data+0x24]), INT(tmp_int_80[sp-0xd4])
	lw $18, -0xd4($29)
	move $21, $18
	# PRINT_STR STR_1
	li $2, 4
	la $4, STR_1
	syscall
	# PRINT_INT INT(c[sp-0x18])
	li $2, 1
	lw $25, -0x18($29)
	move $4, $25
	syscall
	# PRINT_STR STR_2
	li $2, 4
	la $4, STR_2
	syscall
	# PRINT_INT INT(z[data+0x24])
	li $2, 1
	move $4, $21
	syscall
	# PRINT_STR STR_3
	li $2, 4
	la $4, STR_3
	syscall
	# JUMP L_OR_EXP_13
	sw $21, 0x24($28)
	sw $25, -0x18($29)
L_OR_EXP_13:
	# JUMP L_AND_EXP_14
L_AND_EXP_14:
	# GE, INT(tmp_int_83[temp]), INT(glo_9[data+0x4c]), 0
	lw $20, 0x4c($28)
	sge $26, $20, 0
	# JUMP AND_END_15
	sw $26, -0xd8($29)
	sw $20, 0x4c($28)
AND_END_15:
	# ASS, INT(tmp_int_84[temp]), INT(tmp_int_83[sp-0xd8])
	lw $24, -0xd8($29)
	move $19, $24
	# ASS, INT(tmp_int_85[temp]), INT(tmp_int_83[sp-0xd8])
	move $23, $24
	# Branch INT(tmp_int_83[sp-0xd8]) ? OR_END_16 : OR_17
	sw $23, -0xdc($29)
	sw $24, -0xd8($29)
	sw $19, -0xe0($29)
	lw $17, -0xd8($29)
	bne $17, $0, OR_END_16
OR_17:
	# JUMP L_AND_EXP_19
L_AND_EXP_19:
	# ASS, INT(tmp_int_86[temp]), 0
	li $27, 0
	# JUMP AND_END_20
	sw $27, -0xe4($29)
AND_END_20:
	# ASS, INT(tmp_int_86[sp-0xe4]), 0
	li $22, 0
	# OR, INT(tmp_int_85[sp-0xdc]), INT(tmp_int_83[sp-0xd8]), INT(tmp_int_86[sp-0xe4])
	lw $18, -0xd8($29)
	or $21, $18, $22
	# Branch INT(tmp_int_85[sp-0xdc]) ? OR_END_16 : OR_18
	sw $21, -0xdc($29)
	lw $25, -0xdc($29)
	bne $25, $0, OR_END_16
OR_18:
	# JUMP L_AND_EXP_25
L_AND_EXP_25:
	# ASS, INT(tmp_int_88[temp]), 1
	li $26, 1
	# JUMP AND_27
	sw $26, -0xe8($29)
AND_27:
	# LT, INT(tmp_int_89[temp]), INT(glo_1[data+0x2c]), 0
	lw $20, 0x2c($28)
	li $3, 0
	slt $23, $20, $3
	# AND, INT(tmp_int_88[sp-0xe8]), 1, INT(tmp_int_89[temp])
	move $24, $23
	# Branch INT(tmp_int_88[sp-0xe8]) ? AND_28 : AND_END_26
	sw $24, -0xe8($29)
	sw $20, 0x2c($28)
	lw $19, -0xe8($29)
	bne $19, $0, AND_28
	j AND_END_26
AND_28:
	# LE, INT(tmp_int_91[temp]), 0, INT(glo_8[data+0x48])
	lw $17, 0x48($28)
	sge $27, $17, 0
	# OR, INT(tmp_int_90[temp]), INT(tmp_int_88[sp-0xe8]), INT(tmp_int_91[temp])
	lw $18, -0xe8($29)
	or $22, $18, $27
	# Branch INT(tmp_int_90[temp]) ? AND_29 : AND_END_26
	sw $22, -0xec($29)
	sw $17, 0x48($28)
	lw $21, -0xec($29)
	bne $21, $0, AND_29
	j AND_END_26
AND_29:
	# GT, INT(tmp_int_93[temp]), INT(glo_7[data+0x44]), 0
	lw $25, 0x44($28)
	sgt $26, $25, 0
	# OR, INT(tmp_int_92[temp]), INT(tmp_int_90[sp-0xec]), INT(tmp_int_93[temp])
	lw $23, -0xec($29)
	or $24, $23, $26
	# Branch INT(tmp_int_92[temp]) ? AND_30 : AND_END_26
	sw $25, 0x44($28)
	sw $24, -0xf0($29)
	lw $20, -0xf0($29)
	bne $20, $0, AND_30
	j AND_END_26
AND_30:
	# NEQ, INT(tmp_int_95[temp]), INT(glo_6[data+0x40]), INT(glo_5[data+0x3c])
	lw $19, 0x40($28)
	lw $18, 0x3c($28)
	sne $27, $19, $18
	# OR, INT(tmp_int_94[temp]), INT(tmp_int_92[sp-0xf0]), INT(tmp_int_95[temp])
	lw $22, -0xf0($29)
	or $17, $22, $27
	# Branch INT(tmp_int_94[temp]) ? AND_31 : AND_END_26
	sw $17, -0xf4($29)
	sw $18, 0x3c($28)
	sw $19, 0x40($28)
	lw $21, -0xf4($29)
	bne $21, $0, AND_31
	j AND_END_26
AND_31:
	# MOD, INT(tmp_int_97[temp]), INT(glo_4[data+0x38]), 2
	lw $23, 0x38($28)
	bltz $23, DIV_1
	andi $26, $23, 1
	j DIV_END_2
DIV_1:
	subu $23, $0, $23
	andi $26, $23, 1
	subu $26, $0, $26
DIV_END_2:
	# DIV, INT(tmp_int_98[temp]), INT(tmp_int_97[temp]), 2
	bltz $26, DIV_3
	srl $25, $26, 1
	j DIV_END_4
DIV_3:
	subu $26, $0, $26
	srl $25, $26, 1
	subu $25, $0, $25
DIV_END_4:
	# OFFSET (ARRAY(d[sp-0x1c])+0)->POINTER(tmp_pointer_33[temp])
	addiu $24, $29, -28
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+0)->POINTER(tmp_pointer_34[temp])
	addiu $20, $29, -36
	# ASS, INT(INLINE_var_1_6[sp-0x54]), INT(c[sp-0x18])
	lw $22, -0x18($29)
	move $6, $22
	# ASS, ARRAY(INLINE_var_2_6[sp-0x58]), POINTER(tmp_pointer_33[temp])
	move $7, $24
	# OFFSET (INT(tmp_int_99[temp])+88)->POINTER(tmp_pointer_35[temp])
	addiu $27, $29, -88
	# STORE POINTER(tmp_pointer_35[temp]), POINTER(tmp_pointer_33[temp])
	sw $24, 0x0($27)
	# ASS, ARRAY(INLINE_var_3_6[sp-0x5c]), POINTER(tmp_pointer_34[temp])
	move $5, $20
	# OFFSET (INT(tmp_int_100[temp])+92)->POINTER(tmp_pointer_36[temp])
	addiu $17, $29, -92
	# STORE POINTER(tmp_pointer_36[temp]), POINTER(tmp_pointer_34[temp])
	sw $20, 0x0($17)
	# JUMP INLINE_test_1_BEGIN_6
	sw $23, 0x38($28)
	sw $25, -0xf8($29)
	sw $22, -0x18($29)
INLINE_test_1_BEGIN_6:
	# MUL, INT(tmp_int_102[temp]), 0, 4
	li $18, 0
	# ADD, INT(tmp_int_102[temp]), INT(tmp_int_102[temp]), 0
	addiu $18, $18, 0
	# OFFSET (ARRAY(INLINE_var_2_6[sp-0x58])+INT(tmp_int_102[temp]))->POINTER(tmp_pointer_37[temp])
	addu $19, $7, $18
	# LOAD POINTER(tmp_pointer_37[temp]), INT(tmp_int_103[temp])
	lw $21, 0x0($19)
	# ADD, INT(tmp_int_104[temp]), INT(INLINE_var_1_6[sp-0x54]), INT(tmp_int_103[temp])
	addu $26, $6, $21
	# MUL, INT(tmp_int_106[temp]), 0, 4
	li $27, 0
	# ADD, INT(tmp_int_106[temp]), INT(tmp_int_106[temp]), 0
	addiu $27, $27, 0
	# MUL, INT(tmp_int_107[temp]), 0, 4
	li $24, 0
	# ADD, INT(tmp_int_107[temp]), INT(tmp_int_107[temp]), INT(tmp_int_106[temp])
	addu $24, $24, $27
	# OFFSET (ARRAY(INLINE_var_3_6[sp-0x5c])+INT(tmp_int_107[temp]))->POINTER(tmp_pointer_38[temp])
	addu $17, $5, $24
	# LOAD POINTER(tmp_pointer_38[temp]), INT(tmp_int_108[temp])
	lw $20, 0x0($17)
	# ADD, INT(tmp_int_105[temp]), INT(tmp_int_104[temp]), INT(tmp_int_108[temp])
	addu $23, $26, $20
	# ADD, INT(tmp_int_109[temp]), INT(tmp_int_105[temp]), 3452340
	addiu $25, $23, 3452340
	# ADD, INT(tmp_int_110[temp]), INT(tmp_int_109[temp]), 0
	addiu $22, $25, 0
	# ASS, INT(c[data+0x14]), INT(tmp_int_110[temp])
	move $19, $22
	# ASS, INT(tmp_int_101[temp]), INT(c[data+0x14])
	move $21, $19
	# JUMP INLINE_test_1_END_6
	sw $24, -0xfc($29)
	sw $18, -0x100($29)
	sw $19, 0x14($28)
	sw $21, -0x104($29)
INLINE_test_1_END_6:
	# ADD, INT(tmp_int_111[temp]), INT(tmp_int_98[sp-0xf8]), INT(tmp_int_101[sp-0x104])
	lw $27, -0xf8($29)
	lw $17, -0x104($29)
	addu $26, $27, $17
	# MUL, INT(tmp_int_113[temp]), 0, 4
	li $20, 0
	# ADD, INT(tmp_int_113[temp]), INT(tmp_int_113[temp]), 0
	addiu $20, $20, 0
	# MUL, INT(tmp_int_114[temp]), 0, 4
	li $23, 0
	# ADD, INT(tmp_int_114[temp]), INT(tmp_int_114[temp]), INT(tmp_int_113[temp])
	addu $23, $23, $20
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+INT(tmp_int_114[temp]))->POINTER(tmp_pointer_39[temp])
	addiu $3, $29, -36
	addu $25, $3, $23
	# LOAD POINTER(tmp_pointer_39[temp]), INT(tmp_int_115[temp])
	lw $22, 0x0($25)
	# MUL, INT(tmp_int_116[temp]), 0, 4
	li $24, 0
	# ADD, INT(tmp_int_116[temp]), INT(tmp_int_116[temp]), 0
	addiu $24, $24, 0
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+INT(tmp_int_116[temp]))->POINTER(tmp_pointer_40[temp])
	addiu $3, $29, -36
	addu $18, $3, $24
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+0)->POINTER(tmp_pointer_41[temp])
	addiu $19, $29, -36
	# ASS, INT(INLINE_var_1_7[sp-0x60]), INT(tmp_int_115[temp])
	move $7, $22
	# ASS, ARRAY(INLINE_var_2_7[sp-0x64]), POINTER(tmp_pointer_40[temp])
	move $6, $18
	# OFFSET (INT(tmp_int_117[temp])+100)->POINTER(tmp_pointer_42[temp])
	addiu $21, $29, -100
	# STORE POINTER(tmp_pointer_42[temp]), POINTER(tmp_pointer_40[temp])
	sw $18, 0x0($21)
	# ASS, ARRAY(INLINE_var_3_7[sp-0x68]), POINTER(tmp_pointer_41[temp])
	move $5, $19
	# OFFSET (INT(tmp_int_118[temp])+104)->POINTER(tmp_pointer_43[temp])
	addiu $27, $29, -104
	# STORE POINTER(tmp_pointer_43[temp]), POINTER(tmp_pointer_41[temp])
	sw $19, 0x0($27)
	# JUMP INLINE_test_1_BEGIN_7
	sw $26, -0x108($29)
INLINE_test_1_BEGIN_7:
	# MUL, INT(tmp_int_120[temp]), 0, 4
	li $17, 0
	# ADD, INT(tmp_int_120[temp]), INT(tmp_int_120[temp]), 0
	addiu $17, $17, 0
	# OFFSET (ARRAY(INLINE_var_2_7[sp-0x64])+INT(tmp_int_120[temp]))->POINTER(tmp_pointer_44[temp])
	addu $20, $6, $17
	# LOAD POINTER(tmp_pointer_44[temp]), INT(tmp_int_121[temp])
	lw $23, 0x0($20)
	# ADD, INT(tmp_int_122[temp]), INT(INLINE_var_1_7[sp-0x60]), INT(tmp_int_121[temp])
	addu $25, $7, $23
	# MUL, INT(tmp_int_124[temp]), 0, 4
	li $24, 0
	# ADD, INT(tmp_int_124[temp]), INT(tmp_int_124[temp]), 0
	addiu $24, $24, 0
	# MUL, INT(tmp_int_125[temp]), 0, 4
	li $22, 0
	# ADD, INT(tmp_int_125[temp]), INT(tmp_int_125[temp]), INT(tmp_int_124[temp])
	addu $22, $22, $24
	# OFFSET (ARRAY(INLINE_var_3_7[sp-0x68])+INT(tmp_int_125[temp]))->POINTER(tmp_pointer_45[temp])
	addu $21, $5, $22
	# LOAD POINTER(tmp_pointer_45[temp]), INT(tmp_int_126[temp])
	lw $18, 0x0($21)
	# ADD, INT(tmp_int_123[temp]), INT(tmp_int_122[temp]), INT(tmp_int_126[temp])
	addu $27, $25, $18
	# ADD, INT(tmp_int_127[temp]), INT(tmp_int_123[temp]), 3452340
	addiu $19, $27, 3452340
	# ADD, INT(tmp_int_128[temp]), INT(tmp_int_127[temp]), 0
	addiu $26, $19, 0
	# ASS, INT(c[data+0x14]), INT(tmp_int_128[temp])
	move $20, $26
	# ASS, INT(tmp_int_119[temp]), INT(c[data+0x14])
	move $23, $20
	# JUMP INLINE_test_1_END_7
	sw $17, -0x10c($29)
	sw $20, 0x14($28)
	sw $23, -0x110($29)
	sw $22, -0x114($29)
INLINE_test_1_END_7:
	# ADD, INT(tmp_int_112[temp]), INT(tmp_int_111[sp-0x108]), INT(tmp_int_119[sp-0x110])
	lw $24, -0x108($29)
	lw $21, -0x110($29)
	addu $25, $24, $21
	# MUL, INT(tmp_int_130[temp]), 0, 4
	li $18, 0
	# ADD, INT(tmp_int_130[temp]), INT(tmp_int_130[temp]), 0
	addiu $18, $18, 0
	# MUL, INT(tmp_int_131[temp]), 0, 4
	li $27, 0
	# ADD, INT(tmp_int_131[temp]), INT(tmp_int_131[temp]), INT(tmp_int_130[temp])
	addu $27, $27, $18
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+INT(tmp_int_131[temp]))->POINTER(tmp_pointer_46[temp])
	addiu $3, $29, -36
	addu $19, $3, $27
	# LOAD POINTER(tmp_pointer_46[temp]), INT(tmp_int_132[temp])
	lw $26, 0x0($19)
	# MUL, INT(tmp_int_133[temp]), 0, 4
	li $17, 0
	# ADD, INT(tmp_int_133[temp]), INT(tmp_int_133[temp]), 0
	addiu $17, $17, 0
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+INT(tmp_int_133[temp]))->POINTER(tmp_pointer_47[temp])
	addiu $3, $29, -36
	addu $20, $3, $17
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+0)->POINTER(tmp_pointer_48[temp])
	addiu $23, $29, -36
	# ASS, INT(INLINE_var_1_8[sp-0x6c]), INT(tmp_int_132[temp])
	move $6, $26
	# ASS, ARRAY(INLINE_var_2_8[sp-0x70]), POINTER(tmp_pointer_47[temp])
	move $5, $20
	# OFFSET (INT(tmp_int_134[temp])+112)->POINTER(tmp_pointer_49[temp])
	addiu $22, $29, -112
	# STORE POINTER(tmp_pointer_49[temp]), POINTER(tmp_pointer_47[temp])
	sw $20, 0x0($22)
	# ASS, ARRAY(INLINE_var_3_8[sp-0x74]), POINTER(tmp_pointer_48[temp])
	move $7, $23
	# OFFSET (INT(tmp_int_135[temp])+116)->POINTER(tmp_pointer_50[temp])
	addiu $24, $29, -116
	# STORE POINTER(tmp_pointer_50[temp]), POINTER(tmp_pointer_48[temp])
	sw $23, 0x0($24)
	# JUMP INLINE_test_1_BEGIN_8
	sw $25, -0x118($29)
INLINE_test_1_BEGIN_8:
	# MUL, INT(tmp_int_137[temp]), 0, 4
	li $21, 0
	# ADD, INT(tmp_int_137[temp]), INT(tmp_int_137[temp]), 0
	addiu $21, $21, 0
	# OFFSET (ARRAY(INLINE_var_2_8[sp-0x70])+INT(tmp_int_137[temp]))->POINTER(tmp_pointer_51[temp])
	addu $18, $5, $21
	# LOAD POINTER(tmp_pointer_51[temp]), INT(tmp_int_138[temp])
	lw $27, 0x0($18)
	# ADD, INT(tmp_int_139[temp]), INT(INLINE_var_1_8[sp-0x6c]), INT(tmp_int_138[temp])
	addu $19, $6, $27
	# MUL, INT(tmp_int_141[temp]), 0, 4
	li $17, 0
	# ADD, INT(tmp_int_141[temp]), INT(tmp_int_141[temp]), 0
	addiu $17, $17, 0
	# MUL, INT(tmp_int_142[temp]), 0, 4
	li $26, 0
	# ADD, INT(tmp_int_142[temp]), INT(tmp_int_142[temp]), INT(tmp_int_141[temp])
	addu $26, $26, $17
	# OFFSET (ARRAY(INLINE_var_3_8[sp-0x74])+INT(tmp_int_142[temp]))->POINTER(tmp_pointer_52[temp])
	addu $22, $7, $26
	# LOAD POINTER(tmp_pointer_52[temp]), INT(tmp_int_143[temp])
	lw $20, 0x0($22)
	# ADD, INT(tmp_int_140[temp]), INT(tmp_int_139[temp]), INT(tmp_int_143[temp])
	addu $24, $19, $20
	# ADD, INT(tmp_int_144[temp]), INT(tmp_int_140[temp]), 3452340
	addiu $23, $24, 3452340
	# ADD, INT(tmp_int_145[temp]), INT(tmp_int_144[temp]), 0
	addiu $25, $23, 0
	# ASS, INT(c[data+0x14]), INT(tmp_int_145[temp])
	move $18, $25
	# ASS, INT(tmp_int_136[temp]), INT(c[data+0x14])
	move $27, $18
	# JUMP INLINE_test_1_END_8
	sw $27, -0x11c($29)
	sw $18, 0x14($28)
	sw $26, -0x120($29)
	sw $21, -0x124($29)
INLINE_test_1_END_8:
	# MUL, INT(tmp_int_146[temp]), INT(tmp_int_136[sp-0x11c]), 20
	lw $17, -0x11c($29)
	sll $22, $17, 4
	sll $3, $17, 2
	addu $22, $22, $3
	# SUB, INT(tmp_int_129[temp]), INT(tmp_int_112[sp-0x118]), INT(tmp_int_146[temp])
	lw $19, -0x118($29)
	subu $20, $19, $22
	# OR, INT(tmp_int_96[temp]), INT(tmp_int_94[sp-0xf4]), INT(tmp_int_129[temp])
	lw $24, -0xf4($29)
	or $23, $24, $20
	# Branch INT(tmp_int_96[temp]) ? AND_32 : AND_END_26
	sw $23, -0x128($29)
	lw $25, -0x128($29)
	bne $25, $0, AND_32
	j AND_END_26
AND_32:
	# EQ, INT(tmp_int_148[temp]), INT(glo_6[data+0x40]), INT(glo_6[data+0x40])
	lw $27, 0x40($28)
	seq $18, $27, $27
	# OR, INT(tmp_int_147[temp]), INT(tmp_int_96[sp-0x128]), INT(tmp_int_148[temp])
	lw $26, -0x128($29)
	or $21, $26, $18
	# Branch INT(tmp_int_147[temp]) ? AND_36 : AND_END_26
	sw $21, -0x12c($29)
	sw $27, 0x40($28)
	lw $17, -0x12c($29)
	bne $17, $0, AND_36
	j AND_END_26
AND_36:
	# JUMP AND_END_26
AND_END_26:
	# OR, INT(tmp_int_87[temp]), INT(tmp_int_85[sp-0xdc]), INT(tmp_int_147[sp-0x12c])
	lw $19, -0xdc($29)
	lw $22, -0x12c($29)
	or $24, $19, $22
	# Branch INT(tmp_int_87[temp]) ? OR_END_16 : OR_24
	sw $24, -0x130($29)
	lw $20, -0x130($29)
	bne $20, $0, OR_END_16
OR_24:
	# JUMP OR_END_16
OR_END_16:
	# Branch INT(tmp_int_87[sp-0x130]) ? DO_BODY_10 : DO_END_12
	lw $23, -0x130($29)
	bne $23, $0, DO_BODY_10
	j DO_END_12
	# JUMP DO_BODY_10
DO_BODY_10:
	# JUMP B_39
B_39:
	# PRINT_STR STR_4
	li $2, 4
	la $4, STR_4
	syscall
	# JUMP L_OR_EXP_40
	j L_OR_EXP_40
	# JUMP B_62
	j B_62
L_OR_EXP_40:
	# JUMP L_AND_EXP_41
L_AND_EXP_41:
	# GT, INT(tmp_int_149[temp]), INT(glo_2[data+0x30]), 1
	lw $25, 0x30($28)
	sgt $26, $25, 1
	# JUMP AND_END_42
	sw $25, 0x30($28)
	sw $26, -0x134($29)
AND_END_42:
	# ASS, INT(tmp_int_150[temp]), INT(tmp_int_149[sp-0x134])
	lw $18, -0x134($29)
	move $21, $18
	# JUMP OR_END_43
	sw $21, -0x138($29)
OR_END_43:
	# ASS, INT(tmp_int_151[temp]), INT(tmp_int_149[sp-0x134])
	lw $27, -0x134($29)
	move $17, $27
	# Branch INT(tmp_int_151[temp]) ? IF_BODY_44 : IF_ELSE_46
	sw $17, -0x13c($29)
	lw $19, -0x13c($29)
	bne $19, $0, IF_BODY_44
	j IF_ELSE_46
IF_BODY_44:
	# JUMP B_47
B_47:
	# SUB, INT(tmp_int_152[temp]), INT(glo_2[data+0x30]), 1
	lw $22, 0x30($28)
	addiu $24, $22, -1
	# ASS, INT(glo_2[data+0x30]), INT(tmp_int_152[temp])
	move $22, $24
	# SUB, INT(tmp_int_153[temp]), INT(glo_9[data+0x4c]), 1
	lw $20, 0x4c($28)
	addiu $23, $20, -1
	# ASS, INT(glo_9[data+0x4c]), INT(tmp_int_153[temp])
	move $20, $23
	# PRINT_STR STR_5
	li $2, 4
	la $4, STR_5
	syscall
	# PRINT_INT INT(glo_1[data+0x2c])
	li $2, 1
	lw $25, 0x2c($28)
	move $4, $25
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_2[data+0x30])
	li $2, 1
	move $4, $22
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_3[data+0x34])
	li $2, 1
	lw $26, 0x34($28)
	move $4, $26
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_4[data+0x38])
	li $2, 1
	lw $18, 0x38($28)
	move $4, $18
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_5[data+0x3c])
	li $2, 1
	lw $21, 0x3c($28)
	move $4, $21
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_6[data+0x40])
	li $2, 1
	lw $27, 0x40($28)
	move $4, $27
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_7[data+0x44])
	li $2, 1
	lw $17, 0x44($28)
	move $4, $17
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_8[data+0x48])
	li $2, 1
	lw $19, 0x48($28)
	move $4, $19
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_9[data+0x4c])
	li $2, 1
	move $4, $20
	syscall
	# PRINT_STR STR_3
	li $2, 4
	la $4, STR_3
	syscall
	# JUMP DO_CHECK_11
	sw $18, 0x38($28)
	sw $22, 0x30($28)
	sw $20, 0x4c($28)
	sw $21, 0x3c($28)
	sw $17, 0x44($28)
	sw $27, 0x40($28)
	sw $26, 0x34($28)
	sw $19, 0x48($28)
	sw $25, 0x2c($28)
	j DO_CHECK_11
	# JUMP B_48
B_48:
	# JUMP IF_END_45
	j IF_END_45
IF_ELSE_46:
	# JUMP B_49
B_49:
	# SUB, INT(tmp_int_154[temp]), INT(glo_2[data+0x30]), 1
	lw $24, 0x30($28)
	addiu $23, $24, -1
	# ASS, INT(glo_2[data+0x30]), INT(tmp_int_154[temp])
	move $24, $23
	# SUB, INT(tmp_int_155[temp]), INT(glo_1[data+0x2c]), 1
	lw $18, 0x2c($28)
	addiu $22, $18, -1
	# ASS, INT(glo_1[data+0x2c]), INT(tmp_int_155[temp])
	move $18, $22
	# PRINT_STR STR_7
	li $2, 4
	la $4, STR_7
	syscall
	# PRINT_INT INT(glo_1[data+0x2c])
	li $2, 1
	move $4, $18
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_2[data+0x30])
	li $2, 1
	move $4, $24
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_3[data+0x34])
	li $2, 1
	lw $20, 0x34($28)
	move $4, $20
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_4[data+0x38])
	li $2, 1
	lw $21, 0x38($28)
	move $4, $21
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_5[data+0x3c])
	li $2, 1
	lw $17, 0x3c($28)
	move $4, $17
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_6[data+0x40])
	li $2, 1
	lw $27, 0x40($28)
	move $4, $27
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_7[data+0x44])
	li $2, 1
	lw $26, 0x44($28)
	move $4, $26
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_8[data+0x48])
	li $2, 1
	lw $19, 0x48($28)
	move $4, $19
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_9[data+0x4c])
	li $2, 1
	lw $25, 0x4c($28)
	move $4, $25
	syscall
	# PRINT_STR STR_3
	li $2, 4
	la $4, STR_3
	syscall
	# JUMP L_OR_EXP_50
	sw $21, 0x38($28)
	sw $24, 0x30($28)
	sw $25, 0x4c($28)
	sw $17, 0x3c($28)
	sw $26, 0x44($28)
	sw $27, 0x40($28)
	sw $20, 0x34($28)
	sw $19, 0x48($28)
	sw $18, 0x2c($28)
	j L_OR_EXP_50
	# JUMP B_61
	j B_61
L_OR_EXP_50:
	# JUMP L_AND_EXP_51
L_AND_EXP_51:
	# LT, INT(tmp_int_156[temp]), INT(glo_1[data+0x2c]), 0
	lw $23, 0x2c($28)
	li $3, 0
	slt $22, $23, $3
	# JUMP AND_END_52
	sw $22, -0x140($29)
	sw $23, 0x2c($28)
AND_END_52:
	# ASS, INT(tmp_int_157[temp]), INT(tmp_int_156[sp-0x140])
	lw $21, -0x140($29)
	move $24, $21
	# JUMP OR_END_53
	sw $24, -0x144($29)
OR_END_53:
	# ASS, INT(tmp_int_158[temp]), INT(tmp_int_156[sp-0x140])
	lw $25, -0x140($29)
	move $17, $25
	# Branch INT(tmp_int_158[temp]) ? IF_BODY_54 : IF_ELSE_56
	sw $17, -0x148($29)
	lw $26, -0x148($29)
	bne $26, $0, IF_BODY_54
	j IF_ELSE_56
IF_BODY_54:
	# JUMP B_57
B_57:
	# SUB, INT(tmp_int_159[temp]), INT(glo_8[data+0x48]), 1
	lw $27, 0x48($28)
	addiu $20, $27, -1
	# ASS, INT(glo_8[data+0x48]), INT(tmp_int_159[temp])
	move $27, $20
	# PRINT_STR STR_8
	li $2, 4
	la $4, STR_8
	syscall
	# PRINT_INT INT(glo_1[data+0x2c])
	li $2, 1
	lw $19, 0x2c($28)
	move $4, $19
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_2[data+0x30])
	li $2, 1
	lw $18, 0x30($28)
	move $4, $18
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_3[data+0x34])
	li $2, 1
	lw $22, 0x34($28)
	move $4, $22
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_4[data+0x38])
	li $2, 1
	lw $23, 0x38($28)
	move $4, $23
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_5[data+0x3c])
	li $2, 1
	lw $21, 0x3c($28)
	move $4, $21
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_6[data+0x40])
	li $2, 1
	lw $24, 0x40($28)
	move $4, $24
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_7[data+0x44])
	li $2, 1
	lw $25, 0x44($28)
	move $4, $25
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_8[data+0x48])
	li $2, 1
	move $4, $27
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_9[data+0x4c])
	li $2, 1
	lw $17, 0x4c($28)
	move $4, $17
	syscall
	# PRINT_STR STR_3
	li $2, 4
	la $4, STR_3
	syscall
	# JUMP DO_END_12
	sw $23, 0x38($28)
	sw $18, 0x30($28)
	sw $17, 0x4c($28)
	sw $21, 0x3c($28)
	sw $25, 0x44($28)
	sw $24, 0x40($28)
	sw $22, 0x34($28)
	sw $27, 0x48($28)
	sw $19, 0x2c($28)
	j DO_END_12
	# JUMP B_58
B_58:
	# JUMP IF_END_55
	j IF_END_55
IF_ELSE_56:
	# JUMP B_59
B_59:
	# JUMP B_60
B_60:
	# JUMP IF_END_55
IF_END_55:
	# JUMP B_61
B_61:
	# JUMP IF_END_45
IF_END_45:
	# PRINT_STR STR_9
	li $2, 4
	la $4, STR_9
	syscall
	# PRINT_INT INT(glo_1[data+0x2c])
	li $2, 1
	lw $26, 0x2c($28)
	move $4, $26
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_2[data+0x30])
	li $2, 1
	lw $20, 0x30($28)
	move $4, $20
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_3[data+0x34])
	li $2, 1
	lw $23, 0x34($28)
	move $4, $23
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_4[data+0x38])
	li $2, 1
	lw $18, 0x38($28)
	move $4, $18
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_5[data+0x3c])
	li $2, 1
	lw $17, 0x3c($28)
	move $4, $17
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_6[data+0x40])
	li $2, 1
	lw $21, 0x40($28)
	move $4, $21
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_7[data+0x44])
	li $2, 1
	lw $25, 0x44($28)
	move $4, $25
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_8[data+0x48])
	li $2, 1
	lw $24, 0x48($28)
	move $4, $24
	syscall
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(glo_9[data+0x4c])
	li $2, 1
	lw $22, 0x4c($28)
	move $4, $22
	syscall
	# PRINT_STR STR_3
	li $2, 4
	la $4, STR_3
	syscall
	# JUMP B_62
	sw $18, 0x38($28)
	sw $20, 0x30($28)
	sw $22, 0x4c($28)
	sw $17, 0x3c($28)
	sw $25, 0x44($28)
	sw $21, 0x40($28)
	sw $23, 0x34($28)
	sw $24, 0x48($28)
	sw $26, 0x2c($28)
B_62:
	# JUMP DO_CHECK_11
DO_CHECK_11:
	# JUMP L_OR_EXP_63
L_OR_EXP_63:
	# JUMP L_AND_EXP_64
L_AND_EXP_64:
	# GE, INT(tmp_int_160[temp]), INT(glo_9[data+0x4c]), 0
	lw $27, 0x4c($28)
	sge $19, $27, 0
	# JUMP AND_END_65
	sw $27, 0x4c($28)
	sw $19, -0x14c($29)
AND_END_65:
	# ASS, INT(tmp_int_161[temp]), INT(tmp_int_160[sp-0x14c])
	lw $18, -0x14c($29)
	move $20, $18
	# ASS, INT(tmp_int_162[temp]), INT(tmp_int_160[sp-0x14c])
	move $22, $18
	# Branch INT(tmp_int_160[sp-0x14c]) ? OR_END_66 : OR_67
	sw $22, -0x150($29)
	sw $18, -0x14c($29)
	sw $20, -0x154($29)
	lw $17, -0x14c($29)
	bne $17, $0, OR_END_66
OR_67:
	# JUMP L_AND_EXP_69
L_AND_EXP_69:
	# ASS, INT(tmp_int_163[temp]), 0
	li $25, 0
	# JUMP AND_END_70
	sw $25, -0x158($29)
AND_END_70:
	# ASS, INT(tmp_int_163[sp-0x158]), 0
	li $21, 0
	# OR, INT(tmp_int_162[sp-0x150]), INT(tmp_int_160[sp-0x14c]), INT(tmp_int_163[sp-0x158])
	lw $23, -0x14c($29)
	or $24, $23, $21
	# Branch INT(tmp_int_162[sp-0x150]) ? OR_END_66 : OR_68
	sw $24, -0x150($29)
	lw $26, -0x150($29)
	bne $26, $0, OR_END_66
OR_68:
	# JUMP L_AND_EXP_75
L_AND_EXP_75:
	# ASS, INT(tmp_int_165[temp]), 1
	li $27, 1
	# JUMP AND_77
	sw $27, -0x15c($29)
AND_77:
	# LT, INT(tmp_int_166[temp]), INT(glo_1[data+0x2c]), 0
	lw $19, 0x2c($28)
	li $3, 0
	slt $22, $19, $3
	# AND, INT(tmp_int_165[sp-0x15c]), 1, INT(tmp_int_166[temp])
	move $18, $22
	# Branch INT(tmp_int_165[sp-0x15c]) ? AND_78 : AND_END_76
	sw $18, -0x15c($29)
	sw $19, 0x2c($28)
	lw $20, -0x15c($29)
	bne $20, $0, AND_78
	j AND_END_76
AND_78:
	# LE, INT(tmp_int_168[temp]), 0, INT(glo_8[data+0x48])
	lw $17, 0x48($28)
	sge $25, $17, 0
	# OR, INT(tmp_int_167[temp]), INT(tmp_int_165[sp-0x15c]), INT(tmp_int_168[temp])
	lw $23, -0x15c($29)
	or $21, $23, $25
	# Branch INT(tmp_int_167[temp]) ? AND_79 : AND_END_76
	sw $21, -0x160($29)
	sw $17, 0x48($28)
	lw $24, -0x160($29)
	bne $24, $0, AND_79
	j AND_END_76
AND_79:
	# GT, INT(tmp_int_170[temp]), INT(glo_7[data+0x44]), 0
	lw $26, 0x44($28)
	sgt $27, $26, 0
	# OR, INT(tmp_int_169[temp]), INT(tmp_int_167[sp-0x160]), INT(tmp_int_170[temp])
	lw $22, -0x160($29)
	or $18, $22, $27
	# Branch INT(tmp_int_169[temp]) ? AND_80 : AND_END_76
	sw $18, -0x164($29)
	sw $26, 0x44($28)
	lw $19, -0x164($29)
	bne $19, $0, AND_80
	j AND_END_76
AND_80:
	# NEQ, INT(tmp_int_172[temp]), INT(glo_6[data+0x40]), INT(glo_5[data+0x3c])
	lw $20, 0x40($28)
	lw $23, 0x3c($28)
	sne $25, $20, $23
	# OR, INT(tmp_int_171[temp]), INT(tmp_int_169[sp-0x164]), INT(tmp_int_172[temp])
	lw $21, -0x164($29)
	or $17, $21, $25
	# Branch INT(tmp_int_171[temp]) ? AND_81 : AND_END_76
	sw $17, -0x168($29)
	sw $23, 0x3c($28)
	sw $20, 0x40($28)
	lw $24, -0x168($29)
	bne $24, $0, AND_81
	j AND_END_76
AND_81:
	# MOD, INT(tmp_int_174[temp]), INT(glo_4[data+0x38]), 2
	lw $22, 0x38($28)
	bltz $22, DIV_5
	andi $27, $22, 1
	j DIV_END_6
DIV_5:
	subu $22, $0, $22
	andi $27, $22, 1
	subu $27, $0, $27
DIV_END_6:
	# DIV, INT(tmp_int_175[temp]), INT(tmp_int_174[temp]), 2
	bltz $27, DIV_7
	srl $18, $27, 1
	j DIV_END_8
DIV_7:
	subu $27, $0, $27
	srl $18, $27, 1
	subu $18, $0, $18
DIV_END_8:
	# OFFSET (ARRAY(d[sp-0x1c])+0)->POINTER(tmp_pointer_53[temp])
	addiu $26, $29, -28
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+0)->POINTER(tmp_pointer_54[temp])
	addiu $19, $29, -36
	# ASS, INT(INLINE_var_1_9[sp-0x78]), INT(c[sp-0x18])
	lw $21, -0x18($29)
	move $5, $21
	# ASS, ARRAY(INLINE_var_2_9[sp-0x7c]), POINTER(tmp_pointer_53[temp])
	move $7, $26
	# OFFSET (INT(tmp_int_176[temp])+124)->POINTER(tmp_pointer_55[temp])
	addiu $25, $29, -124
	# STORE POINTER(tmp_pointer_55[temp]), POINTER(tmp_pointer_53[temp])
	sw $26, 0x0($25)
	# ASS, ARRAY(INLINE_var_3_9[sp-0x80]), POINTER(tmp_pointer_54[temp])
	move $6, $19
	# OFFSET (INT(tmp_int_177[temp])+128)->POINTER(tmp_pointer_56[temp])
	addiu $17, $29, -128
	# STORE POINTER(tmp_pointer_56[temp]), POINTER(tmp_pointer_54[temp])
	sw $19, 0x0($17)
	# JUMP INLINE_test_1_BEGIN_9
	sw $22, 0x38($28)
	sw $18, -0x16c($29)
	sw $21, -0x18($29)
INLINE_test_1_BEGIN_9:
	# MUL, INT(tmp_int_179[temp]), 0, 4
	li $23, 0
	# ADD, INT(tmp_int_179[temp]), INT(tmp_int_179[temp]), 0
	addiu $23, $23, 0
	# OFFSET (ARRAY(INLINE_var_2_9[sp-0x7c])+INT(tmp_int_179[temp]))->POINTER(tmp_pointer_57[temp])
	addu $20, $7, $23
	# LOAD POINTER(tmp_pointer_57[temp]), INT(tmp_int_180[temp])
	lw $24, 0x0($20)
	# ADD, INT(tmp_int_181[temp]), INT(INLINE_var_1_9[sp-0x78]), INT(tmp_int_180[temp])
	addu $27, $5, $24
	# MUL, INT(tmp_int_183[temp]), 0, 4
	li $25, 0
	# ADD, INT(tmp_int_183[temp]), INT(tmp_int_183[temp]), 0
	addiu $25, $25, 0
	# MUL, INT(tmp_int_184[temp]), 0, 4
	li $26, 0
	# ADD, INT(tmp_int_184[temp]), INT(tmp_int_184[temp]), INT(tmp_int_183[temp])
	addu $26, $26, $25
	# OFFSET (ARRAY(INLINE_var_3_9[sp-0x80])+INT(tmp_int_184[temp]))->POINTER(tmp_pointer_58[temp])
	addu $17, $6, $26
	# LOAD POINTER(tmp_pointer_58[temp]), INT(tmp_int_185[temp])
	lw $19, 0x0($17)
	# ADD, INT(tmp_int_182[temp]), INT(tmp_int_181[temp]), INT(tmp_int_185[temp])
	addu $22, $27, $19
	# ADD, INT(tmp_int_186[temp]), INT(tmp_int_182[temp]), 3452340
	addiu $18, $22, 3452340
	# ADD, INT(tmp_int_187[temp]), INT(tmp_int_186[temp]), 0
	addiu $21, $18, 0
	# ASS, INT(c[data+0x14]), INT(tmp_int_187[temp])
	move $20, $21
	# ASS, INT(tmp_int_178[temp]), INT(c[data+0x14])
	move $24, $20
	# JUMP INLINE_test_1_END_9
	sw $24, -0x170($29)
	sw $26, -0x174($29)
	sw $20, 0x14($28)
	sw $23, -0x178($29)
INLINE_test_1_END_9:
	# ADD, INT(tmp_int_188[temp]), INT(tmp_int_175[sp-0x16c]), INT(tmp_int_178[sp-0x170])
	lw $25, -0x16c($29)
	lw $17, -0x170($29)
	addu $27, $25, $17
	# MUL, INT(tmp_int_190[temp]), 0, 4
	li $19, 0
	# ADD, INT(tmp_int_190[temp]), INT(tmp_int_190[temp]), 0
	addiu $19, $19, 0
	# MUL, INT(tmp_int_191[temp]), 0, 4
	li $22, 0
	# ADD, INT(tmp_int_191[temp]), INT(tmp_int_191[temp]), INT(tmp_int_190[temp])
	addu $22, $22, $19
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+INT(tmp_int_191[temp]))->POINTER(tmp_pointer_59[temp])
	addiu $3, $29, -36
	addu $18, $3, $22
	# LOAD POINTER(tmp_pointer_59[temp]), INT(tmp_int_192[temp])
	lw $21, 0x0($18)
	# MUL, INT(tmp_int_193[temp]), 0, 4
	li $24, 0
	# ADD, INT(tmp_int_193[temp]), INT(tmp_int_193[temp]), 0
	addiu $24, $24, 0
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+INT(tmp_int_193[temp]))->POINTER(tmp_pointer_60[temp])
	addiu $3, $29, -36
	addu $26, $3, $24
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+0)->POINTER(tmp_pointer_61[temp])
	addiu $20, $29, -36
	# ASS, INT(INLINE_var_1_10[sp-0x84]), INT(tmp_int_192[temp])
	move $5, $21
	# ASS, ARRAY(INLINE_var_2_10[sp-0x88]), POINTER(tmp_pointer_60[temp])
	move $6, $26
	# OFFSET (INT(tmp_int_194[temp])+136)->POINTER(tmp_pointer_62[temp])
	addiu $23, $29, -136
	# STORE POINTER(tmp_pointer_62[temp]), POINTER(tmp_pointer_60[temp])
	sw $26, 0x0($23)
	# ASS, ARRAY(INLINE_var_3_10[sp-0x8c]), POINTER(tmp_pointer_61[temp])
	move $7, $20
	# OFFSET (INT(tmp_int_195[temp])+140)->POINTER(tmp_pointer_63[temp])
	addiu $25, $29, -140
	# STORE POINTER(tmp_pointer_63[temp]), POINTER(tmp_pointer_61[temp])
	sw $20, 0x0($25)
	# JUMP INLINE_test_1_BEGIN_10
	sw $27, -0x17c($29)
INLINE_test_1_BEGIN_10:
	# MUL, INT(tmp_int_197[temp]), 0, 4
	li $17, 0
	# ADD, INT(tmp_int_197[temp]), INT(tmp_int_197[temp]), 0
	addiu $17, $17, 0
	# OFFSET (ARRAY(INLINE_var_2_10[sp-0x88])+INT(tmp_int_197[temp]))->POINTER(tmp_pointer_64[temp])
	addu $19, $6, $17
	# LOAD POINTER(tmp_pointer_64[temp]), INT(tmp_int_198[temp])
	lw $22, 0x0($19)
	# ADD, INT(tmp_int_199[temp]), INT(INLINE_var_1_10[sp-0x84]), INT(tmp_int_198[temp])
	addu $18, $5, $22
	# MUL, INT(tmp_int_201[temp]), 0, 4
	li $24, 0
	# ADD, INT(tmp_int_201[temp]), INT(tmp_int_201[temp]), 0
	addiu $24, $24, 0
	# MUL, INT(tmp_int_202[temp]), 0, 4
	li $21, 0
	# ADD, INT(tmp_int_202[temp]), INT(tmp_int_202[temp]), INT(tmp_int_201[temp])
	addu $21, $21, $24
	# OFFSET (ARRAY(INLINE_var_3_10[sp-0x8c])+INT(tmp_int_202[temp]))->POINTER(tmp_pointer_65[temp])
	addu $23, $7, $21
	# LOAD POINTER(tmp_pointer_65[temp]), INT(tmp_int_203[temp])
	lw $26, 0x0($23)
	# ADD, INT(tmp_int_200[temp]), INT(tmp_int_199[temp]), INT(tmp_int_203[temp])
	addu $25, $18, $26
	# ADD, INT(tmp_int_204[temp]), INT(tmp_int_200[temp]), 3452340
	addiu $20, $25, 3452340
	# ADD, INT(tmp_int_205[temp]), INT(tmp_int_204[temp]), 0
	addiu $27, $20, 0
	# ASS, INT(c[data+0x14]), INT(tmp_int_205[temp])
	move $19, $27
	# ASS, INT(tmp_int_196[temp]), INT(c[data+0x14])
	move $22, $19
	# JUMP INLINE_test_1_END_10
	sw $21, -0x180($29)
	sw $17, -0x184($29)
	sw $22, -0x188($29)
	sw $19, 0x14($28)
INLINE_test_1_END_10:
	# ADD, INT(tmp_int_189[temp]), INT(tmp_int_188[sp-0x17c]), INT(tmp_int_196[sp-0x188])
	lw $24, -0x17c($29)
	lw $23, -0x188($29)
	addu $18, $24, $23
	# MUL, INT(tmp_int_207[temp]), 0, 4
	li $26, 0
	# ADD, INT(tmp_int_207[temp]), INT(tmp_int_207[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_208[temp]), 0, 4
	li $25, 0
	# ADD, INT(tmp_int_208[temp]), INT(tmp_int_208[temp]), INT(tmp_int_207[temp])
	addu $25, $25, $26
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+INT(tmp_int_208[temp]))->POINTER(tmp_pointer_66[temp])
	addiu $3, $29, -36
	addu $20, $3, $25
	# LOAD POINTER(tmp_pointer_66[temp]), INT(tmp_int_209[temp])
	lw $27, 0x0($20)
	# MUL, INT(tmp_int_210[temp]), 0, 4
	li $21, 0
	# ADD, INT(tmp_int_210[temp]), INT(tmp_int_210[temp]), 0
	addiu $21, $21, 0
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+INT(tmp_int_210[temp]))->POINTER(tmp_pointer_67[temp])
	addiu $3, $29, -36
	addu $17, $3, $21
	# OFFSET (ARRAY(_a_4_b_d[sp-0x24])+0)->POINTER(tmp_pointer_68[temp])
	addiu $22, $29, -36
	# ASS, INT(INLINE_var_1_11[sp-0x90]), INT(tmp_int_209[temp])
	move $7, $27
	# ASS, ARRAY(INLINE_var_2_11[sp-0x94]), POINTER(tmp_pointer_67[temp])
	move $5, $17
	# OFFSET (INT(tmp_int_211[temp])+148)->POINTER(tmp_pointer_69[temp])
	addiu $19, $29, -148
	# STORE POINTER(tmp_pointer_69[temp]), POINTER(tmp_pointer_67[temp])
	sw $17, 0x0($19)
	# ASS, ARRAY(INLINE_var_3_11[sp-0x98]), POINTER(tmp_pointer_68[temp])
	move $6, $22
	# OFFSET (INT(tmp_int_212[temp])+152)->POINTER(tmp_pointer_70[temp])
	addiu $24, $29, -152
	# STORE POINTER(tmp_pointer_70[temp]), POINTER(tmp_pointer_68[temp])
	sw $22, 0x0($24)
	# JUMP INLINE_test_1_BEGIN_11
	sw $18, -0x18c($29)
INLINE_test_1_BEGIN_11:
	# MUL, INT(tmp_int_214[temp]), 0, 4
	li $23, 0
	# ADD, INT(tmp_int_214[temp]), INT(tmp_int_214[temp]), 0
	addiu $23, $23, 0
	# OFFSET (ARRAY(INLINE_var_2_11[sp-0x94])+INT(tmp_int_214[temp]))->POINTER(tmp_pointer_71[temp])
	addu $26, $5, $23
	# LOAD POINTER(tmp_pointer_71[temp]), INT(tmp_int_215[temp])
	lw $25, 0x0($26)
	# ADD, INT(tmp_int_216[temp]), INT(INLINE_var_1_11[sp-0x90]), INT(tmp_int_215[temp])
	addu $20, $7, $25
	# MUL, INT(tmp_int_218[temp]), 0, 4
	li $21, 0
	# ADD, INT(tmp_int_218[temp]), INT(tmp_int_218[temp]), 0
	addiu $21, $21, 0
	# MUL, INT(tmp_int_219[temp]), 0, 4
	li $27, 0
	# ADD, INT(tmp_int_219[temp]), INT(tmp_int_219[temp]), INT(tmp_int_218[temp])
	addu $27, $27, $21
	# OFFSET (ARRAY(INLINE_var_3_11[sp-0x98])+INT(tmp_int_219[temp]))->POINTER(tmp_pointer_72[temp])
	addu $19, $6, $27
	# LOAD POINTER(tmp_pointer_72[temp]), INT(tmp_int_220[temp])
	lw $17, 0x0($19)
	# ADD, INT(tmp_int_217[temp]), INT(tmp_int_216[temp]), INT(tmp_int_220[temp])
	addu $24, $20, $17
	# ADD, INT(tmp_int_221[temp]), INT(tmp_int_217[temp]), 3452340
	addiu $22, $24, 3452340
	# ADD, INT(tmp_int_222[temp]), INT(tmp_int_221[temp]), 0
	addiu $18, $22, 0
	# ASS, INT(c[data+0x14]), INT(tmp_int_222[temp])
	move $26, $18
	# ASS, INT(tmp_int_213[temp]), INT(c[data+0x14])
	move $25, $26
	# JUMP INLINE_test_1_END_11
	sw $23, -0x190($29)
	sw $26, 0x14($28)
	sw $25, -0x194($29)
	sw $27, -0x198($29)
INLINE_test_1_END_11:
	# MUL, INT(tmp_int_223[temp]), INT(tmp_int_213[sp-0x194]), 20
	lw $21, -0x194($29)
	sll $19, $21, 4
	sll $3, $21, 2
	addu $19, $19, $3
	# SUB, INT(tmp_int_206[temp]), INT(tmp_int_189[sp-0x18c]), INT(tmp_int_223[temp])
	lw $20, -0x18c($29)
	subu $17, $20, $19
	# OR, INT(tmp_int_173[temp]), INT(tmp_int_171[sp-0x168]), INT(tmp_int_206[temp])
	lw $24, -0x168($29)
	or $22, $24, $17
	# Branch INT(tmp_int_173[temp]) ? AND_82 : AND_END_76
	sw $22, -0x19c($29)
	lw $18, -0x19c($29)
	bne $18, $0, AND_82
	j AND_END_76
AND_82:
	# EQ, INT(tmp_int_225[temp]), INT(glo_6[data+0x40]), INT(glo_6[data+0x40])
	lw $23, 0x40($28)
	seq $26, $23, $23
	# OR, INT(tmp_int_224[temp]), INT(tmp_int_173[sp-0x19c]), INT(tmp_int_225[temp])
	lw $25, -0x19c($29)
	or $27, $25, $26
	# Branch INT(tmp_int_224[temp]) ? AND_86 : AND_END_76
	sw $27, -0x1a0($29)
	sw $23, 0x40($28)
	lw $21, -0x1a0($29)
	bne $21, $0, AND_86
	j AND_END_76
AND_86:
	# JUMP AND_END_76
AND_END_76:
	# OR, INT(tmp_int_164[temp]), INT(tmp_int_162[sp-0x150]), INT(tmp_int_224[sp-0x1a0])
	lw $20, -0x150($29)
	lw $19, -0x1a0($29)
	or $24, $20, $19
	# Branch INT(tmp_int_164[temp]) ? OR_END_66 : OR_74
	sw $24, -0x1a4($29)
	lw $17, -0x1a4($29)
	bne $17, $0, OR_END_66
OR_74:
	# JUMP OR_END_66
OR_END_66:
	# Branch INT(tmp_int_164[sp-0x1a4]) ? DO_BODY_10 : DO_END_12
	lw $22, -0x1a4($29)
	bne $22, $0, DO_BODY_10
	j DO_END_12
	# JUMP DO_END_12
DO_END_12:
	# PRINT_STR STR_10
	li $2, 4
	la $4, STR_10
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(glo_1[data+0x2c])
	li $2, 1
	lw $18, 0x2c($28)
	move $4, $18
	syscall
	# PRINT_STR STR_12
	li $2, 4
	la $4, STR_12
	syscall
	# PRINT_STR STR_13
	li $2, 4
	la $4, STR_13
	syscall
	# PRINT_INT INT(glo_2[data+0x30])
	li $2, 1
	lw $25, 0x30($28)
	move $4, $25
	syscall
	# PRINT_STR STR_12
	li $2, 4
	la $4, STR_12
	syscall
	# PRINT_STR STR_14
	li $2, 4
	la $4, STR_14
	syscall
	# PRINT_INT INT(glo_3[data+0x34])
	li $2, 1
	lw $26, 0x34($28)
	move $4, $26
	syscall
	# PRINT_STR STR_12
	li $2, 4
	la $4, STR_12
	syscall
	# PRINT_STR STR_15
	li $2, 4
	la $4, STR_15
	syscall
	# PRINT_INT INT(glo_4[data+0x38])
	li $2, 1
	lw $27, 0x38($28)
	move $4, $27
	syscall
	# PRINT_STR STR_12
	li $2, 4
	la $4, STR_12
	syscall
	# PRINT_STR STR_16
	li $2, 4
	la $4, STR_16
	syscall
	# PRINT_INT INT(glo_5[data+0x3c])
	li $2, 1
	lw $23, 0x3c($28)
	move $4, $23
	syscall
	# PRINT_STR STR_12
	li $2, 4
	la $4, STR_12
	syscall
	# PRINT_STR STR_17
	li $2, 4
	la $4, STR_17
	syscall
	# PRINT_INT INT(glo_6[data+0x40])
	li $2, 1
	lw $21, 0x40($28)
	move $4, $21
	syscall
	# PRINT_STR STR_12
	li $2, 4
	la $4, STR_12
	syscall
	# PRINT_STR STR_18
	li $2, 4
	la $4, STR_18
	syscall
	# PRINT_INT INT(glo_7[data+0x44])
	li $2, 1
	lw $20, 0x44($28)
	move $4, $20
	syscall
	# PRINT_STR STR_12
	li $2, 4
	la $4, STR_12
	syscall
	# PRINT_STR STR_19
	li $2, 4
	la $4, STR_19
	syscall
	# PRINT_INT INT(glo_8[data+0x48])
	li $2, 1
	lw $19, 0x48($28)
	move $4, $19
	syscall
	# PRINT_STR STR_12
	li $2, 4
	la $4, STR_12
	syscall
	# PRINT_STR STR_20
	li $2, 4
	la $4, STR_20
	syscall
	# PRINT_INT INT(glo_9[data+0x4c])
	li $2, 1
	lw $24, 0x4c($28)
	move $4, $24
	syscall
	# PRINT_STR STR_12
	li $2, 4
	la $4, STR_12
	syscall
	# RETURN 0
	li $2, 10
	syscall
	
