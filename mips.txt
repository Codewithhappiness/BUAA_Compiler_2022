# Yuelin's Compiler
	
.data
	global:
	4 64 -49331 24 1040 10086 16 212132 76 308 26 57048 3194880 8792 -687331 908 1040 136 10104 4491858 -597 0 1983 2323 9254 0 -1269906 0 0 0 0 0 0 0 0 0 287 -98662 287 11505 0
	.space 4
	STR_1: .asciiz "   !!! ()*+,-./:;<>=@?^_`{}|~[]  called func: ___\n"
	STR_2: .asciiz "//called func: ____, _arg = "
	STR_3: .asciiz "\n"
	STR_4: .asciiz "called func: __, array[0] = "
	STR_5: .asciiz "\n\n\n"
	STR_6: .asciiz "called func: Main, array[0][0] = "
	STR_7: .asciiz ", array[0][1] = "
	STR_8: .asciiz "\n\n"
	STR_9: .asciiz "20373381\n"
	STR_10: .asciiz "temp: "
	STR_11: .asciiz " "
.text
	la $gp, global
	j FUNC_main
FUNC___my_Ha_s__h:
	lw $5, -0x4($29)
	lw $7, -0x8($29)
	# ASS, INT(__[sp-0xc]), INT(len[sp-0x8])
	move $6, $7
	# ASS, INT(I[sp-0x10]), 0
	li $5, 0
	# JUMP WHILE_0
WHILE_0:
	# JUMP L_OR_EXP_3
L_OR_EXP_3:
	# JUMP L_AND_EXP_4
L_AND_EXP_4:
	# LT, INT(tmp_int_5862[temp]), INT(I[sp-0x10]), INT(len[sp-0x8])
	slt $26, $5, $7
	# JUMP AND_END_5
	sw $26, -0x14($29)
AND_END_5:
	# JUMP OR_END_6
OR_END_6:
	# Branch INT(tmp_int_5862[sp-0x14]) ? WHILE_BODY_1 : WHILE_END_2
	lw $27, -0x14($29)
	bne $27, $0, WHILE_BODY_1
	j WHILE_END_2
WHILE_BODY_1:
	# JUMP B_7
B_7:
	# ADD, INT(tmp_int_5863[temp]), INT(__[sp-0xc]), 98326464
	addiu $26, $6, 98326464
	# ASS, INT(__[sp-0xc]), INT(tmp_int_5863[temp])
	move $6, $26
	# MUL, INT(tmp_int_5864[temp]), INT(__[sp-0xc]), 20373381
	li $3, 20373381
	mult $6 $3
	mflo $27
	# ASS, INT(__[sp-0xc]), INT(tmp_int_5864[temp])
	move $6, $27
	# ADD, INT(tmp_int_5865[temp]), INT(__[sp-0xc]), 23667832
	addiu $26, $6, 23667832
	# ASS, INT(__[sp-0xc]), INT(tmp_int_5865[temp])
	move $6, $26
	# DIV, INT(tmp_int_5866[temp]), INT(__[sp-0xc]), 133
	bltz $6, DIV_353
	li $27, 4133502361
	multu $27 $6
	mfhi $27
	srl $27, $27, 7
	j DIV_END_354
DIV_353:
	subu $6, $0, $6
	li $27, 4133502361
	multu $27 $6
	mfhi $27
	srl $27, $27, 7
	subu $27, $0, $27
DIV_END_354:
	# ASS, INT(__[sp-0xc]), INT(tmp_int_5866[temp])
	move $6, $27
	# ADD, INT(tmp_int_5867[temp]), INT(__[sp-0xc]), 1347887899
	addiu $26, $6, 1347887899
	# ASS, INT(__[sp-0xc]), INT(tmp_int_5867[temp])
	move $6, $26
	# MOD, INT(tmp_int_5868[temp]), INT(__[sp-0xc]), 99998099
	bltz $6, DIV_355
	li $27, 2882358555
	multu $27 $6
	mfhi $27
	srl $27, $27, 26
	li $3, 99998099
	mult $27 $3
	mflo $2
	subu $27, $6, $2
	j DIV_END_356
DIV_355:
	subu $6, $0, $6
	li $27, 2882358555
	multu $27 $6
	mfhi $27
	srl $27, $27, 26
	li $3, 99998099
	mult $27 $3
	mflo $2
	subu $27, $6, $2
	subu $27, $0, $27
DIV_END_356:
	# ASS, INT(__[sp-0xc]), INT(tmp_int_5868[temp])
	move $6, $27
	# MUL, INT(tmp_int_5869[temp]), INT(__[sp-0xc]), 123671861
	li $3, 123671861
	mult $6 $3
	mflo $26
	# SUB, INT(tmp_int_5870[temp]), INT(tmp_int_5869[temp]), 236234
	addiu $27, $26, -236234
	# ADD, INT(tmp_int_5872[temp]), INT(__[sp-0xc]), 135632
	addiu $26, $6, 135632
	# MUL, INT(tmp_int_5871[temp]), INT(tmp_int_5870[temp]), INT(tmp_int_5872[temp])
	sw $26, -0x18($29)
	mult $27 $26
	mflo $26
	# DIV, INT(tmp_int_5873[temp]), INT(tmp_int_5871[temp]), 7
	bltz $26, DIV_357
	li $27, 2454267026
	multu $27 $26
	mfhi $27
	srl $27, $27, 2
	j DIV_END_358
DIV_357:
	subu $26, $0, $26
	li $27, 2454267026
	multu $27 $26
	mfhi $27
	srl $27, $27, 2
	subu $27, $0, $27
DIV_END_358:
	# ASS, INT(__[sp-0xc]), INT(tmp_int_5873[temp])
	move $6, $27
	# NEG, INT(tmp_int_5875[temp]), 0
	li $26, 0
	# ADD, INT(tmp_int_5876[temp]), INT(tmp_int_5875[temp]), 2
	addiu $27, $26, 2
	# DIV, INT(tmp_int_5878[temp]), 1234, 888
	li $26, 1
	# SUB, INT(tmp_int_5877[temp]), INT(tmp_int_5876[temp]), INT(tmp_int_5878[temp])
	sw $26, -0x1c($29)
	subu $26, $27, $26
	# ADD, INT(tmp_int_5874[temp]), INT(I[sp-0x10]), INT(tmp_int_5877[temp])
	addu $27, $5, $26
	# ASS, INT(I[sp-0x10]), INT(tmp_int_5874[temp])
	move $5, $27
	# JUMP B_8
B_8:
	# JUMP WHILE_0
	j WHILE_0
WHILE_END_2:
	# RETURN INT(__[sp-0xc])
	move $2, $6
	jr $ra
	
FUNC____:
	# PRINT_STR STR_1
	li $2, 4
	la $4, STR_1
	syscall
	# RETURN VOID
	jr $ra
	
FUNC_____:
	lw $5, -0x4($29)
	# MUL, INT(tmp_int_5879[temp]), INT(_arg[sp-0x4]), 2
	sll $26, $5, 1
	# MUL, INT(tmp_int_5880[temp]), INT(tmp_int_5879[temp]), 3
	sll $27, $26, 1
	addu $27, $27, $26
	# DIV, INT(tmp_int_5881[temp]), INT(tmp_int_5880[temp]), 6
	bltz $27, DIV_359
	li $26, 2863311531
	multu $26 $27
	mfhi $26
	srl $26, $26, 2
	j DIV_END_360
DIV_359:
	subu $27, $0, $27
	li $26, 2863311531
	multu $26 $27
	mfhi $26
	srl $26, $26, 2
	subu $26, $0, $26
DIV_END_360:
	# PRINT_STR STR_2
	li $2, 4
	la $4, STR_2
	syscall
	# PRINT_INT INT(tmp_int_5881[temp])
	li $2, 1
	move $4, $26
	syscall
	# PRINT_STR STR_3
	li $2, 4
	la $4, STR_3
	syscall
	# RETURN VOID
	jr $ra
	
FUNC___:
	lw $6, -0x4($29)
	lw $5, -0x8($29)
	# MUL, INT(tmp_int_5882[temp]), 0, 4
	li $26, 0
	# ADD, INT(tmp_int_5882[temp]), INT(tmp_int_5882[temp]), 0
	addiu $26, $26, 0
	# OFFSET (ARRAY(_arr_Ay[sp-0x4])+INT(tmp_int_5882[temp]))->POINTER(tmp_pointer_2126[temp])
	addu $27, $6, $26
	# LOAD POINTER(tmp_pointer_2126[temp]), INT(tmp_int_5883[temp])
	sw $26, -0xc($29)
	lw $26, 0x0($27)
	# PRINT_STR STR_4
	li $2, 4
	la $4, STR_4
	syscall
	# PRINT_INT INT(tmp_int_5883[temp])
	li $2, 1
	move $4, $26
	syscall
	# PRINT_STR STR_5
	li $2, 4
	la $4, STR_5
	syscall
	# RETURN VOID
	jr $ra
	
FUNC__Main:
	lw $5, -0x4($29)
	# MUL, INT(tmp_int_5884[temp]), 1, 4
	li $26, 4
	# ADD, INT(tmp_int_5884[temp]), INT(tmp_int_5884[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_5885[temp]), 0, 8
	li $27, 0
	# ADD, INT(tmp_int_5885[temp]), INT(tmp_int_5885[temp]), INT(tmp_int_5884[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(_arr_Ay[sp-0x4])+INT(tmp_int_5885[temp]))->POINTER(tmp_pointer_2127[temp])
	addu $26, $5, $27
	# LOAD POINTER(tmp_pointer_2127[temp]), INT(tmp_int_5886[temp])
	sw $27, -0x8($29)
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_5887[temp]), 0, 4
	li $26, 0
	# ADD, INT(tmp_int_5887[temp]), INT(tmp_int_5887[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_5888[temp]), 0, 8
	sw $27, -0xc($29)
	li $27, 0
	# ADD, INT(tmp_int_5888[temp]), INT(tmp_int_5888[temp]), INT(tmp_int_5887[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(_arr_Ay[sp-0x4])+INT(tmp_int_5888[temp]))->POINTER(tmp_pointer_2128[temp])
	addu $26, $5, $27
	# LOAD POINTER(tmp_pointer_2128[temp]), INT(tmp_int_5889[temp])
	sw $27, -0x10($29)
	lw $27, 0x0($26)
	# PRINT_STR STR_6
	li $2, 4
	la $4, STR_6
	syscall
	# PRINT_INT INT(tmp_int_5889[temp])
	li $2, 1
	move $4, $27
	syscall
	# PRINT_STR STR_7
	li $2, 4
	la $4, STR_7
	syscall
	# PRINT_INT INT(tmp_int_5886[sp-0xc])
	li $2, 1
	lw $26, -0xc($29)
	move $4, $26
	syscall
	# PRINT_STR STR_8
	li $2, 4
	la $4, STR_8
	syscall
	# RETURN VOID
	jr $ra
	
FUNC__add_fake:
	lw $5, -0x4($29)
	lw $6, -0x8($29)
	# JUMP L_OR_EXP_14
L_OR_EXP_14:
	# JUMP L_AND_EXP_15
L_AND_EXP_15:
	# ADD, INT(tmp_int_5890[temp]), INT(a[sp-0x4]), INT(b[sp-0x8])
	addu $26, $5, $6
	# ADD, INT(tmp_int_5892[temp]), 100, 10086
	li $27, 10186
	# GE, INT(tmp_int_5891[temp]), INT(tmp_int_5890[temp]), INT(tmp_int_5892[temp])
	sw $26, -0xc($29)
	sge $26, $26, $27
	# JUMP AND_END_16
	sw $26, -0x10($29)
AND_END_16:
	# JUMP OR_END_17
OR_END_17:
	# Branch INT(tmp_int_5891[sp-0x10]) ? IF_BODY_18 : IF_ELSE_20
	lw $27, -0x10($29)
	bne $27, $0, IF_BODY_18
	j IF_ELSE_20
IF_BODY_18:
	# JUMP B_21
B_21:
	# MUL, INT(tmp_int_5894[temp]), 203, INT(b[sp-0x8])
	li $3, 203
	mult $6 $3
	mflo $26
	# DIV, INT(tmp_int_5895[temp]), INT(tmp_int_5894[temp]), 201
	bltz $26, DIV_361
	li $27, 2735103552
	multu $27 $26
	mfhi $27
	srl $27, $27, 7
	j DIV_END_362
DIV_361:
	subu $26, $0, $26
	li $27, 2735103552
	multu $27 $26
	mfhi $27
	srl $27, $27, 7
	subu $27, $0, $27
DIV_END_362:
	# ADD, INT(tmp_int_5893[temp]), INT(a[sp-0x4]), INT(tmp_int_5895[temp])
	addu $26, $5, $27
	# RETURN INT(tmp_int_5893[temp])
	move $2, $26
	jr $ra
	# JUMP B_22
B_22:
	# JUMP IF_END_19
	j IF_END_19
IF_ELSE_20:
	# JUMP L_OR_EXP_23
L_OR_EXP_23:
	# JUMP L_AND_EXP_24
L_AND_EXP_24:
	# ADD, INT(tmp_int_5896[temp]), INT(a[sp-0x4]), INT(b[sp-0x8])
	addu $27, $5, $6
	# SUB, INT(tmp_int_5897[temp]), INT(tmp_int_5896[temp]), 10086
	addiu $26, $27, -10086
	# LT, INT(tmp_int_5898[temp]), INT(tmp_int_5897[temp]), 12345678
	li $3, 12345678
	slt $27, $26, $3
	# JUMP AND_END_25
	sw $27, -0x14($29)
AND_END_25:
	# JUMP OR_END_26
OR_END_26:
	# Branch INT(tmp_int_5898[sp-0x14]) ? IF_BODY_27 : IF_ELSE_29
	lw $26, -0x14($29)
	bne $26, $0, IF_BODY_27
	j IF_ELSE_29
IF_BODY_27:
	# JUMP B_30
B_30:
	# MUL, INT(tmp_int_5899[temp]), 1003, INT(a[sp-0x4])
	li $3, 1003
	mult $5 $3
	mflo $27
	# DIV, INT(tmp_int_5900[temp]), INT(tmp_int_5899[temp]), 1009
	bltz $27, DIV_363
	li $26, 2179408578
	multu $26 $27
	mfhi $26
	srl $26, $26, 9
	j DIV_END_364
DIV_363:
	subu $27, $0, $27
	li $26, 2179408578
	multu $26 $27
	mfhi $26
	srl $26, $26, 9
	subu $26, $0, $26
DIV_END_364:
	# MUL, INT(tmp_int_5902[temp]), 2022, INT(b[sp-0x8])
	li $3, 2022
	mult $6 $3
	mflo $27
	# DIV, INT(tmp_int_5903[temp]), INT(tmp_int_5902[temp]), 2019
	sw $26, -0x18($29)
	bltz $27, DIV_365
	li $26, 2178329129
	multu $26 $27
	mfhi $26
	srl $26, $26, 10
	j DIV_END_366
DIV_365:
	subu $27, $0, $27
	li $26, 2178329129
	multu $26 $27
	mfhi $26
	srl $26, $26, 10
	subu $26, $0, $26
DIV_END_366:
	# ADD, INT(tmp_int_5901[temp]), INT(tmp_int_5900[sp-0x18]), INT(tmp_int_5903[temp])
	lw $27, -0x18($29)
	sw $26, -0x1c($29)
	addu $26, $27, $26
	# RETURN INT(tmp_int_5901[temp])
	move $2, $26
	jr $ra
	# JUMP B_31
B_31:
	# JUMP IF_END_28
	j IF_END_28
IF_ELSE_29:
	# JUMP B_32
B_32:
	# ADD, INT(tmp_int_5904[temp]), INT(a[sp-0x4]), INT(b[sp-0x8])
	addu $27, $5, $6
	# SUB, INT(tmp_int_5905[temp]), INT(tmp_int_5904[temp]), 233
	addiu $26, $27, -233
	# RETURN INT(tmp_int_5905[temp])
	move $2, $26
	jr $ra
	# JUMP B_33
B_33:
	# JUMP IF_END_28
IF_END_28:
	# JUMP IF_END_19
IF_END_19:
	# NEG, INT(tmp_int_5906[temp]), 10086
	li $27, -10086
	# RETURN INT(tmp_int_5906[temp])
	move $2, $27
	jr $ra
	
FUNC__add:
	lw $7, -0x4($29)
	lw $5, -0x8($29)
	lw $6, -0xc($29)
	# ADD, INT(tmp_int_5907[temp]), INT(a[sp-0x4]), INT(b[sp-0x8])
	addu $26, $7, $5
	# ADD, INT(tmp_int_5908[temp]), INT(tmp_int_5907[temp]), INT(c[sp-0xc])
	addu $27, $26, $6
	# RETURN INT(tmp_int_5908[temp])
	move $2, $27
	jr $ra
	
FUNC__get_id:
	# ASS, INT(_2_wj5qhidw_[sp-0x4]), 76
	li $5, 76
	# JUMP B_36
B_36:
	# PRINT_INT INT(_2_wj5qhidw_[sp-0x4])
	li $2, 1
	move $4, $5
	syscall
	# PRINT_STR STR_3
	li $2, 4
	la $4, STR_3
	syscall
	# ASS, INT(_2_wj5qhidw_[sp-0x4]), 10086
	li $5, 10086
	# PRINT_INT INT(_2_wj5qhidw_[sp-0x4])
	li $2, 1
	move $4, $5
	syscall
	# PRINT_STR STR_3
	li $2, 4
	la $4, STR_3
	syscall
	# DEF, INT(_2_wj5qhidw_[sp-0x8]), -10
	li $5, -10
	# PRINT_INT INT(_2_wj5qhidw_[sp-0x8])
	li $2, 1
	move $4, $5
	syscall
	# PRINT_STR STR_3
	li $2, 4
	la $4, STR_3
	syscall
	# JUMP B_37
B_37:
	# RETURN 20373381
	li $2, 20373381
	jr $ra
	
FUNC__M__a_G_I___c:
	lw $5, -0x4($29)
	# NEG, INT(tmp_int_5910[temp]), 763835168
	li $26, -763835168
	# ADD, INT(tmp_int_5909[temp]), INT(num[sp-0x4]), INT(tmp_int_5910[temp])
	addu $27, $5, $26
	# MOD, INT(tmp_int_5911[temp]), INT(tmp_int_5909[temp]), 1996325548
	bltz $27, DIV_367
	li $26, 2310087161
	multu $26 $27
	mfhi $26
	srl $26, $26, 30
	li $3, 1996325548
	mult $26 $3
	mflo $2
	subu $26, $27, $2
	j DIV_END_368
DIV_367:
	subu $27, $0, $27
	li $26, 2310087161
	multu $26 $27
	mfhi $26
	srl $26, $26, 30
	li $3, 1996325548
	mult $26 $3
	mflo $2
	subu $26, $27, $2
	subu $26, $0, $26
DIV_END_368:
	# MUL, INT(tmp_int_5912[temp]), INT(tmp_int_5911[temp]), 1881457024
	li $3, 1881457024
	mult $26 $3
	mflo $27
	# DIV, INT(tmp_int_5913[temp]), INT(tmp_int_5912[temp]), 11
	bltz $27, DIV_369
	li $26, 3123612579
	multu $26 $27
	mfhi $26
	srl $26, $26, 3
	j DIV_END_370
DIV_369:
	subu $27, $0, $27
	li $26, 3123612579
	multu $26 $27
	mfhi $26
	srl $26, $26, 3
	subu $26, $0, $26
DIV_END_370:
	# MUL, INT(tmp_int_5914[temp]), INT(tmp_int_5913[temp]), 540488577
	li $3, 540488577
	mult $26 $3
	mflo $27
	# RETURN INT(tmp_int_5914[temp])
	move $2, $27
	jr $ra
	
FUNC_main:
	# JUMP B_40
B_40:
	# JUMP B_41
	j B_41
	# JUMP B_47
	j B_47
B_41:
	# JUMP B_42
	j B_42
	# JUMP B_46
	j B_46
B_42:
	# JUMP B_43
	j B_43
	# JUMP B_45
	j B_45
B_43:
	# JUMP B_44
B_44:
	# JUMP B_45
B_45:
	# JUMP B_46
B_46:
	# JUMP B_47
B_47:
	# OFFSET (ARRAY(__array[sp-0x34])+0)->POINTER(tmp_pointer_2129[temp])
	addiu $26, $29, -52
	# STORE POINTER(tmp_pointer_2129[temp]), 1
	li $3, 1
	sw $3, 0x0($26)
	# OFFSET (ARRAY(__array[sp-0x34])+4)->POINTER(tmp_pointer_2130[temp])
	addiu $27, $29, -48
	# STORE POINTER(tmp_pointer_2130[temp]), 2
	li $3, 2
	sw $3, 0x0($27)
	# OFFSET (ARRAY(__array[sp-0x34])+8)->POINTER(tmp_pointer_2131[temp])
	addiu $26, $29, -44
	# STORE POINTER(tmp_pointer_2131[temp]), 3
	li $3, 3
	sw $3, 0x0($26)
	# OFFSET (ARRAY(__array[sp-0x34])+12)->POINTER(tmp_pointer_2132[temp])
	addiu $27, $29, -40
	# STORE POINTER(tmp_pointer_2132[temp]), 4
	li $3, 4
	sw $3, 0x0($27)
	# OFFSET (ARRAY(__array[sp-0x34])+16)->POINTER(tmp_pointer_2133[temp])
	addiu $26, $29, -36
	# STORE POINTER(tmp_pointer_2133[temp]), 5
	li $3, 5
	sw $3, 0x0($26)
	# OFFSET (ARRAY(__array[sp-0x34])+20)->POINTER(tmp_pointer_2134[temp])
	addiu $27, $29, -32
	# STORE POINTER(tmp_pointer_2134[temp]), 6
	li $3, 6
	sw $3, 0x0($27)
	# OFFSET (ARRAY(__array[sp-0x34])+24)->POINTER(tmp_pointer_2135[temp])
	addiu $26, $29, -28
	# STORE POINTER(tmp_pointer_2135[temp]), 7
	li $3, 7
	sw $3, 0x0($26)
	# OFFSET (ARRAY(__array[sp-0x34])+28)->POINTER(tmp_pointer_2136[temp])
	addiu $27, $29, -24
	# STORE POINTER(tmp_pointer_2136[temp]), 8
	li $3, 8
	sw $3, 0x0($27)
	# DEF, INT(aaaaa[sp-0x38]), 10
	li $11, 10
	# DEF, INT(bbbbb[sp-0x3c]), 20
	li $10, 20
	# DEF, INT(_0[sp-0x40]), 10
	li $15, 10
	# DEF, INT(_main[sp-0x44]), 0
	li $9, 0
	# DEF, INT(Main[sp-0x48]), 1
	li $12, 1
	# GETINT INT(___2_0_3_7_3_3_8_1___X___J___h_____[sp-0x4])
	li $2, 5
	syscall
	move $14, $2
	# GETINT INT(_for___[sp-0x8])
	li $2, 5
	syscall
	move $5, $2
	# GETINT INT(_Int[sp-0xc])
	li $2, 5
	syscall
	move $6, $2
	# GETINT INT(_2233[sp-0x10])
	li $2, 5
	syscall
	move $7, $2
	# GETINT INT(a10086__[sp-0x14])
	li $2, 5
	syscall
	move $8, $2
	# JUMP L_OR_EXP_48
L_OR_EXP_48:
	# JUMP L_AND_EXP_49
L_AND_EXP_49:
	# EQ, INT(tmp_int_5915[temp]), INT(___2_0_3_7_3_3_8_1___X___J___h_____[sp-0x4]), 20373381
	seq $26, $14, 20373381
	# JUMP AND_END_50
	sw $26, -0x8c($29)
AND_END_50:
	# JUMP OR_END_51
OR_END_51:
	# Branch INT(tmp_int_5915[sp-0x8c]) ? IF_BODY_52 : IF_END_53
	lw $27, -0x8c($29)
	bne $27, $0, IF_BODY_52
	j IF_END_53
IF_BODY_52:
	# JUMP B_54
B_54:
	# ADD, INT(tmp_int_5916[temp]), INT(Main[sp-0x48]), 1
	addiu $26, $12, 1
	# ASS, INT(Main[sp-0x48]), INT(tmp_int_5916[temp])
	move $12, $26
	# ADD, INT(tmp_int_5917[temp]), INT(_main[sp-0x44]), 1332
	addiu $27, $9, 1332
	# ASS, INT(_main[sp-0x44]), INT(tmp_int_5917[temp])
	move $9, $27
	# JUMP B_55
B_55:
	# JUMP IF_END_53
IF_END_53:
	# JUMP L_OR_EXP_56
L_OR_EXP_56:
	# JUMP L_AND_EXP_57
L_AND_EXP_57:
	# GT, INT(tmp_int_5918[temp]), INT(_for___[sp-0x8]), 200
	sgt $26, $5, 200
	# JUMP AND_END_58
	sw $26, -0x90($29)
AND_END_58:
	# JUMP OR_END_59
OR_END_59:
	# Branch INT(tmp_int_5918[sp-0x90]) ? IF_BODY_60 : IF_END_61
	lw $27, -0x90($29)
	bne $27, $0, IF_BODY_60
	j IF_END_61
IF_BODY_60:
	# ADD, INT(tmp_int_5919[temp]), INT(Main[sp-0x48]), 1
	addiu $26, $12, 1
	# ASS, INT(Main[sp-0x48]), INT(tmp_int_5919[temp])
	move $12, $26
	# JUMP IF_END_61
IF_END_61:
	# JUMP L_OR_EXP_62
L_OR_EXP_62:
	# JUMP L_AND_EXP_63
L_AND_EXP_63:
	# GE, INT(tmp_int_5920[temp]), INT(_Int[sp-0xc]), 111
	sge $27, $6, 111
	# JUMP AND_END_64
	sw $27, -0x94($29)
AND_END_64:
	# JUMP OR_END_65
OR_END_65:
	# Branch INT(tmp_int_5920[sp-0x94]) ? IF_BODY_66 : IF_END_67
	lw $26, -0x94($29)
	bne $26, $0, IF_BODY_66
	j IF_END_67
IF_BODY_66:
	# JUMP L_OR_EXP_68
L_OR_EXP_68:
	# JUMP L_AND_EXP_69
L_AND_EXP_69:
	# NEQ, INT(tmp_int_5921[temp]), INT(_2233[sp-0x10]), 2234
	sne $27, $7, 2234
	# JUMP AND_END_70
	sw $27, -0x98($29)
AND_END_70:
	# JUMP OR_END_71
OR_END_71:
	# Branch INT(tmp_int_5921[sp-0x98]) ? IF_BODY_72 : IF_ELSE_74
	lw $26, -0x98($29)
	bne $26, $0, IF_BODY_72
	j IF_ELSE_74
IF_BODY_72:
	# ADD, INT(tmp_int_5922[temp]), INT(Main[sp-0x48]), 1
	addiu $27, $12, 1
	# ASS, INT(Main[sp-0x48]), INT(tmp_int_5922[temp])
	move $12, $27
	# JUMP IF_END_73
	j IF_END_73
IF_ELSE_74:
	# ADD, INT(tmp_int_5923[temp]), INT(Main[sp-0x48]), 2729
	addiu $26, $12, 2729
	# ASS, INT(Main[sp-0x48]), INT(tmp_int_5923[temp])
	move $12, $26
	# JUMP IF_END_73
IF_END_73:
	# JUMP IF_END_67
IF_END_67:
	# DEF, INT(j[sp-0x4c]), 0
	li $5, 0
	# DEF, INT(sum[sp-0x50]), 0
	li $6, 0
	# JUMP WHILE_75
WHILE_75:
	# JUMP L_OR_EXP_78
L_OR_EXP_78:
	# JUMP L_AND_EXP_79
L_AND_EXP_79:
	# NOT, INT(tmp_int_5924[temp]), 0
	seq $27, $0, 0
	# JUMP AND_END_80
	sw $27, -0x9c($29)
AND_END_80:
	# JUMP OR_END_81
OR_END_81:
	# Branch INT(tmp_int_5924[sp-0x9c]) ? WHILE_BODY_76 : WHILE_END_77
	lw $26, -0x9c($29)
	bne $26, $0, WHILE_BODY_76
	j WHILE_END_77
WHILE_BODY_76:
	# JUMP B_82
B_82:
	# MUL, INT(tmp_int_5926[temp]), INT(j[sp-0x4c]), 4
	sll $27, $5, 2
	# ADD, INT(tmp_int_5926[temp]), INT(tmp_int_5926[temp]), 0
	addiu $27, $27, 0
	# OFFSET (ARRAY(aaa[data+0x14])+INT(tmp_int_5926[temp]))->POINTER(tmp_pointer_2137[temp])
	addiu $3, $28, 20
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2137[temp]), INT(tmp_int_5927[temp])
	lw $27, 0x0($26)
	# ADD, INT(tmp_int_5925[temp]), INT(sum[sp-0x50]), INT(tmp_int_5927[temp])
	addu $26, $6, $27
	# ASS, INT(sum[sp-0x50]), INT(tmp_int_5925[temp])
	move $6, $26
	# ADD, INT(tmp_int_5928[temp]), INT(j[sp-0x4c]), 1
	addiu $27, $5, 1
	# ASS, INT(j[sp-0x4c]), INT(tmp_int_5928[temp])
	move $5, $27
	# JUMP L_OR_EXP_83
	j L_OR_EXP_83
	# JUMP B_91
	j B_91
L_OR_EXP_83:
	# JUMP L_AND_EXP_84
L_AND_EXP_84:
	# DIV, INT(tmp_int_5930[temp]), INT(_1[data+0x0]), 2
	lw $26, 0x0($28)
	bltz $26, DIV_371
	srl $27, $26, 1
	j DIV_END_372
DIV_371:
	subu $26, $0, $26
	srl $27, $26, 1
	subu $27, $0, $27
DIV_END_372:
	# GE, INT(tmp_int_5929[temp]), INT(j[sp-0x4c]), INT(tmp_int_5930[temp])
	sw $26, 0x0($28)
	sge $26, $5, $27
	# JUMP AND_END_85
	sw $26, -0xa0($29)
AND_END_85:
	# JUMP OR_END_86
OR_END_86:
	# Branch INT(tmp_int_5929[sp-0xa0]) ? IF_BODY_87 : IF_END_88
	lw $27, -0xa0($29)
	bne $27, $0, IF_BODY_87
	j IF_END_88
IF_BODY_87:
	# JUMP B_89
B_89:
	# JUMP WHILE_END_77
	j WHILE_END_77
	# JUMP B_90
B_90:
	# JUMP IF_END_88
IF_END_88:
	# JUMP B_91
B_91:
	# JUMP WHILE_75
	j WHILE_75
WHILE_END_77:
	# DEF, INT(k[sp-0x54]), 0
	li $5, 0
	# JUMP WHILE_92
WHILE_92:
	# JUMP L_OR_EXP_95
L_OR_EXP_95:
	# JUMP L_AND_EXP_96
L_AND_EXP_96:
	# LE, INT(tmp_int_5931[temp]), 1, 2
	li $26, 1
	# JUMP AND_END_97
	sw $26, -0xa4($29)
AND_END_97:
	# JUMP OR_END_98
OR_END_98:
	# Branch INT(tmp_int_5931[sp-0xa4]) ? WHILE_BODY_93 : WHILE_END_94
	lw $27, -0xa4($29)
	bne $27, $0, WHILE_BODY_93
	j WHILE_END_94
WHILE_BODY_93:
	# JUMP B_99
B_99:
	# MUL, INT(tmp_int_5932[temp]), INT(k[sp-0x54]), 4
	sll $26, $5, 2
	# ADD, INT(tmp_int_5932[temp]), INT(tmp_int_5932[temp]), 0
	addiu $26, $26, 0
	# OFFSET (ARRAY(array[sp-0x84])+INT(tmp_int_5932[temp]))->POINTER(tmp_pointer_2138[temp])
	addiu $3, $29, -132
	addu $27, $3, $26
	# STORE POINTER(tmp_pointer_2138[temp]), 0
	li $3, 0
	sw $3, 0x0($27)
	# JUMP L_OR_EXP_100
	j L_OR_EXP_100
	# JUMP B_116
	j B_116
L_OR_EXP_100:
	# JUMP L_AND_EXP_101
L_AND_EXP_101:
	# EQ, INT(tmp_int_5933[temp]), INT(k[sp-0x54]), 5
	seq $26, $5, 5
	# JUMP AND_END_102
	sw $26, -0xa8($29)
AND_END_102:
	# JUMP OR_END_103
OR_END_103:
	# Branch INT(tmp_int_5933[sp-0xa8]) ? IF_BODY_104 : IF_END_105
	lw $27, -0xa8($29)
	bne $27, $0, IF_BODY_104
	j IF_END_105
IF_BODY_104:
	# JUMP B_106
B_106:
	# ADD, INT(tmp_int_5934[temp]), INT(k[sp-0x54]), 1
	addiu $26, $5, 1
	# ASS, INT(k[sp-0x54]), INT(tmp_int_5934[temp])
	move $5, $26
	# JUMP WHILE_92
	j WHILE_92
	# JUMP B_107
B_107:
	# JUMP IF_END_105
IF_END_105:
	# JUMP L_OR_EXP_108
L_OR_EXP_108:
	# JUMP L_AND_EXP_109
L_AND_EXP_109:
	# GT, INT(tmp_int_5935[temp]), INT(k[sp-0x54]), 10
	sgt $27, $5, 10
	# JUMP AND_END_110
	sw $27, -0xac($29)
AND_END_110:
	# JUMP OR_END_111
OR_END_111:
	# Branch INT(tmp_int_5935[sp-0xac]) ? IF_BODY_112 : IF_END_113
	lw $26, -0xac($29)
	bne $26, $0, IF_BODY_112
	j IF_END_113
IF_BODY_112:
	# JUMP B_114
B_114:
	# JUMP WHILE_END_94
	j WHILE_END_94
	# JUMP B_115
B_115:
	# JUMP IF_END_113
IF_END_113:
	# MUL, INT(tmp_int_5936[temp]), INT(k[sp-0x54]), 4
	sll $27, $5, 2
	# ADD, INT(tmp_int_5936[temp]), INT(tmp_int_5936[temp]), 0
	addiu $27, $27, 0
	# OFFSET (ARRAY(array[sp-0x84])+INT(tmp_int_5936[temp]))->POINTER(tmp_pointer_2139[temp])
	addiu $3, $29, -132
	addu $26, $3, $27
	# STORE POINTER(tmp_pointer_2139[temp]), INT(k[sp-0x54])
	sw $5, 0x0($26)
	# ADD, INT(tmp_int_5937[temp]), INT(k[sp-0x54]), 1
	addiu $27, $5, 1
	# ASS, INT(k[sp-0x54]), INT(tmp_int_5937[temp])
	move $5, $27
	# MUL, INT(tmp_int_5939[temp]), INT(k[sp-0x54]), INT(k[sp-0x54])
	mult $5 $5
	mflo $26
	# ADD, INT(tmp_int_5938[temp]), INT(sum[sp-0x50]), INT(tmp_int_5939[temp])
	addu $27, $6, $26
	# ASS, INT(sum[sp-0x50]), INT(tmp_int_5938[temp])
	move $6, $27
	# ADD, INT(tmp_int_5940[temp]), INT(Main[sp-0x48]), 1
	addiu $26, $12, 1
	# ASS, INT(Main[sp-0x48]), INT(tmp_int_5940[temp])
	move $12, $26
	# JUMP B_116
B_116:
	# JUMP WHILE_92
	j WHILE_92
WHILE_END_94:
	# DEF, INT(temp[sp-0x88]), 0
	li $5, 0
	# JUMP L_OR_EXP_117
L_OR_EXP_117:
	# JUMP L_AND_EXP_118
L_AND_EXP_118:
	# LT, INT(tmp_int_5941[temp]), INT(_1[data+0x0]), 5
	lw $27, 0x0($28)
	li $3, 5
	slt $26, $27, $3
	# JUMP AND_END_119
	sw $26, -0xb0($29)
	sw $27, 0x0($28)
AND_END_119:
	# ASS, INT(tmp_int_5942[temp]), INT(tmp_int_5941[sp-0xb0])
	lw $26, -0xb0($29)
	move $27, $26
	# Branch INT(tmp_int_5942[temp]) ? OR_END_120 : OR_121
	sw $27, -0xb4($29)
	lw $26, -0xb4($29)
	bne $26, $0, OR_END_120
OR_121:
	# JUMP L_AND_EXP_122
L_AND_EXP_122:
	# MUL, INT(tmp_int_5943[temp]), 0, 4
	li $27, 0
	# ADD, INT(tmp_int_5943[temp]), INT(tmp_int_5943[temp]), 0
	addiu $27, $27, 0
	# OFFSET (ARRAY(aaa[data+0x14])+INT(tmp_int_5943[temp]))->POINTER(tmp_pointer_2140[temp])
	addiu $3, $28, 20
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2140[temp]), INT(tmp_int_5944[temp])
	lw $27, 0x0($26)
	# LT, INT(tmp_int_5945[temp]), INT(tmp_int_5944[temp]), 10
	li $3, 10
	slt $26, $27, $3
	# JUMP AND_END_123
	sw $26, -0xb8($29)
AND_END_123:
	# OR, INT(tmp_int_5942[sp-0xb4]), INT(tmp_int_5945[sp-0xb8]), INT(tmp_int_5942[sp-0xb4])
	lw $27, -0xb8($29)
	lw $26, -0xb4($29)
	or $26, $27, $26
	# Branch INT(tmp_int_5942[sp-0xb4]) ? OR_END_120 : OR_124
	sw $26, -0xb4($29)
	lw $27, -0xb4($29)
	bne $27, $0, OR_END_120
OR_124:
	# JUMP OR_END_120
OR_END_120:
	# Branch INT(tmp_int_5942[sp-0xb4]) ? IF_BODY_125 : IF_END_126
	lw $26, -0xb4($29)
	bne $26, $0, IF_BODY_125
	j IF_END_126
IF_BODY_125:
	# JUMP B_127
B_127:
	# ADD, INT(tmp_int_5946[temp]), INT(temp[sp-0x88]), 1
	addiu $27, $5, 1
	# ASS, INT(temp[sp-0x88]), INT(tmp_int_5946[temp])
	move $5, $27
	# JUMP B_128
B_128:
	# JUMP IF_END_126
IF_END_126:
	# JUMP L_OR_EXP_129
L_OR_EXP_129:
	# JUMP L_AND_EXP_130
L_AND_EXP_130:
	# LT, INT(tmp_int_5947[temp]), INT(_2[data+0xc]), 0
	lw $26, 0xc($28)
	li $3, 0
	slt $27, $26, $3
	# ASS, INT(tmp_int_5948[temp]), INT(tmp_int_5947[temp])
	sw $26, 0xc($28)
	move $26, $27
	# Branch INT(tmp_int_5947[temp]) ? AND_132 : AND_END_131
	sw $27, -0xbc($29)
	sw $26, -0xc0($29)
	lw $27, -0xbc($29)
	bne $27, $0, AND_132
	j AND_END_131
AND_132:
	# MUL, INT(tmp_int_5949[temp]), 0, 4
	li $26, 0
	# ADD, INT(tmp_int_5949[temp]), INT(tmp_int_5949[temp]), 0
	addiu $26, $26, 0
	# OFFSET (ARRAY(aaa[data+0x14])+INT(tmp_int_5949[temp]))->POINTER(tmp_pointer_2141[temp])
	addiu $3, $28, 20
	addu $27, $3, $26
	# LOAD POINTER(tmp_pointer_2141[temp]), INT(tmp_int_5950[temp])
	lw $26, 0x0($27)
	# GT, INT(tmp_int_5951[temp]), INT(tmp_int_5950[temp]), 10
	sgt $27, $26, 10
	# AND, INT(tmp_int_5948[sp-0xc0]), INT(tmp_int_5951[temp]), INT(tmp_int_5948[sp-0xc0])
	lw $26, -0xc0($29)
	sne $2, $27, 0
	sne $3, $26, 0
	and $26, $2, $3
	# Branch INT(tmp_int_5948[sp-0xc0]) ? AND_133 : AND_END_131
	sw $26, -0xc0($29)
	lw $27, -0xc0($29)
	bne $27, $0, AND_133
	j AND_END_131
AND_133:
	# JUMP AND_END_131
AND_END_131:
	# JUMP OR_END_134
OR_END_134:
	# Branch INT(tmp_int_5948[sp-0xc0]) ? IF_BODY_135 : IF_END_136
	lw $26, -0xc0($29)
	bne $26, $0, IF_BODY_135
	j IF_END_136
IF_BODY_135:
	# JUMP B_137
B_137:
	# ADD, INT(tmp_int_5952[temp]), INT(temp[sp-0x88]), 2
	addiu $27, $5, 2
	# ASS, INT(temp[sp-0x88]), INT(tmp_int_5952[temp])
	move $5, $27
	# JUMP B_138
B_138:
	# JUMP IF_END_136
IF_END_136:
	# MUL, INT(tmp_int_5953[temp]), 0, 4
	li $26, 0
	# ADD, INT(tmp_int_5953[temp]), INT(tmp_int_5953[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_5954[temp]), 0, 8
	li $27, 0
	# ADD, INT(tmp_int_5954[temp]), INT(tmp_int_5954[temp]), INT(tmp_int_5953[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(dijhw[data+0x6c])+INT(tmp_int_5954[temp]))->POINTER(tmp_pointer_2142[temp])
	addiu $3, $28, 108
	addu $26, $3, $27
	# GETINT POINTER(tmp_pointer_2142[temp])
	li $2, 5
	syscall
	sw $2, 0x0($26)
	# MUL, INT(tmp_int_5955[temp]), 0, 4
	li $27, 0
	# ADD, INT(tmp_int_5955[temp]), INT(tmp_int_5955[temp]), 0
	addiu $27, $27, 0
	# MUL, INT(tmp_int_5956[temp]), 1, 8
	li $26, 8
	# ADD, INT(tmp_int_5956[temp]), INT(tmp_int_5956[temp]), INT(tmp_int_5955[temp])
	addu $26, $26, $27
	# OFFSET (ARRAY(dijhw[data+0x6c])+INT(tmp_int_5956[temp]))->POINTER(tmp_pointer_2143[temp])
	addiu $3, $28, 108
	addu $27, $3, $26
	# GETINT POINTER(tmp_pointer_2143[temp])
	li $2, 5
	syscall
	sw $2, 0x0($27)
	# MUL, INT(tmp_int_5957[temp]), 0, 4
	li $26, 0
	# ADD, INT(tmp_int_5957[temp]), INT(tmp_int_5957[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_5958[temp]), 2, 8
	li $27, 16
	# ADD, INT(tmp_int_5958[temp]), INT(tmp_int_5958[temp]), INT(tmp_int_5957[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(dijhw[data+0x6c])+INT(tmp_int_5958[temp]))->POINTER(tmp_pointer_2144[temp])
	addiu $3, $28, 108
	addu $26, $3, $27
	# GETINT POINTER(tmp_pointer_2144[temp])
	li $2, 5
	syscall
	sw $2, 0x0($26)
	# MUL, INT(tmp_int_5959[temp]), 0, 4
	li $27, 0
	# ADD, INT(tmp_int_5959[temp]), INT(tmp_int_5959[temp]), 0
	addiu $27, $27, 0
	# OFFSET (ARRAY(cdwuh[data+0x84])+INT(tmp_int_5959[temp]))->POINTER(tmp_pointer_2145[temp])
	addiu $3, $28, 132
	addu $26, $3, $27
	# GETINT POINTER(tmp_pointer_2145[temp])
	li $2, 5
	syscall
	sw $2, 0x0($26)
	# MUL, INT(tmp_int_5960[temp]), 1, 4
	li $27, 4
	# ADD, INT(tmp_int_5960[temp]), INT(tmp_int_5960[temp]), 0
	addiu $27, $27, 0
	# OFFSET (ARRAY(cdwuh[data+0x84])+INT(tmp_int_5960[temp]))->POINTER(tmp_pointer_2146[temp])
	addiu $3, $28, 132
	addu $26, $3, $27
	# GETINT POINTER(tmp_pointer_2146[temp])
	li $2, 5
	syscall
	sw $2, 0x0($26)
	# GETINT INT(wuei[data+0x8c])
	li $2, 5
	syscall
	move $27, $2
	# MUL, INT(tmp_int_5962[temp]), 0, 4
	li $26, 0
	# ADD, INT(tmp_int_5962[temp]), INT(tmp_int_5962[temp]), 0
	addiu $26, $26, 0
	# OFFSET (ARRAY(cdwuh[data+0x84])+INT(tmp_int_5962[temp]))->POINTER(tmp_pointer_2147[temp])
	addiu $3, $28, 132
	sw $27, 0x8c($28)
	addu $27, $3, $26
	# LOAD POINTER(tmp_pointer_2147[temp]), INT(tmp_int_5963[temp])
	lw $26, 0x0($27)
	# MUL, INT(tmp_int_5965[temp]), 1, 4
	li $27, 4
	# ADD, INT(tmp_int_5965[temp]), INT(tmp_int_5965[temp]), 0
	addiu $27, $27, 0
	# OFFSET (ARRAY(cdwuh[data+0x84])+INT(tmp_int_5965[temp]))->POINTER(tmp_pointer_2148[temp])
	addiu $3, $28, 132
	sw $26, -0xc4($29)
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2148[temp]), INT(tmp_int_5966[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_5964[temp]), INT(tmp_int_5963[sp-0xc4]), INT(tmp_int_5966[temp])
	lw $26, -0xc4($29)
	sw $26, -0xc4($29)
	mult $26 $27
	mflo $26
	# ADD, INT(tmp_int_5961[temp]), INT(wuei[data+0x8c]), INT(tmp_int_5964[temp])
	lw $27, 0x8c($28)
	sw $26, -0xc8($29)
	addu $26, $27, $26
	# MUL, INT(tmp_int_5968[temp]), 1, 4
	sw $27, 0x8c($28)
	li $27, 4
	# ADD, INT(tmp_int_5968[temp]), INT(tmp_int_5968[temp]), 0
	addiu $27, $27, 0
	# MUL, INT(tmp_int_5969[temp]), 0, 8
	sw $26, -0xcc($29)
	li $26, 0
	# ADD, INT(tmp_int_5969[temp]), INT(tmp_int_5969[temp]), INT(tmp_int_5968[temp])
	addu $26, $26, $27
	# OFFSET (ARRAY(dijhw[data+0x6c])+INT(tmp_int_5969[temp]))->POINTER(tmp_pointer_2149[temp])
	addiu $3, $28, 108
	addu $27, $3, $26
	# LOAD POINTER(tmp_pointer_2149[temp]), INT(tmp_int_5970[temp])
	lw $26, 0x0($27)
	# MUL, INT(tmp_int_5972[temp]), 2, 1
	li $27, 2
	# DIV, INT(tmp_int_5971[temp]), INT(tmp_int_5970[temp]), INT(tmp_int_5972[temp])
	sw $26, -0xd0($29)
	div $26 $27
	mflo $26
	# ADD, INT(tmp_int_5967[temp]), INT(tmp_int_5961[sp-0xcc]), INT(tmp_int_5971[temp])
	lw $27, -0xcc($29)
	sw $26, -0xd4($29)
	addu $26, $27, $26
	# ASS, INT(wuei[data+0x8c]), INT(tmp_int_5967[temp])
	move $27, $26
	# MUL, INT(tmp_int_5973[temp]), 1, 4
	li $26, 4
	# ADD, INT(tmp_int_5973[temp]), INT(tmp_int_5973[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_5974[temp]), 2, 8
	sw $27, 0x8c($28)
	li $27, 16
	# ADD, INT(tmp_int_5974[temp]), INT(tmp_int_5974[temp]), INT(tmp_int_5973[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(dijhw[data+0x6c])+INT(tmp_int_5974[temp]))->POINTER(tmp_pointer_2150[temp])
	addiu $3, $28, 108
	addu $26, $3, $27
	# MUL, INT(tmp_int_5975[temp]), 0, 4
	li $27, 0
	# ADD, INT(tmp_int_5975[temp]), INT(tmp_int_5975[temp]), 0
	addiu $27, $27, 0
	# MUL, INT(tmp_int_5976[temp]), 2, 8
	sw $26, -0xd8($29)
	li $26, 16
	# ADD, INT(tmp_int_5976[temp]), INT(tmp_int_5976[temp]), INT(tmp_int_5975[temp])
	addu $26, $26, $27
	# OFFSET (ARRAY(dijhw[data+0x6c])+INT(tmp_int_5976[temp]))->POINTER(tmp_pointer_2151[temp])
	addiu $3, $28, 108
	addu $27, $3, $26
	# LOAD POINTER(tmp_pointer_2151[temp]), INT(tmp_int_5977[temp])
	lw $26, 0x0($27)
	# MUL, INT(tmp_int_5979[temp]), 0, 4
	li $27, 0
	# ADD, INT(tmp_int_5979[temp]), INT(tmp_int_5979[temp]), 0
	addiu $27, $27, 0
	# MUL, INT(tmp_int_5980[temp]), 1, 8
	sw $26, -0xdc($29)
	li $26, 8
	# ADD, INT(tmp_int_5980[temp]), INT(tmp_int_5980[temp]), INT(tmp_int_5979[temp])
	addu $26, $26, $27
	# OFFSET (ARRAY(dijhw[data+0x6c])+INT(tmp_int_5980[temp]))->POINTER(tmp_pointer_2152[temp])
	addiu $3, $28, 108
	addu $27, $3, $26
	# LOAD POINTER(tmp_pointer_2152[temp]), INT(tmp_int_5981[temp])
	lw $26, 0x0($27)
	# MUL, INT(tmp_int_5978[temp]), INT(tmp_int_5977[sp-0xdc]), INT(tmp_int_5981[temp])
	lw $27, -0xdc($29)
	sw $26, -0xe0($29)
	mult $27 $26
	mflo $26
	# STORE POINTER(tmp_pointer_2150[sp-0xd8]), INT(tmp_int_5978[temp])
	lw $27, -0xd8($29)
	sw $26, 0x0($27)
	# MUL, INT(tmp_int_5982[temp]), INT(sum[sp-0x50]), INT(sum[sp-0x50])
	mult $6 $6
	mflo $27
	# Call FUNC__add; Params: INT(aaaaa[sp-0x38]), INT(bbbbb[sp-0x3c]), 3; RET INT(tmp_int_5984[temp])
	sw $31, 0x0($29)
	addiu $4, $29, -232
	sw $11, -0x4($4)
	sw $10, -0x8($4)
	li $3, 3
	sw $3, -0xc($4)
	sw $27, -0xe4($29)
	sw $5, -0x88($29)
	sw $6, -0x50($29)
	sw $15, -0x40($29)
	sw $14, -0x4($29)
	sw $12, -0x48($29)
	sw $9, -0x44($29)
	sw $8, -0x14($29)
	move $29, $4
	jal FUNC__add
	addiu $29, $29, 232
	lw $31, 0x0($29)
	move $26, $2
	lw $5, -0x88($29)
	lw $6, -0x50($29)
	lw $9, -0x44($29)
	lw $15, -0x40($29)
	lw $14, -0x4($29)
	lw $8, -0x14($29)
	lw $12, -0x48($29)
	# ADD, INT(tmp_int_5983[temp]), INT(tmp_int_5982[sp-0xe4]), INT(tmp_int_5984[temp])
	lw $27, -0xe4($29)
	sw $26, -0xe8($29)
	addu $26, $27, $26
	# ASS, INT(jdfo_[data+0xa0]), INT(tmp_int_5983[temp])
	move $27, $26
	# PRINT_STR STR_9
	li $2, 4
	la $4, STR_9
	syscall
	# Call FUNC__get_id; Params: ; RET INT(tmp_int_5986[temp])
	sw $31, 0x0($29)
	addiu $4, $29, -236
	sw $27, 0xa0($28)
	sw $5, -0x88($29)
	sw $6, -0x50($29)
	sw $15, -0x40($29)
	sw $14, -0x4($29)
	sw $12, -0x48($29)
	sw $9, -0x44($29)
	sw $8, -0x14($29)
	move $29, $4
	jal FUNC__get_id
	addiu $29, $29, 236
	lw $31, 0x0($29)
	move $26, $2
	lw $5, -0x88($29)
	lw $6, -0x50($29)
	lw $9, -0x44($29)
	lw $15, -0x40($29)
	lw $14, -0x4($29)
	lw $8, -0x14($29)
	lw $12, -0x48($29)
	# ADD, INT(tmp_int_5985[temp]), INT(sum[sp-0x50]), INT(tmp_int_5986[temp])
	addu $27, $6, $26
	# Call FUNC__add_fake; Params: 123243, INT(___2_0_3_7_3_3_8_1___X___J___h_____[sp-0x4]); RET INT(tmp_int_5988[temp])
	sw $31, 0x0($29)
	addiu $4, $29, -240
	li $3, 123243
	sw $3, -0x4($4)
	sw $14, -0x8($4)
	sw $27, -0xec($29)
	sw $5, -0x88($29)
	sw $15, -0x40($29)
	sw $12, -0x48($29)
	sw $9, -0x44($29)
	sw $8, -0x14($29)
	move $29, $4
	jal FUNC__add_fake
	addiu $29, $29, 240
	lw $31, 0x0($29)
	move $26, $2
	lw $5, -0x88($29)
	lw $9, -0x44($29)
	lw $15, -0x40($29)
	lw $8, -0x14($29)
	lw $12, -0x48($29)
	# ADD, INT(tmp_int_5987[temp]), INT(tmp_int_5985[sp-0xec]), INT(tmp_int_5988[temp])
	lw $27, -0xec($29)
	sw $26, -0xf0($29)
	addu $26, $27, $26
	# ASS, INT(sum[sp-0x50]), INT(tmp_int_5987[temp])
	move $6, $26
	# Call FUNC____; Params: 
	sw $31, 0x0($29)
	addiu $4, $29, -244
	sw $5, -0x88($29)
	sw $6, -0x50($29)
	sw $15, -0x40($29)
	sw $12, -0x48($29)
	sw $9, -0x44($29)
	sw $8, -0x14($29)
	move $29, $4
	jal FUNC____
	addiu $29, $29, 244
	lw $31, 0x0($29)
	lw $5, -0x88($29)
	lw $6, -0x50($29)
	lw $9, -0x44($29)
	lw $15, -0x40($29)
	lw $8, -0x14($29)
	lw $12, -0x48($29)
	# OFFSET (ARRAY(_3u22[data+0x90])+0)->POINTER(tmp_pointer_2153[temp])
	addiu $27, $28, 144
	# Call FUNC__Main; Params: POINTER(tmp_pointer_2153[temp])
	sw $31, 0x0($29)
	addiu $4, $29, -248
	sw $27, -0x4($4)
	sw $5, -0x88($29)
	sw $6, -0x50($29)
	sw $15, -0x40($29)
	sw $12, -0x48($29)
	sw $9, -0x44($29)
	sw $8, -0x14($29)
	move $29, $4
	jal FUNC__Main
	addiu $29, $29, 248
	lw $31, 0x0($29)
	lw $5, -0x88($29)
	lw $6, -0x50($29)
	lw $9, -0x44($29)
	lw $15, -0x40($29)
	lw $8, -0x14($29)
	lw $12, -0x48($29)
	# OFFSET (ARRAY(_23879[data+0x5c])+0)->POINTER(tmp_pointer_2154[temp])
	addiu $26, $28, 92
	# Call FUNC___; Params: POINTER(tmp_pointer_2154[temp]), 3432
	sw $31, 0x0($29)
	addiu $4, $29, -248
	sw $26, -0x4($4)
	li $3, 3432
	sw $3, -0x8($4)
	sw $5, -0x88($29)
	sw $6, -0x50($29)
	sw $15, -0x40($29)
	sw $12, -0x48($29)
	sw $9, -0x44($29)
	sw $8, -0x14($29)
	move $29, $4
	jal FUNC___
	addiu $29, $29, 248
	lw $31, 0x0($29)
	lw $5, -0x88($29)
	lw $6, -0x50($29)
	lw $9, -0x44($29)
	lw $15, -0x40($29)
	lw $8, -0x14($29)
	lw $12, -0x48($29)
	# PRINT_STR STR_10
	li $2, 4
	la $4, STR_10
	syscall
	# PRINT_INT INT(temp[sp-0x88])
	li $2, 1
	move $4, $5
	syscall
	# PRINT_STR STR_3
	li $2, 4
	la $4, STR_3
	syscall
	# MUL, INT(tmp_int_5989[temp]), 2, 4
	li $27, 8
	# ADD, INT(tmp_int_5989[temp]), INT(tmp_int_5989[temp]), 0
	addiu $27, $27, 0
	# MUL, INT(tmp_int_5990[temp]), 0, 16
	li $26, 0
	# ADD, INT(tmp_int_5990[temp]), INT(tmp_int_5990[temp]), INT(tmp_int_5989[temp])
	addu $26, $26, $27
	# OFFSET (ARRAY(__array[sp-0x34])+INT(tmp_int_5990[temp]))->POINTER(tmp_pointer_2155[temp])
	addiu $3, $29, -52
	addu $27, $3, $26
	# LOAD POINTER(tmp_pointer_2155[temp]), INT(tmp_int_5991[temp])
	lw $26, 0x0($27)
	# MUL, INT(tmp_int_5992[temp]), 0, 8
	li $27, 0
	# ADD, INT(tmp_int_5992[temp]), INT(tmp_int_5992[temp]), 0
	addiu $27, $27, 0
	# OFFSET (ARRAY(_3u22[data+0x90])+INT(tmp_int_5992[temp]))->POINTER(tmp_pointer_2156[temp])
	addiu $3, $28, 144
	sw $26, -0xf4($29)
	addu $26, $3, $27
	# Call FUNC___my_Ha_s__h; Params: POINTER(tmp_pointer_2156[temp]), 2; RET INT(tmp_int_5993[temp])
	sw $31, 0x0($29)
	addiu $4, $29, -252
	sw $26, -0x4($4)
	li $3, 2
	sw $3, -0x8($4)
	sw $6, -0x50($29)
	sw $15, -0x40($29)
	sw $12, -0x48($29)
	sw $9, -0x44($29)
	sw $8, -0x14($29)
	move $29, $4
	jal FUNC___my_Ha_s__h
	addiu $29, $29, 252
	lw $31, 0x0($29)
	move $27, $2
	lw $6, -0x50($29)
	lw $9, -0x44($29)
	lw $15, -0x40($29)
	lw $8, -0x14($29)
	lw $12, -0x48($29)
	# OFFSET (ARRAY(cdwuh[data+0x84])+0)->POINTER(tmp_pointer_2157[temp])
	addiu $26, $28, 132
	# Call FUNC___my_Ha_s__h; Params: POINTER(tmp_pointer_2157[temp]), 2; RET INT(tmp_int_5994[temp])
	sw $31, 0x0($29)
	addiu $4, $29, -256
	sw $26, -0x4($4)
	li $3, 2
	sw $3, -0x8($4)
	sw $27, -0xf8($29)
	sw $6, -0x50($29)
	sw $15, -0x40($29)
	sw $12, -0x48($29)
	sw $9, -0x44($29)
	sw $8, -0x14($29)
	move $29, $4
	jal FUNC___my_Ha_s__h
	addiu $29, $29, 256
	lw $31, 0x0($29)
	move $26, $2
	lw $6, -0x50($29)
	lw $9, -0x44($29)
	lw $15, -0x40($29)
	lw $8, -0x14($29)
	lw $12, -0x48($29)
	# Call FUNC__M__a_G_I___c; Params: INT(tmp_int_5994[temp]); RET INT(tmp_int_5995[temp])
	sw $31, 0x0($29)
	addiu $4, $29, -256
	sw $26, -0x4($4)
	sw $6, -0x50($29)
	sw $15, -0x40($29)
	sw $12, -0x48($29)
	sw $9, -0x44($29)
	sw $8, -0x14($29)
	move $29, $4
	jal FUNC__M__a_G_I___c
	addiu $29, $29, 256
	lw $31, 0x0($29)
	move $27, $2
	lw $6, -0x50($29)
	lw $9, -0x44($29)
	lw $15, -0x40($29)
	lw $8, -0x14($29)
	lw $12, -0x48($29)
	# MUL, INT(tmp_int_5996[temp]), 1, 4
	li $26, 4
	# ADD, INT(tmp_int_5996[temp]), INT(tmp_int_5996[temp]), 0
	addiu $26, $26, 0
	# OFFSET (ARRAY(cdwuh[data+0x84])+INT(tmp_int_5996[temp]))->POINTER(tmp_pointer_2158[temp])
	addiu $3, $28, 132
	sw $27, -0xfc($29)
	addu $27, $3, $26
	# LOAD POINTER(tmp_pointer_2158[temp]), INT(tmp_int_5997[temp])
	lw $26, 0x0($27)
	# MUL, INT(tmp_int_5998[temp]), 0, 4
	li $27, 0
	# ADD, INT(tmp_int_5998[temp]), INT(tmp_int_5998[temp]), 0
	addiu $27, $27, 0
	# OFFSET (ARRAY(cdwuh[data+0x84])+INT(tmp_int_5998[temp]))->POINTER(tmp_pointer_2159[temp])
	addiu $3, $28, 132
	sw $26, -0x100($29)
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2159[temp]), INT(tmp_int_5999[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_6000[temp]), 1, 4
	li $26, 4
	# ADD, INT(tmp_int_6000[temp]), INT(tmp_int_6000[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_6001[temp]), 2, 8
	sw $27, -0x104($29)
	li $27, 16
	# ADD, INT(tmp_int_6001[temp]), INT(tmp_int_6001[temp]), INT(tmp_int_6000[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(dijhw[data+0x6c])+INT(tmp_int_6001[temp]))->POINTER(tmp_pointer_2160[temp])
	addiu $3, $28, 108
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2160[temp]), INT(tmp_int_6002[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_6003[temp]), 0, 4
	li $26, 0
	# ADD, INT(tmp_int_6003[temp]), INT(tmp_int_6003[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_6004[temp]), 2, 8
	sw $27, -0x108($29)
	li $27, 16
	# ADD, INT(tmp_int_6004[temp]), INT(tmp_int_6004[temp]), INT(tmp_int_6003[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(dijhw[data+0x6c])+INT(tmp_int_6004[temp]))->POINTER(tmp_pointer_2161[temp])
	addiu $3, $28, 108
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2161[temp]), INT(tmp_int_6005[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_6006[temp]), 1, 4
	li $26, 4
	# ADD, INT(tmp_int_6006[temp]), INT(tmp_int_6006[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_6007[temp]), 1, 8
	sw $27, -0x10c($29)
	li $27, 8
	# ADD, INT(tmp_int_6007[temp]), INT(tmp_int_6007[temp]), INT(tmp_int_6006[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(dijhw[data+0x6c])+INT(tmp_int_6007[temp]))->POINTER(tmp_pointer_2162[temp])
	addiu $3, $28, 108
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2162[temp]), INT(tmp_int_6008[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_6009[temp]), 0, 4
	li $26, 0
	# ADD, INT(tmp_int_6009[temp]), INT(tmp_int_6009[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_6010[temp]), 1, 8
	sw $27, -0x110($29)
	li $27, 8
	# ADD, INT(tmp_int_6010[temp]), INT(tmp_int_6010[temp]), INT(tmp_int_6009[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(dijhw[data+0x6c])+INT(tmp_int_6010[temp]))->POINTER(tmp_pointer_2163[temp])
	addiu $3, $28, 108
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2163[temp]), INT(tmp_int_6011[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_6012[temp]), 1, 4
	li $26, 4
	# ADD, INT(tmp_int_6012[temp]), INT(tmp_int_6012[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_6013[temp]), 0, 8
	sw $27, -0x114($29)
	li $27, 0
	# ADD, INT(tmp_int_6013[temp]), INT(tmp_int_6013[temp]), INT(tmp_int_6012[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(dijhw[data+0x6c])+INT(tmp_int_6013[temp]))->POINTER(tmp_pointer_2164[temp])
	addiu $3, $28, 108
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2164[temp]), INT(tmp_int_6014[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_6015[temp]), 0, 4
	li $26, 0
	# ADD, INT(tmp_int_6015[temp]), INT(tmp_int_6015[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_6016[temp]), 0, 8
	sw $27, -0x118($29)
	li $27, 0
	# ADD, INT(tmp_int_6016[temp]), INT(tmp_int_6016[temp]), INT(tmp_int_6015[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(dijhw[data+0x6c])+INT(tmp_int_6016[temp]))->POINTER(tmp_pointer_2165[temp])
	addiu $3, $28, 108
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2165[temp]), INT(tmp_int_6017[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_6018[temp]), 2, 4
	li $26, 8
	# ADD, INT(tmp_int_6018[temp]), INT(tmp_int_6018[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_6019[temp]), 3, 12
	sw $27, -0x11c($29)
	li $27, 36
	# ADD, INT(tmp_int_6019[temp]), INT(tmp_int_6019[temp]), INT(tmp_int_6018[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(A[data+0x1c])+INT(tmp_int_6019[temp]))->POINTER(tmp_pointer_2166[temp])
	addiu $3, $28, 28
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2166[temp]), INT(tmp_int_6020[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_6021[temp]), 1, 4
	li $26, 4
	# ADD, INT(tmp_int_6021[temp]), INT(tmp_int_6021[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_6022[temp]), 3, 12
	sw $27, -0x120($29)
	li $27, 36
	# ADD, INT(tmp_int_6022[temp]), INT(tmp_int_6022[temp]), INT(tmp_int_6021[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(A[data+0x1c])+INT(tmp_int_6022[temp]))->POINTER(tmp_pointer_2167[temp])
	addiu $3, $28, 28
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2167[temp]), INT(tmp_int_6023[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_6024[temp]), 0, 4
	li $26, 0
	# ADD, INT(tmp_int_6024[temp]), INT(tmp_int_6024[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_6025[temp]), 3, 12
	sw $27, -0x124($29)
	li $27, 36
	# ADD, INT(tmp_int_6025[temp]), INT(tmp_int_6025[temp]), INT(tmp_int_6024[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(A[data+0x1c])+INT(tmp_int_6025[temp]))->POINTER(tmp_pointer_2168[temp])
	addiu $3, $28, 28
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2168[temp]), INT(tmp_int_6026[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_6027[temp]), 2, 4
	li $26, 8
	# ADD, INT(tmp_int_6027[temp]), INT(tmp_int_6027[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_6028[temp]), 2, 12
	sw $27, -0x128($29)
	li $27, 24
	# ADD, INT(tmp_int_6028[temp]), INT(tmp_int_6028[temp]), INT(tmp_int_6027[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(A[data+0x1c])+INT(tmp_int_6028[temp]))->POINTER(tmp_pointer_2169[temp])
	addiu $3, $28, 28
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2169[temp]), INT(tmp_int_6029[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_6030[temp]), 1, 4
	li $26, 4
	# ADD, INT(tmp_int_6030[temp]), INT(tmp_int_6030[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_6031[temp]), 2, 12
	sw $27, -0x12c($29)
	li $27, 24
	# ADD, INT(tmp_int_6031[temp]), INT(tmp_int_6031[temp]), INT(tmp_int_6030[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(A[data+0x1c])+INT(tmp_int_6031[temp]))->POINTER(tmp_pointer_2170[temp])
	addiu $3, $28, 28
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2170[temp]), INT(tmp_int_6032[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_6033[temp]), 0, 4
	li $26, 0
	# ADD, INT(tmp_int_6033[temp]), INT(tmp_int_6033[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_6034[temp]), 2, 12
	sw $27, -0x130($29)
	li $27, 24
	# ADD, INT(tmp_int_6034[temp]), INT(tmp_int_6034[temp]), INT(tmp_int_6033[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(A[data+0x1c])+INT(tmp_int_6034[temp]))->POINTER(tmp_pointer_2171[temp])
	addiu $3, $28, 28
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2171[temp]), INT(tmp_int_6035[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_6036[temp]), 2, 4
	li $26, 8
	# ADD, INT(tmp_int_6036[temp]), INT(tmp_int_6036[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_6037[temp]), 1, 12
	sw $27, -0x134($29)
	li $27, 12
	# ADD, INT(tmp_int_6037[temp]), INT(tmp_int_6037[temp]), INT(tmp_int_6036[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(A[data+0x1c])+INT(tmp_int_6037[temp]))->POINTER(tmp_pointer_2172[temp])
	addiu $3, $28, 28
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2172[temp]), INT(tmp_int_6038[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_6039[temp]), 1, 4
	li $26, 4
	# ADD, INT(tmp_int_6039[temp]), INT(tmp_int_6039[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_6040[temp]), 1, 12
	sw $27, -0x138($29)
	li $27, 12
	# ADD, INT(tmp_int_6040[temp]), INT(tmp_int_6040[temp]), INT(tmp_int_6039[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(A[data+0x1c])+INT(tmp_int_6040[temp]))->POINTER(tmp_pointer_2173[temp])
	addiu $3, $28, 28
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2173[temp]), INT(tmp_int_6041[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_6042[temp]), 0, 4
	li $26, 0
	# ADD, INT(tmp_int_6042[temp]), INT(tmp_int_6042[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_6043[temp]), 1, 12
	sw $27, -0x13c($29)
	li $27, 12
	# ADD, INT(tmp_int_6043[temp]), INT(tmp_int_6043[temp]), INT(tmp_int_6042[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(A[data+0x1c])+INT(tmp_int_6043[temp]))->POINTER(tmp_pointer_2174[temp])
	addiu $3, $28, 28
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2174[temp]), INT(tmp_int_6044[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_6045[temp]), 2, 4
	li $26, 8
	# ADD, INT(tmp_int_6045[temp]), INT(tmp_int_6045[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_6046[temp]), 0, 12
	sw $27, -0x140($29)
	li $27, 0
	# ADD, INT(tmp_int_6046[temp]), INT(tmp_int_6046[temp]), INT(tmp_int_6045[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(A[data+0x1c])+INT(tmp_int_6046[temp]))->POINTER(tmp_pointer_2175[temp])
	addiu $3, $28, 28
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2175[temp]), INT(tmp_int_6047[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_6048[temp]), 1, 4
	li $26, 4
	# ADD, INT(tmp_int_6048[temp]), INT(tmp_int_6048[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_6049[temp]), 0, 12
	sw $27, -0x144($29)
	li $27, 0
	# ADD, INT(tmp_int_6049[temp]), INT(tmp_int_6049[temp]), INT(tmp_int_6048[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(A[data+0x1c])+INT(tmp_int_6049[temp]))->POINTER(tmp_pointer_2176[temp])
	addiu $3, $28, 28
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2176[temp]), INT(tmp_int_6050[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_6051[temp]), 0, 4
	li $26, 0
	# ADD, INT(tmp_int_6051[temp]), INT(tmp_int_6051[temp]), 0
	addiu $26, $26, 0
	# MUL, INT(tmp_int_6052[temp]), 0, 12
	sw $27, -0x148($29)
	li $27, 0
	# ADD, INT(tmp_int_6052[temp]), INT(tmp_int_6052[temp]), INT(tmp_int_6051[temp])
	addu $27, $27, $26
	# OFFSET (ARRAY(A[data+0x1c])+INT(tmp_int_6052[temp]))->POINTER(tmp_pointer_2177[temp])
	addiu $3, $28, 28
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2177[temp]), INT(tmp_int_6053[temp])
	lw $27, 0x0($26)
	# MUL, INT(tmp_int_6054[temp]), 1, 4
	li $26, 4
	# ADD, INT(tmp_int_6054[temp]), INT(tmp_int_6054[temp]), 0
	addiu $26, $26, 0
	# OFFSET (ARRAY(aaa[data+0x14])+INT(tmp_int_6054[temp]))->POINTER(tmp_pointer_2178[temp])
	addiu $3, $28, 20
	sw $27, -0x14c($29)
	addu $27, $3, $26
	# LOAD POINTER(tmp_pointer_2178[temp]), INT(tmp_int_6055[temp])
	lw $26, 0x0($27)
	# MUL, INT(tmp_int_6056[temp]), 0, 4
	li $27, 0
	# ADD, INT(tmp_int_6056[temp]), INT(tmp_int_6056[temp]), 0
	addiu $27, $27, 0
	# OFFSET (ARRAY(aaa[data+0x14])+INT(tmp_int_6056[temp]))->POINTER(tmp_pointer_2179[temp])
	addiu $3, $28, 20
	sw $26, -0x150($29)
	addu $26, $3, $27
	# LOAD POINTER(tmp_pointer_2179[temp]), INT(tmp_int_6057[temp])
	lw $27, 0x0($26)
	# OFFSET (ARRAY(array[sp-0x84])+0)->POINTER(tmp_pointer_2180[temp])
	addiu $26, $29, -132
	# Call FUNC___my_Ha_s__h; Params: POINTER(tmp_pointer_2180[temp]), 12; RET INT(tmp_int_6058[temp])
	sw $31, 0x0($29)
	addiu $4, $29, -348
	sw $26, -0x4($4)
	li $3, 12
	sw $3, -0x8($4)
	sw $27, -0x154($29)
	sw $6, -0x50($29)
	sw $15, -0x40($29)
	sw $12, -0x48($29)
	sw $9, -0x44($29)
	sw $8, -0x14($29)
	move $29, $4
	jal FUNC___my_Ha_s__h
	addiu $29, $29, 348
	lw $31, 0x0($29)
	move $26, $2
	lw $6, -0x50($29)
	lw $9, -0x44($29)
	lw $15, -0x40($29)
	lw $8, -0x14($29)
	lw $12, -0x48($29)
	# PRINT_INT INT(tmp_int_6058[temp])
	li $2, 1
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(sum[sp-0x50])
	li $2, 1
	move $4, $6
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT 1
	li $2, 1
	li $4, 1
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(_3[data+0x4])
	li $2, 1
	lw $27, 0x4($28)
	move $4, $27
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(_2[data+0xc])
	li $2, 1
	lw $26, 0xc($28)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(_10[data+0x10])
	li $2, 1
	sw $26, 0xc($28)
	lw $26, 0x10($28)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_6057[sp-0x154])
	li $2, 1
	sw $26, 0x10($28)
	lw $26, -0x154($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_6055[sp-0x150])
	li $2, 1
	lw $26, -0x150($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_6053[sp-0x14c])
	li $2, 1
	lw $26, -0x14c($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_6050[sp-0x148])
	li $2, 1
	lw $26, -0x148($29)
	move $4, $26
	syscall
	# PRINT_STR STR_3
	li $2, 4
	la $4, STR_3
	syscall
	# PRINT_INT INT(tmp_int_6047[sp-0x144])
	li $2, 1
	lw $26, -0x144($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_6044[sp-0x140])
	li $2, 1
	lw $26, -0x140($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_6041[sp-0x13c])
	li $2, 1
	lw $26, -0x13c($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_6038[sp-0x138])
	li $2, 1
	lw $26, -0x138($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_6035[sp-0x134])
	li $2, 1
	lw $26, -0x134($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_6032[sp-0x130])
	li $2, 1
	lw $26, -0x130($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_6029[sp-0x12c])
	li $2, 1
	lw $26, -0x12c($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_6026[sp-0x128])
	li $2, 1
	lw $26, -0x128($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_6023[sp-0x124])
	li $2, 1
	lw $26, -0x124($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_6020[sp-0x120])
	li $2, 1
	lw $26, -0x120($29)
	move $4, $26
	syscall
	# PRINT_STR STR_3
	li $2, 4
	la $4, STR_3
	syscall
	# PRINT_INT INT(_3cg[data+0x4c])
	li $2, 1
	lw $26, 0x4c($28)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(hdc33ec_dyu[data+0x50])
	li $2, 1
	sw $26, 0x4c($28)
	lw $26, 0x50($28)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(cdh3yi_23[data+0x54])
	li $2, 1
	sw $26, 0x50($28)
	lw $26, 0x54($28)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(duhih2_23c[data+0x58])
	li $2, 1
	sw $26, 0x54($28)
	lw $26, 0x58($28)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_6017[sp-0x11c])
	li $2, 1
	sw $26, 0x58($28)
	lw $26, -0x11c($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_6014[sp-0x118])
	li $2, 1
	lw $26, -0x118($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_6011[sp-0x114])
	li $2, 1
	lw $26, -0x114($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_6008[sp-0x110])
	li $2, 1
	lw $26, -0x110($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_6005[sp-0x10c])
	li $2, 1
	lw $26, -0x10c($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_6002[sp-0x108])
	li $2, 1
	lw $26, -0x108($29)
	move $4, $26
	syscall
	# PRINT_STR STR_3
	li $2, 4
	la $4, STR_3
	syscall
	# PRINT_INT INT(tmp_int_5999[sp-0x104])
	li $2, 1
	lw $26, -0x104($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_5997[sp-0x100])
	li $2, 1
	lw $26, -0x100($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(wuei[data+0x8c])
	li $2, 1
	lw $26, 0x8c($28)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(jdfo_[data+0xa0])
	li $2, 1
	sw $26, 0x8c($28)
	lw $26, 0xa0($28)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_5995[sp-0xfc])
	li $2, 1
	sw $26, 0xa0($28)
	lw $26, -0xfc($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_5993[sp-0xf8])
	li $2, 1
	lw $26, -0xf8($29)
	move $4, $26
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(_main[sp-0x44])
	li $2, 1
	move $4, $9
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(_0[sp-0x40])
	li $2, 1
	move $4, $15
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(a10086__[sp-0x14])
	li $2, 1
	move $4, $8
	syscall
	# PRINT_STR STR_11
	li $2, 4
	la $4, STR_11
	syscall
	# PRINT_INT INT(tmp_int_5991[sp-0xf4])
	li $2, 1
	lw $26, -0xf4($29)
	move $4, $26
	syscall
	# PRINT_STR STR_3
	li $2, 4
	la $4, STR_3
	syscall
	# Call FUNC_____; Params: INT(Main[sp-0x48])
	sw $31, 0x0($29)
	addiu $4, $29, -344
	sw $12, -0x4($4)
	sw $27, 0x4($28)
	move $29, $4
	jal FUNC_____
	addiu $29, $29, 344
	lw $31, 0x0($29)
	# RETURN 0
	li $2, 10
	syscall
	
