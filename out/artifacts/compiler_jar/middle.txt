###### GLOBAL STRING ######
STR_1 : , 
STR_2 : \n

###### GLOBAL ARRAY ######
[0x4]array a: 0 1 2 3 4 5 6 7 8 9

###### GLOBAL VAR ######
[0x0]N: 10

###### TEXT ######
JUMP FUNC_main
# func fib : stack size 0x4
# param: INT(i[sp-0x4])
FUNC_fib:
	JUMP L_OR_EXP_0
L_OR_EXP_0:
	JUMP L_AND_EXP_1
L_AND_EXP_1:
	EQ, INT(ti_0[temp]), INT(i[sp-0x4]), 1
	JUMP AND_END_2
AND_END_2:
	JUMP OR_END_3
OR_END_3:
	Branch INT(ti_0[temp]) ? IF_BODY_4 : IF_END_5
IF_BODY_4:
	JUMP B_6
B_6:
	RETURN 1
	JUMP B_7
B_7:
	JUMP IF_END_5
IF_END_5:
	JUMP L_OR_EXP_8
L_OR_EXP_8:
	JUMP L_AND_EXP_9
L_AND_EXP_9:
	EQ, INT(ti_1[temp]), INT(i[sp-0x4]), 2
	JUMP AND_END_10
AND_END_10:
	JUMP OR_END_11
OR_END_11:
	Branch INT(ti_1[temp]) ? IF_BODY_12 : IF_END_13
IF_BODY_12:
	JUMP B_14
B_14:
	RETURN 2
	JUMP B_15
B_15:
	JUMP IF_END_13
IF_END_13:
	SUB, INT(ti_2[temp]), INT(i[sp-0x4]), 1
	Call FUNC_fib; Params: INT(ti_2[temp]); RET INT(ti_3[temp])
	SUB, INT(ti_4[temp]), INT(i[sp-0x4]), 2
	Call FUNC_fib; Params: INT(ti_4[temp]); RET INT(ti_5[temp])
	ADD, INT(ti_6[temp]), INT(ti_3[temp]), INT(ti_5[temp])
	RETURN INT(ti_6[temp])
# func main : stack size 0x14
# param: 
FUNC_main:
	DEF, INT(i[sp-0x4]), 2
	DEF, INT(j[sp-0x8]), 5
	DEF, INT(a1[sp-0xc]), 1
	DEF, INT(a2[sp-0x10]), 2
	GETINT INT(i[sp-0x4])
	GETINT INT(j[sp-0x8])
	MUL, INT(ti_7[temp]), INT(i[sp-0x4]), INT(j[sp-0x8])
	NEG, INT(ti_8[temp]), INT(ti_7[temp])
	Call FUNC_fib; Params: 4; RET INT(ti_9[temp])
	MUL, INT(ti_10[temp]), INT(ti_8[temp]), INT(ti_9[temp])
	LOAD INT(ti_13[temp]), 4[ARRAY(a[data+0x4])]
	ADD, INT(ti_12[temp]), INT(ti_10[temp]), INT(ti_13[temp])
	MUL, INT(i[sp-0x4]), INT(ti_12[temp]), 5
	Call FUNC_fib; Params: 5; RET INT(ti_17[temp])
	ADD, INT(ti_18[temp]), INT(ti_17[temp]), 2
	Call FUNC_fib; Params: INT(ti_18[temp]); RET INT(ti_19[temp])
	SUB, INT(ti_20[temp]), 1197, INT(ti_19[temp])
	ADD, INT(j[sp-0x8]), INT(ti_20[temp]), -10091
	DEF, INT(k[sp-0x14]), -6
	JUMP L_OR_EXP_20
L_OR_EXP_20:
	JUMP L_AND_EXP_21
L_AND_EXP_21:
	LE, INT(ti_22[temp]), INT(i[sp-0x4]), 100
	JUMP AND_END_22
AND_END_22:
	JUMP OR_END_23
OR_END_23:
	Branch INT(ti_22[temp]) ? DO_BODY_17 : DO_END_19
	JUMP DO_BODY_17
DO_BODY_17:
	JUMP B_24
B_24:
	LOAD INT(ti_23[temp]), 0[ARRAY(a[data+0x4])]
	MUL, INT(ti_24[temp]), -6, -6
	ADD, INT(ti_25[temp]), INT(ti_23[temp]), INT(ti_24[temp])
	STORE INT(ti_25[temp]), 0[ARRAY(a[data+0x4])]
	LOAD INT(ti_26[temp]), 4[ARRAY(a[data+0x4])]
	MUL, INT(ti_27[temp]), -6, -6
	ADD, INT(ti_28[temp]), INT(ti_26[temp]), INT(ti_27[temp])
	STORE INT(ti_28[temp]), 4[ARRAY(a[data+0x4])]
	LOAD INT(ti_29[temp]), 8[ARRAY(a[data+0x4])]
	MUL, INT(ti_30[temp]), -6, -6
	ADD, INT(ti_31[temp]), INT(ti_29[temp]), INT(ti_30[temp])
	STORE INT(ti_31[temp]), 8[ARRAY(a[data+0x4])]
	LOAD INT(ti_32[temp]), 12[ARRAY(a[data+0x4])]
	MUL, INT(ti_33[temp]), -6, -6
	ADD, INT(ti_34[temp]), INT(ti_32[temp]), INT(ti_33[temp])
	STORE INT(ti_34[temp]), 12[ARRAY(a[data+0x4])]
	LOAD INT(ti_35[temp]), 16[ARRAY(a[data+0x4])]
	MUL, INT(ti_36[temp]), -6, -6
	ADD, INT(ti_37[temp]), INT(ti_35[temp]), INT(ti_36[temp])
	STORE INT(ti_37[temp]), 16[ARRAY(a[data+0x4])]
	LOAD INT(ti_38[temp]), 20[ARRAY(a[data+0x4])]
	MUL, INT(ti_39[temp]), -6, -6
	ADD, INT(ti_40[temp]), INT(ti_38[temp]), INT(ti_39[temp])
	STORE INT(ti_40[temp]), 20[ARRAY(a[data+0x4])]
	LOAD INT(ti_41[temp]), 24[ARRAY(a[data+0x4])]
	MUL, INT(ti_42[temp]), -6, -6
	ADD, INT(ti_43[temp]), INT(ti_41[temp]), INT(ti_42[temp])
	STORE INT(ti_43[temp]), 24[ARRAY(a[data+0x4])]
	LOAD INT(ti_44[temp]), 28[ARRAY(a[data+0x4])]
	MUL, INT(ti_45[temp]), -6, -6
	ADD, INT(ti_46[temp]), INT(ti_44[temp]), INT(ti_45[temp])
	STORE INT(ti_46[temp]), 28[ARRAY(a[data+0x4])]
	LOAD INT(ti_47[temp]), 32[ARRAY(a[data+0x4])]
	MUL, INT(ti_48[temp]), -6, -6
	ADD, INT(ti_49[temp]), INT(ti_47[temp]), INT(ti_48[temp])
	STORE INT(ti_49[temp]), 32[ARRAY(a[data+0x4])]
	LOAD INT(ti_50[temp]), 36[ARRAY(a[data+0x4])]
	MUL, INT(ti_51[temp]), -6, -6
	ADD, INT(ti_52[temp]), INT(ti_50[temp]), INT(ti_51[temp])
	STORE INT(ti_52[temp]), 36[ARRAY(a[data+0x4])]
	ADD, INT(i[sp-0x4]), INT(i[sp-0x4]), 1
	JUMP B_25
B_25:
	JUMP DO_CHECK_18
DO_CHECK_18:
	JUMP L_OR_EXP_26
L_OR_EXP_26:
	JUMP L_AND_EXP_27
L_AND_EXP_27:
	LE, INT(ti_54[temp]), INT(i[sp-0x4]), 100
	JUMP AND_END_28
AND_END_28:
	JUMP OR_END_29
OR_END_29:
	Branch INT(ti_54[temp]) ? DO_BODY_17 : DO_END_19
	JUMP DO_END_19
DO_END_19:
	ASS, INT(i[sp-0x4]), 0
	JUMP L_OR_EXP_33
L_OR_EXP_33:
	JUMP L_AND_EXP_34
L_AND_EXP_34:
	LT, INT(ti_55[temp]), INT(i[sp-0x4]), 10
	JUMP AND_END_35
AND_END_35:
	JUMP OR_END_36
OR_END_36:
	Branch INT(ti_55[temp]) ? DO_BODY_30 : DO_END_32
	JUMP DO_BODY_30
DO_BODY_30:
	JUMP B_37
B_37:
	MUL, INT(ti_56[temp]), INT(i[sp-0x4]), 4
	ADD, INT(ti_56[temp]), INT(ti_56[temp]), 0
	LOAD INT(ti_57[temp]), INT(ti_56[temp])[ARRAY(a[data+0x4])]
	PRINT_INT INT(ti_57[temp])
	PRINT_STR STR_1
	ADD, INT(i[sp-0x4]), INT(i[sp-0x4]), 1
	JUMP B_38
B_38:
	JUMP DO_CHECK_31
DO_CHECK_31:
	JUMP L_OR_EXP_39
L_OR_EXP_39:
	JUMP L_AND_EXP_40
L_AND_EXP_40:
	LT, INT(ti_59[temp]), INT(i[sp-0x4]), 10
	JUMP AND_END_41
AND_END_41:
	JUMP OR_END_42
OR_END_42:
	Branch INT(ti_59[temp]) ? DO_BODY_30 : DO_END_32
	JUMP DO_END_32
DO_END_32:
	PRINT_STR STR_2
	PRINT_INT INT(i[sp-0x4])
	PRINT_STR STR_1
	PRINT_INT INT(j[sp-0x8])
	PRINT_STR STR_1
	PRINT_INT -6
	PRINT_STR STR_2
	RETURN 0
